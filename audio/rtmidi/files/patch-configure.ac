--- configure.ac.orig	2017-04-21 15:27:54 UTC
+++ configure.ac
@@ -65,7 +65,7 @@ AC_MSG_CHECKING(whether to compile debug
 AC_ARG_ENABLE(debug,
   [  --enable-debug = enable various debug output],
   [AC_SUBST( cppflag, [-D__RTMIDI_DEBUG__] ) AC_SUBST( cxxflag, [-g] ) AC_SUBST( object_path, [Debug] ) AC_MSG_RESULT(yes)],
-  [AC_SUBST( cppflag, [] ) AC_SUBST( cxxflag, [-O3] ) AC_SUBST( object_path, [Release] ) AC_MSG_RESULT(no)])
+  [AC_SUBST( cppflag, [] ) AC_SUBST( object_path, [Release] ) AC_MSG_RESULT(no)])
 
 # Set paths if prefix is defined
 if test "x$prefix" != "x" && test "x$prefix" != "xNONE"; then
@@ -78,7 +78,7 @@ CPPFLAGS="$CPPFLAGS $cppflag"
 
 # For debugging and optimization ... overwrite default because it has both -g and -O2
 #CXXFLAGS="$CXXFLAGS $cxxflag"
-CXXFLAGS="$cxxflag"
+CXXFLAGS+="$cxxflag"
 
 # Check compiler and use -Wall if gnu.
 if [test $GXX = "yes" ;] then
@@ -105,25 +105,25 @@ AC_SUBST( api, [""] )
 AC_SUBST( req, [""] )
 AC_MSG_CHECKING(for MIDI API)
 case $host in
-  *-*-linux*)
+  *-*-freebsd*)
   AC_ARG_WITH(jack, [  --with-jack = choose JACK server support (mac and linux only)], [
   api="$api -D__UNIX_JACK__"
   AC_MSG_RESULT(using JACK)
   AC_CHECK_LIB(jack, jack_client_open, , AC_MSG_ERROR(JACK support requires the jack library!))], )
 
   # Look for ALSA flag
-  AC_ARG_WITH(alsa, [  --with-alsa = choose native ALSA sequencer API support (linux only)], [
-    api="$api -D__LINUX_ALSA__"
-    req="$req alsa"
-    AC_MSG_RESULT(using ALSA)
-    AC_CHECK_LIB(asound, snd_seq_open, , AC_MSG_ERROR(ALSA support requires the asound library!))], )
+  #AC_ARG_WITH(alsa, [  --with-alsa = choose native ALSA sequencer API support (linux only)], [
+  #  api="$api -D__LINUX_ALSA__"
+  #  req="$req alsa"
+  #  AC_MSG_RESULT(using ALSA)
+  #  AC_CHECK_LIB(asound, snd_seq_open, , AC_MSG_ERROR(ALSA support requires the asound library!))], )
 
-  if [test "$api" == "";] then
-    AC_MSG_RESULT(using ALSA)
-    AC_SUBST( api, [-D__LINUX_ALSA__] )
-    req="$req alsa"
-    AC_CHECK_LIB(asound, snd_seq_open, , AC_MSG_ERROR(ALSA sequencer support requires the asound library!))
-  fi
+  #if [test "$api" == "";] then
+  #  AC_MSG_RESULT(using ALSA)
+  #  AC_SUBST( api, [-D__LINUX_ALSA__] )
+  #  req="$req alsa"
+  #  AC_CHECK_LIB(asound, snd_seq_open, , AC_MSG_ERROR(ALSA sequencer support requires the asound library!))
+  #fi
 
   # Checks for pthread library.
   AC_CHECK_LIB(pthread, pthread_create, , AC_MSG_ERROR(RtMidi requires the pthread library!))
