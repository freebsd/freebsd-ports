--- lib/Makefile.in.orig	1998-07-14 22:35:23 UTC
+++ lib/Makefile.in
@@ -13,8 +13,8 @@ CPPFLAGS=	$(CC_OPTIONS) -I. -I../include
 		$(CC) -c $(CPPFLAGS) $(CFLAGS) $<
 
 TARGET=		librp.a
-SRCS=		getopt.c getopt1.c hash.c strdup.c tilde.c xmalloc.c
-OBJS=		getopt.o getopt1.o hash.o strdup.o tilde.o xmalloc.o
+SRCS=		hash.c tilde.c xmalloc.c
+OBJS=		hash.o tilde.o xmalloc.o
 
 all:		$(TARGET)
 
--- rplayd/helper.c.orig	1999-03-10 07:58:03 UTC
+++ rplayd/helper.c
@@ -110,7 +110,7 @@ helper_read(filename)
 	    done(1);
 	}
 	//memset ((char *) &hp->pattern, 0, sizeof (hp->pattern));
-	error = regncomp(&hp->pattern, pat, strlen(pat), REG_ICASE | REG_NOSUB);
+	error = regcomp(&hp->pattern, pat, REG_EXTENDED | REG_ICASE | REG_NOSUB);
 	if (error)
 	{
 	    report(REPORT_ERROR, "helper_read: %d line %d\n", error, line);
@@ -188,7 +188,7 @@ helper_lookup(sound)
 
     for (hp = helpers; hp; hp = hp->next)
     {
-	if (regnexec(&hp->pattern, sound, strlen(sound), 0, 0, 0) == 0)
+	if (regexec(&hp->pattern, sound, 0, 0, 0) == 0)
 	{
 	    return hp;
 	}
--- rplayd/host.c.orig	1999-06-09 06:27:44 UTC
+++ rplayd/host.c
@@ -95,10 +95,10 @@ host_read(filename)
     //memset ((char *) &access_write, 0, sizeof (access_write));
     //memset ((char *) &access_execute, 0, sizeof (access_execute));
 
-    strcpy(expr_read, "^\\(");
-    strcpy(expr_write, "^\\(");
-    strcpy(expr_execute, "^\\(");
-    strcpy(expr_monitor, "^\\(");
+    strcpy(expr_read, "^(");
+    strcpy(expr_write, "^(");
+    strcpy(expr_execute, "^(");
+    strcpy(expr_monitor, "^(");
 
     do
     {
@@ -162,7 +162,7 @@ host_read(filename)
 
     if (strlen(expr_read) == 3)
     {
-	strcat(expr_read, "\\)");
+	strcat(expr_read, ")");
     }
     else
     {
@@ -171,7 +171,7 @@ host_read(filename)
     strcat(expr_read, "$");
     if (strlen(expr_write) == 3)
     {
-	strcat(expr_write, "\\)");
+	strcat(expr_write, ")");
     }
     else
     {
@@ -180,7 +180,7 @@ host_read(filename)
     strcat(expr_write, "$");
     if (strlen(expr_execute) == 3)
     {
-	strcat(expr_execute, "\\)");
+	strcat(expr_execute, ")");
     }
     else
     {
@@ -189,7 +189,7 @@ host_read(filename)
     strcat(expr_execute, "$");
     if (strlen(expr_monitor) == 3)
     {
-	strcat(expr_monitor, "\\)");
+	strcat(expr_monitor, ")");
     }
     else
     {
@@ -197,35 +197,35 @@ host_read(filename)
     }
     strcat(expr_monitor, "$");
 
-    error = regncomp(&access_read, expr_read, strlen(expr_read),
-		     REG_ICASE | REG_NOSUB);
+    error = regcomp(&access_read, expr_read,
+		     REG_EXTENDED | REG_ICASE | REG_NOSUB);
     if (error)
     {
-	report(REPORT_ERROR, "host_read: regncomp: %d\n", error);
+	report(REPORT_ERROR, "host_read: regcomp: %d\n", error);
 	done(1);
     }
 
-    error = regncomp(&access_write, expr_write, strlen(expr_write),
-		     REG_ICASE | REG_NOSUB);
+    error = regcomp(&access_write, expr_write,
+		     REG_EXTENDED | REG_ICASE | REG_NOSUB);
     if (error)
     {
-	report(REPORT_ERROR, "host_read: regncomp: %d\n", error);
+	report(REPORT_ERROR, "host_read: regcomp: %d\n", error);
 	done(1);
     }
 
-    error = regncomp(&access_execute, expr_execute, strlen(expr_execute),
-		     REG_ICASE | REG_NOSUB);
+    error = regcomp(&access_execute, expr_execute,
+		     REG_EXTENDED | REG_ICASE | REG_NOSUB);
     if (error)
     {
-	report(REPORT_ERROR, "host_read: regncomp: %d\n", error);
+	report(REPORT_ERROR, "host_read: regcomp: %d\n", error);
 	done(1);
     }
 
-    error = regncomp(&access_monitor, expr_monitor, strlen(expr_monitor),
-		     REG_ICASE | REG_NOSUB);
+    error = regcomp(&access_monitor, expr_monitor,
+		     REG_EXTENDED | REG_ICASE | REG_NOSUB);
     if (error)
     {
-	report(REPORT_ERROR, "host_read: regncomp: %d\n", error);
+	report(REPORT_ERROR, "host_read: regcomp: %d\n", error);
 	done(1);
     }
 }
@@ -354,22 +354,22 @@ host_insert(expr_read, expr_write, expr_
 	{
 	case HOST_READ:
 	    strcat(expr_read, re_name);
-	    strcat(expr_read, "\\|");
+	    strcat(expr_read, "|");
 	    break;
 
 	case HOST_WRITE:
 	    strcat(expr_write, re_name);
-	    strcat(expr_write, "\\|");
+	    strcat(expr_write, "|");
 	    break;
 
 	case HOST_EXECUTE:
 	    strcat(expr_execute, re_name);
-	    strcat(expr_execute, "\\|");
+	    strcat(expr_execute, "|");
 	    break;
 
 	case HOST_MONITOR:
 	    strcat(expr_monitor, re_name);
-	    strcat(expr_monitor, "\\|");
+	    strcat(expr_monitor, "|");
 	    break;
 
 	default:
@@ -432,7 +432,7 @@ host_access(sin, access_mode)
 	done(1);
     }
 
-    n = regnexec(re, p, strlen(p), 0, 0, 0);
+    n = regexec(re, p, 0, 0, 0);
 
     return !n;
 }
--- rplayd/native.c.orig	1999-03-10 07:58:03 UTC
+++ rplayd/native.c
@@ -32,6 +32,7 @@
 #include "rplayd.h"
 #include "native.h"
 #include "ulaw.h"
+#include <string.h>
 
 /* Native means 16-bit signed. */
 
--- rplayd/sound.c.orig	1999-06-09 06:27:44 UTC
+++ rplayd/sound.c
@@ -96,14 +96,14 @@ bad_dirs_init()
 
     dirs = strdup(BAD_DIRS);	/* XXX */
 
-    length = strlen("^\\(") + strlen("\\)") + strlen(dirs) + 1;
+    length = strlen("^(") + strlen(")") + strlen(dirs) + 1;
 
     //length += strlen ("^");
     for (p = dirs; *p; p++)
     {
 	if (*p == ':')
 	{
-	    length += strlen("\\|") - strlen(":");
+	    length += strlen("|") - strlen(":");
 	}
     }
 
@@ -119,7 +119,7 @@ bad_dirs_init()
     }
 
     first = 1;
-    strcpy(buf, "^\\(");
+    strcpy(buf, "^(");
     while (p = (char *) strtok(first ? dirs : 0, ":"))
     {
 	if (first)
@@ -129,12 +129,12 @@ bad_dirs_init()
 	}
 	else
 	{
-	    //strcat (buf, "\\|^");
-	    strcat(buf, "\\|");
+	    //strcat (buf, "|^");
+	    strcat(buf, "|");
 	}
 	strcat(buf, p);
     }
-    strcat(buf, "\\)");
+    strcat(buf, ")");
 
 #if 0
     report(REPORT_DEBUG, "bad_dirs=%s, strlen=%d, length=%d\n",
@@ -143,9 +143,9 @@ bad_dirs_init()
 
     //memset ((char *) &bad_dirs, 0, sizeof (bad_dirs));
 
-    if (regncomp(&bad_dirs, buf, strlen(buf), REG_ICASE | REG_NOSUB))
+    if (regcomp(&bad_dirs, buf, REG_EXTENDED | REG_ICASE | REG_NOSUB))
     {
-	report(REPORT_ERROR, "bad_dirs: regncomp failed\n");
+	report(REPORT_ERROR, "bad_dirs: regcomp failed\n");
 	done(1);
     }
 
@@ -162,7 +162,7 @@ bad_dir(dir)
 #endif
 {
     /* return 1 if bad */
-    return regnexec(&bad_dirs, dir, strlen(dir), 0, 0, 0) ? 0 : 1;
+    return regexec(&bad_dirs, dir, 0, 0, 0) ? 0 : 1;
 }
 
 #endif /* BAD_DIRS */
