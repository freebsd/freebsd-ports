--- CMakeLists.txt.orig	2024-07-29 16:06:12 UTC
+++ CMakeLists.txt
@@ -8,13 +8,13 @@ add_definitions(-DGAME_VERSION="1.0.5")
 
 # define constants
 add_definitions(-DGAME_VERSION="1.0.5")
-add_definitions(-D_IRR_STATIC_LIB_)
-add_definitions(-DdIDEDOUBLE)
-add_definitions(-DCCD_IDEDOUBLE)
-add_definitions(-DdTRIMESH_ENABLED)
-add_definitions(-DdTRIMESH_OPCODE)
-add_definitions(-DdLIBCCD_ENABLED)
-add_definitions(-DdLIBCCD_CYL_CYL)
+#add_definitions(-D_IRR_STATIC_LIB_)
+#add_definitions(-DdIDEDOUBLE)
+#add_definitions(-DCCD_IDEDOUBLE)
+#add_definitions(-DdTRIMESH_ENABLED)
+#add_definitions(-DdTRIMESH_OPCODE)
+#add_definitions(-DdLIBCCD_ENABLED)
+#add_definitions(-DdLIBCCD_CYL_CYL)
 
 # add extra find modules
 set(CMAKE_MODULE_PATH "${PROJECT_SOURCE_DIR}/cmake;${CMAKE_MODULE_PATH}")
@@ -53,6 +53,14 @@ include_directories(${X11_xf86vmode_INCLUDE_PATH})
 include_directories(${X11_X11_INCLUDE_PATH})
 include_directories(${X11_xf86vmode_INCLUDE_PATH})
 
+# unbundled libs
+include_directories($ENV{LOCALBASE}/include)
+set(EXTRA_LIBS ${EXTRA_LIBS} $ENV{LOCALBASE}/lib/libtinyxml2.so)
+set(EXTRA_LIBS ${EXTRA_LIBS} $ENV{LOCALBASE}/lib/libIrrlicht.so)
+include_directories($ENV{LOCALBASE}/include/irrlicht)
+set(EXTRA_LIBS ${EXTRA_LIBS} $ENV{LOCALBASE}/lib/liblua-5.3.so)
+set(EXTRA_LIBS ${EXTRA_LIBS} $ENV{LOCALBASE}/lib/libode.so)
+
 # pandora devices
 if(PANDORA)
 	add_definitions("-DPANDORA")
@@ -127,15 +135,15 @@ else()
 else()
 
 	# linux installation
-	install(TARGETS ${CMAKE_PROJECT_NAME} RUNTIME DESTINATION share/games/${CMAKE_PROJECT_NAME})
-	install(DIRECTORY ${PROJECT_SOURCE_DIR}/working/fonts DESTINATION share/games/${CMAKE_PROJECT_NAME})
-	install(DIRECTORY ${PROJECT_SOURCE_DIR}/working/levels DESTINATION share/games/${CMAKE_PROJECT_NAME})
-	install(DIRECTORY ${PROJECT_SOURCE_DIR}/working/meshes DESTINATION share/games/${CMAKE_PROJECT_NAME})
-	install(DIRECTORY ${PROJECT_SOURCE_DIR}/working/scripts DESTINATION share/games/${CMAKE_PROJECT_NAME})
-	install(DIRECTORY ${PROJECT_SOURCE_DIR}/working/shaders DESTINATION share/games/${CMAKE_PROJECT_NAME})
-	install(DIRECTORY ${PROJECT_SOURCE_DIR}/working/sounds DESTINATION share/games/${CMAKE_PROJECT_NAME})
-	install(DIRECTORY ${PROJECT_SOURCE_DIR}/working/textures DESTINATION share/games/${CMAKE_PROJECT_NAME})
-	install(DIRECTORY ${PROJECT_SOURCE_DIR}/working/ui DESTINATION share/games/${CMAKE_PROJECT_NAME})
+	install(TARGETS ${CMAKE_PROJECT_NAME} RUNTIME DESTINATION share/${CMAKE_PROJECT_NAME})
+	install(DIRECTORY ${PROJECT_SOURCE_DIR}/working/fonts DESTINATION share/${CMAKE_PROJECT_NAME})
+	install(DIRECTORY ${PROJECT_SOURCE_DIR}/working/levels DESTINATION share/${CMAKE_PROJECT_NAME})
+	install(DIRECTORY ${PROJECT_SOURCE_DIR}/working/meshes DESTINATION share/${CMAKE_PROJECT_NAME})
+	install(DIRECTORY ${PROJECT_SOURCE_DIR}/working/scripts DESTINATION share/${CMAKE_PROJECT_NAME})
+	install(DIRECTORY ${PROJECT_SOURCE_DIR}/working/shaders DESTINATION share/${CMAKE_PROJECT_NAME})
+	install(DIRECTORY ${PROJECT_SOURCE_DIR}/working/sounds DESTINATION share/${CMAKE_PROJECT_NAME})
+	install(DIRECTORY ${PROJECT_SOURCE_DIR}/working/textures DESTINATION share/${CMAKE_PROJECT_NAME})
+	install(DIRECTORY ${PROJECT_SOURCE_DIR}/working/ui DESTINATION share/${CMAKE_PROJECT_NAME})
 	install(FILES ${PROJECT_SOURCE_DIR}/deployment/${CMAKE_PROJECT_NAME}.png DESTINATION share/icons/hicolor/256x256/apps)
 	install(FILES ${PROJECT_SOURCE_DIR}/deployment/${CMAKE_PROJECT_NAME}.desktop DESTINATION share/applications)
 	install(FILES ${PROJECT_SOURCE_DIR}/deployment/${CMAKE_PROJECT_NAME}.xml DESTINATION share/metainfo)
