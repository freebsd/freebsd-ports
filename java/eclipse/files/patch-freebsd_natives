--- ./eclipse.platform.resources/bundles/org.eclipse.core.filesystem/natives/unix/freebsd/Makefile.orig	2014-04-15 21:04:15.000000000 -0500
+++ ./eclipse.platform.resources/bundles/org.eclipse.core.filesystem/natives/unix/freebsd/Makefile	2014-04-16 07:41:08.000000000 -0500
@@ -17,7 +17,7 @@
 LIB_NAME_FULL = libunixfile_1_0_0.so
 
 #Set this to be your OS type
-OS_TYPE = linux
+OS_TYPE = freebsd
 
 #Set this to be the location of your JRE
 ifeq (${JAVA_HOME},)
@@ -25,15 +25,11 @@
 endif
 
 JDK_INCLUDE = -I ${JAVA_HOME}/include -I ${JAVA_HOME}/include/${OS_TYPE}
-OPT_FLAGS=-O2 -g -s -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64
+OPT_FLAGS=-O2 -g -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64
 
 core:
-	gcc $(OPT_FLAGS) -fPIC -c $(JDK_INCLUDE) -o $(CORE.O) $(CORE.C)
-	gcc $(OPT_FLAGS) -shared -Wl,-soname,$(LIB_NAME) -o $(LIB_NAME_FULL) $(CORE.O) -lc
+	$(CC) $(OPT_FLAGS) -fPIC -c $(JDK_INCLUDE) -o $(CORE.O) $(CORE.C)
+	$(CC) $(OPT_FLAGS) -shared -Wl,-soname,$(LIB_NAME) -o $(LIB_NAME_FULL) $(CORE.O) -lc
 
 clean:
 	rm -f $(CORE.O) $(LIB_NAME_FULL)
-
-install: core
-	rm -f ../../../../org.eclipse.core.filesystem.linux.x86/os/linux/x86/libunixfile_1_0_0.so
-	mv libunixfile_1_0_0.so ../../../../org.eclipse.core.filesystem.linux.x86/os/linux/x86/
--- ./eclipse.platform.team/bundles/org.eclipse.core.net/natives/unix/freebsd/makefile.orig	2014-04-15 21:27:02.000000000 -0500
+++ ./eclipse.platform.team/bundles/org.eclipse.core.net/natives/unix/freebsd/makefile	2014-04-16 07:45:00.000000000 -0500
@@ -18,7 +18,7 @@
 LIB_NAME = gnomeproxy.so
 LIB_NAME_FULL = libgnomeproxy-1.0.0.so
 
-OS_TYPE = linux
+OS_TYPE = freebsd
 JDK_INCLUDE = -I${JAVA_HOME}/include -I${JAVA_HOME}/include/${OS_TYPE}
 INCLUDE = `pkg-config --cflags gconf-2.0`
 COMPILER_FLAGS = -O0 -fPIC -g3 -Wall -c -fmessage-length=0 ${TARGET_ENVIRONMENT}
@@ -30,15 +30,15 @@
 
 compile:
 	@echo "Building file: $(GNOMEPROXY.O)"
-	@echo "Invoking: GCC C Compiler"
-	gcc $(INCLUDE) $(JDK_INCLUDE) $(COMPILER_FLAGS) -o $(GNOMEPROXY.O) $(GNOMEPROXY.C)
+	@echo "Invoking: C Compiler"
+	$(CC) $(INCLUDE) $(JDK_INCLUDE) $(COMPILER_FLAGS) -o $(GNOMEPROXY.O) $(GNOMEPROXY.C)
 	@echo "Finished building: $(GNOMEPROXY.O)"
 	@echo " "
 
 link: compile
 	@echo "Building target: $(LIB_NAME_FULL)"
-	@echo "Invoking: GCC C Linker"
-	gcc $(LINKER_FLAGS) -shared -Wl,-soname,$(LIB_NAME) -o $(LIB_NAME_FULL) $(LIBS) $(GNOMEPROXY.O) -lc
+	@echo "Invoking: C Linker"
+	$(CC) $(LINKER_FLAGS) -shared -Wl,-soname,$(LIB_NAME) -o $(LIB_NAME_FULL) $(LIBS) $(GNOMEPROXY.O) -lc
 	@echo "Finished building target: $(LIB_NAME_FULL)"
 	@echo " "
 
--- ./rt.equinox.framework/features/org.eclipse.equinox.executable.feature/library/gtk/make_freebsd.mak.orig	2014-04-15 21:32:58.000000000 -0500
+++ ./rt.equinox.framework/features/org.eclipse.equinox.executable.feature/library/gtk/make_freebsd.mak	2014-04-16 07:57:53.000000000 -0500
@@ -42,15 +42,15 @@
 EXEC = $(PROGRAM_OUTPUT)
 DLL = $(PROGRAM_LIBRARY)
 #LIBS = `pkg-config --libs-only-L gtk+-2.0` -lgtk-x11-2.0 -lgdk_pixbuf-2.0 -lgobject-2.0 -lgdk-x11-2.0 -lpthread -ldl -lX11
-LIBS = -lpthread -ldl
+LIBS = -pthread
 GTK_LIBS = \
  -DGTK_LIB="\"libgtk-x11-2.0.so.0\"" -DGDK_LIB="\"libgdk-x11-2.0.so.0\"" \
  -DGTK3_LIB="\"libgtk-3.so.0\"" -DGDK3_LIB="\"libgdk-3.so.0\"" \
  -DPIXBUF_LIB="\"libgdk_pixbuf-2.0.so.0\"" -DGOBJ_LIB="\"libgobject-2.0.so.0\"" -DX11_LIB="\"libX11.so.6\""
 LFLAGS = ${M_ARCH} -shared -fpic -Wl,--export-dynamic 
-CFLAGS = ${M_ARCH} -g -s -Wall\
+CFLAGS = ${M_ARCH} -g -Wall -pthread\
 	-fpic \
-	-DLINUX \
+	-DFREEBSD \
 	-DMOZILLA_FIX \
 	-DDEFAULT_OS="\"$(DEFAULT_OS)\"" \
 	-DDEFAULT_OS_ARCH="\"$(DEFAULT_OS_ARCH)\"" \
@@ -59,7 +59,7 @@
 	$(GTK_LIBS) \
 	-I. \
 	-I.. \
-	-I$(JAVA_HOME)/include -I$(JAVA_HOME)/include/linux \
+	-I$(JAVA_HOME)/include -I$(JAVA_HOME)/include/$(DEFAULT_OS) \
 	`pkg-config --cflags gtk+-2.0`
 
 all: $(EXEC) $(DLL)
@@ -98,10 +98,10 @@
 	$(CC) $(CFLAGS) -c ../eclipseNix.c -o eclipseNix.o
 
 $(EXEC): $(MAIN_OBJS) $(COMMON_OBJS)
-	$(CC) ${M_ARCH} -o $(EXEC) $(MAIN_OBJS) $(COMMON_OBJS) $(LIBS)
+	$(CC) -s ${M_ARCH} -o $(EXEC) $(MAIN_OBJS) $(COMMON_OBJS) $(LIBS)
 	
 $(DLL): $(DLL_OBJS) $(COMMON_OBJS)
-	$(CC) $(LFLAGS) -o $(DLL) $(DLL_OBJS) $(COMMON_OBJS) $(LIBS)
+	$(CC) -s $(LFLAGS) -o $(DLL) $(DLL_OBJS) $(COMMON_OBJS) $(LIBS)
 
 install: all
 	cp $(EXEC) $(OUTPUT_DIR)
