--- configure.ac.orig	2016-05-10 12:25:35 UTC
+++ configure.ac
@@ -50,8 +50,16 @@ else
   AC_MSG_RESULT(no)
 fi
 
+AC_MSG_CHECKING(for BSD)
+if test `uname | grep -e BSD -e DragonFly | wc -l` = "1"; then
+  bbsd=true
+  AC_MSG_RESULT(compile in BSD)
+else
+  AC_MSG_RESULT(no)
+fi
+
 AC_MSG_CHECKING(for Linux)
-if test "$bmac" != "true" -a "$bwin32" != "true"; then
+if test "$bmac" != "true" -a "$bwin32" != "true" -a "$bbsd" != "true"; then
   blinux=true
   AC_MSG_RESULT(compile in linux)
 else
@@ -93,6 +101,11 @@ if test "$bwin32" != true; then
       [compile_fuse=$enableval],[compile_fuse="yes"])
 fi
 
+if test "$bbsd" = true; then
+   AC_ARG_ENABLE(fuse, AC_HELP_STRING([--enable-fuse], [enable fuse virtual file system]),
+      [compile_fuse=$enableval],[compile_fuse="no"])
+fi
+
 AC_ARG_ENABLE(client, AC_HELP_STRING([--enable-client], [enable client]),
    [compile_client=$enableval],[compile_client="yes"])
 
@@ -148,6 +161,7 @@ AM_CONDITIONAL([COMPILE_FUSE], [test "${
 
 AM_CONDITIONAL([WIN32], [test "$bwin32" = "true"])
 AM_CONDITIONAL([MACOS], [test "$bmac" = "true"])
+AM_CONDITIONAL([BSD], [test "$bbsd" = "true"])
 AM_CONDITIONAL([LINUX], [test "$blinux" = "true"])
 
 
@@ -193,6 +207,9 @@ if test "$bwin32" = true; then
   LIB_MAC=
   MSVC_CFLAGS="-D__MSVCRT__ -D__MSVCRT_VERSION__=0x0601"
   LIB_CRYPT32=-lcrypt32
+  ZLIB_LIBS=
+  LIB_INOTIFY=
+  LIB_KVM=
 elif test "$bmac" = true ; then
   LIB_WS32=
   LIB_GDI32=
@@ -207,6 +224,26 @@ elif test "$bmac" = true ; then
   LIB_MAC="-framework CoreServices"
   LIB_CRYPT32=
   LIB_ICONV=-liconv
+  ZLIB_LIBS=
+  LIB_INOTIFY=
+  LIB_KVM=
+elif test "$bbsd" = true ; then
+  LIB_WS32=
+  LIB_GDI32=
+  LIB_RT=
+  LIB_INTL=
+  LIB_RESOLV=
+  LIB_UUID=-luuid
+  LIB_IPHLPAPI=
+  LIB_SHELL32=
+  LIB_PSAPI=
+  LIB_MAC=
+  MSVC_CFLAGS=
+  LIB_CRYPT32=
+  LIB_ICONV=-liconv
+  ZLIB_LIBS=-lz
+  LIB_INOTIFY=-linotify
+  LIB_KVM=-lkvm
 else
   LIB_WS32=
   LIB_GDI32=
@@ -220,6 +257,9 @@ else
   LIB_MAC=
   MSVC_CFLAGS=
   LIB_CRYPT32=
+  ZLIB_LIBS=-lz
+  LIB_INOTIFY=-linotify
+  LIB_KVM=
 fi
 
 AC_SUBST(LIB_WS32)
@@ -232,6 +272,9 @@ AC_SUBST(LIB_IPHLPAPI)
 AC_SUBST(LIB_SHELL32)
 AC_SUBST(LIB_PSAPI)
 AC_SUBST(LIB_MAC)
+AC_SUBST(ZLIB_LIBS)
+AC_SUBST(LIB_INOTIFY)
+AC_SUBST(LIB_KVM)
 AC_SUBST(MSVC_CFLAGS)
 AC_SUBST(LIB_CRYPT32)
 AC_SUBST(LIB_ICONV)
@@ -246,7 +289,9 @@ ZDB_REQUIRED=2.10
 #LIBNAUTILUS_EXTENSION_REQUIRED=2.30.1
 CURL_REQUIRED=7.17
 FUSE_REQUIRED=2.7.3
+if test "$blinux" = true ; then
 ZLIB_REQUIRED=1.2.0
+fi
 
 PKG_CHECK_MODULES(SSL, [openssl])
 AC_SUBST(SSL_CFLAGS)
@@ -276,9 +321,11 @@ PKG_CHECK_MODULES(LIBEVENT, [libevent >=
 AC_SUBST(LIBEVENT_CFLAGS)
 AC_SUBST(LIBEVENT_LIBS)
 
+if test "$blinux" = true ; then
 PKG_CHECK_MODULES(ZLIB, [zlib >= $ZLIB_REQUIRED])
 AC_SUBST(ZLIB_CFLAGS)
 AC_SUBST(ZLIB_LIBS)
+fi
 
 if test x${compile_python} = xyes; then
    AM_PATH_PYTHON([2.6])
