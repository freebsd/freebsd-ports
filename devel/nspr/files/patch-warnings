--- ../pr/src/pthreads/ptio.c	2009-05-09 23:07:02.000000000 -0400
+++ ../pr/src/pthreads/ptio.c	2009-11-04 15:24:47.000000000 -0500
@@ -3758,7 +3769,7 @@
      * We use these variables to figure out how much time has
      * elapsed and how much of the timeout still remains.
      */
-    PRIntervalTime start, elapsed, remaining;
+    PRIntervalTime start = 0, elapsed, remaining;
 
     if (pt_TestAbort()) return -1;
 
@@ -4927,6 +4938,7 @@
 
     if (timeout == PR_INTERVAL_NO_TIMEOUT) {
         tvp = NULL;
+        start = 0; /* Not needed, but shuts down a warning */
     } else {
         tv.tv_sec = (PRInt32)PR_IntervalToSeconds(timeout);
         tv.tv_usec = (PRInt32)PR_IntervalToMicroseconds(
--- ../pr/src/pthreads/ptsynch.c	Mon Nov 22 16:24:53 2004
+++ ../pr/src/pthreads/ptsynch.c	Mon Jul 25 00:03:49 2005
@@ -63,5 +63,5 @@
 #endif  /* defined(DEBUG) */
 
-#if defined(FREEBSD)
+#if defined(FREEBSD) && (defined(DEBUG) || defined(FORCE_PR_ASSERT))
 /*
  * On older versions of FreeBSD, pthread_mutex_trylock returns EDEADLK.
--- ../pr/include/prcountr.h	Sun Apr 25 11:00:47 2004
+++ ../pr/include/prcountr.h	Mon Jul 25 20:43:03 2005
@@ -427,5 +427,5 @@
     (counter) = PR_GetCounter((handle))
 #else
-#define PR_GET_COUNTER(counter,handle) 0
+#define PR_GET_COUNTER(counter,handle)
 #endif
 
@@ -501,5 +501,5 @@
     (next) = PR_FindNextCounterQname((handle))
 #else
-#define PR_FIND_NEXT_COUNTER_QNAME(next,handle) NULL
+#define PR_FIND_NEXT_COUNTER_QNAME(next,handle)
 #endif
 
--- ../pr/src/io/prprf.c	2008-05-31 11:10:17.000000000 -0400
+++ ../pr/src/io/prprf.c	2009-11-04 14:27:19.000000000 -0500
@@ -698,5 +698,5 @@
     int rv, i;
     struct NumArg* nas = NULL;
-    struct NumArg* nap;
+    struct NumArg* nap = NULL;
     struct NumArg  nasArray[ NAS_DEFAULT_NUM ];
     char  pattern[20];
--- ../pr/src/io/prscanf.c	2005-08-05 18:44:06.000000000 -0400
+++ ../pr/src/io/prscanf.c	2009-11-04 14:31:24.000000000 -0500
@@ -230,5 +230,5 @@
 {
     char buf[FMAX + 1], *p;
-    int ch;
+    int ch = -1;
     static const char digits[] = "0123456789abcdefABCDEF";
     PRBool seenDigit = PR_FALSE;
@@ -340,5 +340,5 @@
 {
     char buf[FMAX + 1], *p;
-    int ch;
+    int ch = -1;
     PRBool seenDigit = PR_FALSE;
 
--- ../pr/src/misc/pralarm.c	2009-05-06 01:40:37.000000000 -0400
+++ ../pr/src/misc/pralarm.c	2009-11-04 14:34:27.000000000 -0500
@@ -134,5 +134,5 @@
     while (why != abort)
     {
-        PRIntervalTime pause;
+        PRIntervalTime pause = 0;
 
         PR_Lock(alarm->lock);
--- ../pr/src/misc/prdtoa.c	2009-10-05 18:58:41.000000000 -0400
+++ ../pr/src/misc/prdtoa.c	2009-11-04 14:36:24.000000000 -0500
@@ -2765,5 +2765,5 @@
 	*/
 
-	int bbits, b2, b5, be, dig, i, ieps, ilim, ilim0, ilim1,
+	int bbits, b2, b5, be, dig, i, ieps, ilim = -1, ilim0, ilim1 = -1,
 		j, j1, k, k0, k_check, leftright, m2, m5, s2, s5,
 		spec_case, try_quick;
--- ../pr/src/misc/prtpool.c	2005-04-28 18:37:25.000000000 -0400
+++ ../pr/src/misc/prtpool.c	2009-11-04 15:08:05.000000000 -0500
@@ -314,6 +314,6 @@
 int rv;
 PRCList *qp, *nextqp;
-PRPollDesc *pollfds;
-PRJob **polljobs;
+PRPollDesc *pollfds = NULL;
+PRJob **polljobs = NULL;
 int poll_timeout;
 PRIntervalTime now;
