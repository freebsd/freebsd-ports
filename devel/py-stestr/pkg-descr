stestr is parallel Python test runner designed to execute unittest test suites
using multiple processes to split up execution of a test suite. It also will
store a history of all test runs to help in debugging failures and optimizing
the scheduler to improve speed. To accomplish this goal it uses the subunit
protocol to facilitate streaming and storing results from multiple workers.

stestr originally started as a fork of the testrepository project. But, instead
of being an interface for any test runner that used subunit, like
testrepository, stestr concentrated on being a dedicated test runner for python
projects. While stestr was originally forked from testrepository it is not
backwards compatible with testrepository. At a high level the basic concepts of
operation are shared between the two projects but the actual usage is not
exactly the same.
