This module is meant to be the definitive implementation of iterators, as
popularized by Mark Jason Dominus's lectures and recent book (Higher Order
Perl, Morgan Kauffman, 2005).

An "iterator" is an object, represented as a code block that generates the
"next value" of a sequence, and generally implemented as a closure. When
you need a value to operate on, you pull it from the iterator. If it
depends on other iterators, it pulls values from them when it needs to.
Iterators can be chained together (see Iterator::Util for functions that
help you do just that), queuing up work to be done but not actually doing
it until a value is needed at the front end of the chain. At that time,
one data value is pulled through the chain.

Iterator.pm provides a class that simplifies creation and use of these
iterator objects. Other Iterator:: modules (see "SEE ALSO") provide many
general-purpose and special-purpose iterator functions.

WWW: http://search.cpan.org/dist/Iterator/
