--- nuitka/build/SingleExe.scons.orig	2016-04-24 12:07:33 UTC
+++ nuitka/build/SingleExe.scons
@@ -110,9 +110,11 @@ uninstalled_python = getBoolOption("unin
 # Unstriped mode: Do not remove debug symbols.
 unstripped_mode = getBoolOption("unstripped_mode", False)
 
-# Clang compiler mode, default on MacOS X and FreeBSD, optional on Linux.
+# Clang compiler mode, default on MacOS X and FreeBSD (unless PowerPC),
+# optional on Linux.
 clang_mode = getBoolOption("clang_mode", False)
-if sys.platform == "darwin" or "freebsd" in sys.platform:
+if sys.platform == "darwin" or ("freebsd" in sys.platform and
+  platform.machine() != "powerpc"):
     clang_mode = True
 
 # MinGW compiler mode, optional and interesting to Windows only.
@@ -448,7 +450,7 @@ orig_cxx_version = env.get("CXXVERSION",
 if "g++" in (env["CXX"] or "") and "clang" not in (env["CXX"] or ""):
     gpp_version, compiler_arch = getGccVersion()
 
-    if gpp_version is None or int(gpp_version.replace('.', "")) < 440:
+    if gpp_version is None or int(gpp_version.replace('.', "")) < 421:
         env["CXX"] = None
     elif win_target and compiler_arch != target_arch:
         env["CXX"] = None
@@ -594,7 +596,7 @@ if "g++" in env["CXX"] and "clang" not i
     # binary if it's not high enough. This is esp. useful under Debian which
     # allows all compiler to exist next to each other and where g++ might not be
     # good enough, but g++-4.5 would be.
-    if gpp_version < 440:
+    if gpp_version < 421:
         sys.exit(
             """\
 The g++ compiler %s (version %s) doesn't have the sufficient \
