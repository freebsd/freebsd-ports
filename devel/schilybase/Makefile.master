DISTVERSION=	2024-03-21
MASTER_SITES=	http://fuz.su/pub/schilytools/ \
		https://schilytools.pkgsrc.pub/pub/schilytools/ \
		https://mirrors.dotsrc.org/schilytools/ \
		https://ftp.halifax.rwth-aachen.de/schilytools/ \
		https://ftp.gwdg.de/pub/misc/schilytools/
DISTNAME=	schily-${DISTVERSION}

MAINTAINER=	fuz@FreeBSD.org
WWW?=		https://codeberg.org/schilytools/schilytools

LICENSE=	CDDL ${COMPONENTS:@c@${LICENSE.${c}}@:O:u}
LICENSE.autoconf=	GPLv2
LICENSE.libhfs_iso=	GPLv2
LICENSE.man2html=	GPLv2
LICENSE.mkisofs=	GPLv2
LICENSE.libparanoia=	LGPL21
LICENSE.cpp=		BSD3CLAUSE
LICENSE.ctags=		BSD3CLAUSE
LICENSE.libmdigest=	BSD2CLAUSE
LICENSE.libfile=	BSD2CLAUSE
LICENSE.patch=		BSD1CLAUSE
LICENSE.lndir=		MIT
LICENSE_COMB=		${${LICENSE:[#]}>1:?multi:single}
LICENSE_FILE_CDDL=	${WRKSRC}/CDDL.Schily.txt
LICENSE_FILE_GPLv2=	${WRKSRC}/GPL-2.0.txt
LICENSE_FILE_LGPL21=	${WRKSRC}/LGPL-2.1.txt
LICENSE_FILE_BSD1CLAUSE=	${WRKSRC}/patch/LICENSE
LICENSE_NAME_BSD1CLAUSE=	BSD 1-clause LICENSE
LICENSE_PERMS_BSD1CLAUSE=	dist-mirror dist-sell pkg-mirror pkg-sell auto-accept

# schilybase has all the libraries
.if ${PORTNAME} != "schilybase"
LIB_DEPENDS+=	libschily.so:devel/schilybase
.endif

.if "${BOOTSTRAP_SMAKE}" != "yes"
BUILD_DEPENDS+=	smake:devel/smake
.endif

USES+=		tar:bz2 compiler gettext-runtime iconv

MAKE_ARGS=	INS_BASE=${PREFIX} \
		INS_RBASE=${PREFIX} \
		LINKMODE=dynamic \
		DESTDIR=${STAGEDIR} \
		STRIPFLAGS=${STRIP} \
		CCOM=${COMPILER_TYPE} \
		CC=${CC} \
		CCC=${CXX} \
		COPTX="${CFLAGS}" \
		C++OPTX="${CXXFLAGS}" \
		NOECHO=
MAKE_CMD=	${"${BOOTSTRAP_SMAKE}" == "yes":?${WRKSRC}/psmake/smake:smake}

PLIST_SUB+=	OPSYS=${OPSYS:tl} ARCH=${ARCH} COMPILER_TYPE=${COMPILER_TYPE}
PLIST=		${.CURDIR}/pkg-plist
PKGHELP?=	${.CURDIR}/pkg-help
PKGMESSAGE?=	${.CURDIR}/pkg-message
DESCR=		${.CURDIR}/pkg-descr

TESTCOMPONENTS?=	${COMPONENTS}

post-extract:
	@cd ${WRKSRC}/rmt && ${MV} rmt.dfl srmt.dfl
	@cd ${WRKSRC}/rmt && ${MV} default-rmt.sample default-srmt.sample

do-configure:
.if "${BOOTSTRAP_SMAKE}" == "yes"
	@${ECHO_MSG} "=> building a bootstrap smake"
	cd ${WRKSRC}/psmake && ${SETENV} ${MAKE_ENV} ${SH} ./MAKE-all
.endif
	@${ECHO_MSG} "=> configuring components"
.for component in ${COMPONENTS}
	cd ${WRKSRC}/${component} && ${SETENV} ${MAKE_ENV} ${MAKE_CMD} ${MAKE_ARGS} config
.endfor

do-build:
.for component in ${COMPONENTS}
	cd ${WRKSRC}/${component} && ${SETENV} ${MAKE_ENV} ${MAKE_CMD} ${MAKE_ARGS} all
.endfor

do-install:
.for component in ${COMPONENTS}
	cd ${WRKSRC}/${component} && ${SETENV} ${MAKE_ENV} ${MAKE_CMD} ${MAKE_ARGS} install
.endfor
.if "${COMPONENTS:Mlib}" != ""
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/lib/*.so.*.* 
.endif

# the test suite gets moody if we set INS_BASE/INS_RBASE/DESTDIR
do-test:
.for component in ${TESTCOMPONENTS}
	cd ${WRKSRC}/${component} && ${SETENV} ${MAKE_ENV} ${MAKE_CMD} ${MAKE_ARGS:NINS_*BASE=*:NDESTDIR=*} tests
.endfor

.include <bsd.port.mk>
