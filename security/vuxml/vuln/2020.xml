  <vuln vid="2739b88b-4b88-11eb-a4c0-08002734b9ed">
    <topic>gitea -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>gitea</name>
	<range><lt>1.13.1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The Gitea Team reports for release 1.13.1:</p>
	<blockquote cite="https://blog.gitea.io/2020/12/gitea-1.13.1-is-released/">
	  <ul>
	    <li>Hide private participation in Orgs</li>
	    <li>Fix escaping issue in diff</li>
	  </ul>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://github.com/go-gitea/gitea/releases/tag/v1.13.1</url>
      <freebsdpr>ports/252310</freebsdpr>
    </references>
    <dates>
      <discovery>2020-12-15</discovery>
      <entry>2020-12-31</entry>
    </dates>
  </vuln>

  <vuln vid="53e9efa1-4be7-11eb-8558-3085a9a47796">
    <topic>InspIRCd websocket module double free vulnerability</topic>
    <affects>
      <package>
	<name>inspircd</name>
	<range><lt>3.8.1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The InspIRCd development team reports:</p>
	<blockquote cite="https://docs.inspircd.org/security/2020-02/">
	  <p>The websocket module before v3.8.1 contains a double free
	  vulnerability. When combined with a HTTP reverse proxy this
	  vulnerability can be used by any user who is [GKZ]-lined to remotely
	  crash an InspIRCd server.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://docs.inspircd.org/security/2020-02/</url>
    </references>
    <dates>
      <discovery>2020-02-01</discovery>
      <entry>2021-01-01</entry>
    </dates>
  </vuln>

  <vuln vid="fbcba194-ac7d-11ea-8b5e-b42e99a1b9c3">
    <topic>Intel CPU issues</topic>
    <affects>
      <package>
	<name>devcpu-data</name>
	<range><lt>1.31</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Intel reports:</p>
	<blockquote cite="https://www.intel.com/content/www/us/en/security-center/advisory/intel-sa-00320.html">
	  <p>Intel CPUs suffer Special Register Buffer Data Sampling vulnerability</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://software.intel.com/security-software-guidance/insights/processors-affected-special-register-buffer-data-sampling</url>
      <cvename>CVE-2020-0543</cvename>
   </references>
    <dates>
      <discovery>2020-06-09</discovery>
      <entry>2020-12-28</entry>
    </dates>
  </vuln>

  <vuln vid="6adf6ce0-44a6-11eb-95b7-001999f8d30b">
    <topic>asterisk -- Remote crash in res_pjsip_diversion</topic>
    <affects>
      <package>
	<name>asterisk13</name>
	<range><lt>13.38.1</lt></range>
      </package>
      <package>
	<name>asterisk16</name>
	<range><lt>16.15.1</lt></range>
      </package>
      <package>
	<name>asterisk18</name>
	<range><lt>18.1.1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The Asterisk project reports:</p>
	<blockquote cite="https://www.asterisk.org/downloads/security-advisories">
	  <p>AST-2020-003: A crash can occur in Asterisk when a SIP
	  message is received that has a History-Info header, which
	  contains a tel-uri.</p>
	  <p>AST-2020-004: A crash can occur in Asterisk when a SIP
	  181 response is received that has a Diversion header,
	  which contains a tel-uri.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://downloads.asterisk.org/pub/security/AST-2020-003.html</url>
      <url>https://downloads.asterisk.org/pub/security/AST-2020-004.html</url>
    </references>
    <dates>
      <discovery>2020-12-02</discovery>
      <entry>2020-12-22</entry>
    </dates>
  </vuln>

  <vuln vid="eb2845c4-43ce-11eb-aba5-00a09858faf5">
    <topic>postsrsd -- Denial of service vulnerability</topic>
    <affects>
      <package>
	<name>postsrsd</name>
	<range><lt>1.10</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>postsrsd developer reports:</p>
	<blockquote cite="https://github.com/roehling/postsrsd/commit/4733fb11f6bec6524bb8518c5e1a699288c26bac">
	  <p>PostSRSd could be tricked into consuming a lot of CPU time with
	    an SRS address that has an excessively long time stamp tag.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2020-35573</cvename>
      <url>https://github.com/roehling/postsrsd/commit/4733fb11f6bec6524bb8518c5e1a699288c26bac</url>
      <url>https://github.com/roehling/postsrsd/releases/tag/1.10</url>
    </references>
    <dates>
      <discovery>2020-12-12</discovery>
      <entry>2020-12-21</entry>
    </dates>
  </vuln>

  <vuln vid="61d89849-43cb-11eb-aba5-00a09858faf5">
    <topic>powerdns -- Various issues in GSS-TSIG support</topic>
    <affects>
      <package>
	<name>powerdns</name>
	<range><lt>4.4.0</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>PowerDNS developers report:</p>
	<blockquote cite="https://doc.powerdns.com/authoritative/security-advisories/powerdns-advisory-2020-06.html">
	  <p>A remote, unauthenticated attacker can trigger a race condition
	    leading to a crash, or possibly arbitrary code execution, by sending crafted queries with a GSS-TSIG signature.</p>
	  <p>A remote, unauthenticated attacker can cause a denial of service by
	    sending crafted queries with a GSS-TSIG signature.</p>
	  <p>A remote, unauthenticated attacker might be able to cause a double-free,
	    leading to a crash or possibly arbitrary code execution by sending crafted queries with a GSS-TSIG signature.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2020-24696</cvename>
      <cvename>CVE-2020-24697</cvename>
      <cvename>CVE-2020-24698</cvename>
      <url>https://doc.powerdns.com/authoritative/security-advisories/powerdns-advisory-2020-06.html</url>
    </references>
    <dates>
      <discovery>2020-08-27</discovery>
      <entry>2020-12-21</entry>
    </dates>
  </vuln>

  <vuln vid="cc1fd3da-b8fd-4f4d-a092-c38541c0f993">
    <topic>vault -- User Enumeration via LDAP auth</topic>
    <affects>
      <package>
	<name>vault</name>
	<range><lt>1.6.1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Vault developers report:</p>
	<blockquote cite="https://discuss.hashicorp.com/t/hcsec-2020-25-vault-s-ldap-auth-method-allows-user-enumeration/18984">
	  <p>Vault allowed enumeration of users via the LDAP auth method. This vulnerability, was fixed in Vault 1.6.1 and 1.5.6.</p>
	  <p>An external party reported that they were able to enumerate LDAP users via error messages returned by Vault’s LDAP auth method</p>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2020-35177</cvename>
      <url>https://discuss.hashicorp.com/t/hcsec-2020-25-vault-s-ldap-auth-method-allows-user-enumeration/18984</url>
    </references>
    <dates>
      <discovery>2020-12-16</discovery>
      <entry>2020-12-17</entry>
    </dates>
  </vuln>

  <vuln vid="85349584-3ba4-11eb-919d-08002728f74c">
    <topic>jasper -- heap overflow vulnerability</topic>
    <affects>
      <package>
	<name>jasper</name>
	<range><lt>2.0.23</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>JasPer NEWS:</p>
	<blockquote cite="https://github.com/jasper-software/jasper/blob/master/NEWS">
	  <p>Fix CVE-2020-27828, heap-overflow in cp_create() in jpc_enc.c.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2020-27828</cvename>
      <url>https://github.com/jasper-software/jasper/blob/master/NEWS</url>
      <url>https://github.com/jasper-software/jasper/issues/252</url>
    </references>
    <dates>
      <discovery>2020-12-08</discovery>
      <entry>2020-12-13</entry>
    </dates>
  </vuln>

  <vuln vid="cfa0be42-3cd7-11eb-9de7-641c67a117d8">
    <topic>py-matrix-synapse -- DoS on Federation API</topic>
    <affects>
      <package>
	<name>py36-matrix-synapse</name>
	<name>py37-matrix-synapse</name>
	<name>py38-matrix-synapse</name>
	<name>py39-matrix-synapse</name>
	<range><lt>1.23.1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Matrix developers reports:</p>
	<blockquote cite="https://github.com/matrix-org/synapse/security/advisories/GHSA-hxmp-pqch-c8mm">
	  <p>A malicious or poorly-implemented homeserver can inject malformed events
	    into a room by specifying a different room id in the path of a /send_join,
	    /send_leave, /invite or /exchange_third_party_invite request.
	    This can lead to a denial of service in which future events will not be
	    correctly sent to other servers over federation.
	    This affects any server which accepts federation requests from untrusted
	    servers.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2020-26257</cvename>
      <url>https://github.com/matrix-org/synapse/security/advisories/GHSA-hxmp-pqch-c8mm</url>
      <freebsdpr>ports/251768</freebsdpr>
    </references>
    <dates>
      <discovery>2020-12-09</discovery>
      <entry>2020-12-13</entry>
    </dates>
  </vuln>

  <vuln vid="fdc49972-3ca7-11eb-929d-d4c9ef517024">
    <topic>p11-kit -- Multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>p11-kit</name>
	<range><lt>0.23.22</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The p11-glue project reports:</p>
	<blockquote cite="https://lists.freedesktop.org/archives/p11-glue/2020-December/000712.html">
	  <p>CVE-2020-29363: Out-of-bounds write in
	    p11_rpc_buffer_get_byte_array_value function<br/>A heap-based buffer
	    overflow has been discovered in the RPC protocol used by p11-kit
	    server/remote commands and the client library. When the remote
	    entity supplies a serialized byte array in a CK_ATTRIBUTE, the
	    receiving entity may not allocate sufficient length for the buffer
	    to store the deserialized value.</p>
	  <p>CVE-2020-29362: Out-of-bounds read in p11_rpc_buffer_get_byte_array
	    function<br/>A heap-based buffer over-read has been discovered in
	    the RPC protocol used by thep11-kit server/remote commands and the
	    client library. When the remote entity supplies a byte array through
	    a serialized PKCS#11 function call, the receiving entity may allow
	    the reading of up to 4 bytes of memory past the heap
	    allocation.</p>
	  <p>CVE-2020-29361: Integer overflow when allocating memory for arrays
	    of attributes and object identifiers<br/>Multiple integer overflows
	    have been discovered in the array allocations in the p11-kit library
	    and the p11-kit list command, where overflow checks are missing
	    before calling realloc or calloc.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://lists.freedesktop.org/archives/p11-glue/2020-December/000712.html</url>
      <cvename>CVE-2020-29361</cvename>
      <cvename>CVE-2020-29362</cvename>
      <cvename>CVE-2020-29363</cvename>
    </references>
    <dates>
      <discovery>2020-12-12</discovery>
      <entry>2020-12-12</entry>
    </dates>
  </vuln>

  <vuln vid="388ebb5b-3c95-11eb-929d-d4c9ef517024">
    <topic>Unbound/NSD -- Denial of service vulnerability</topic>
    <affects>
      <package>
	<name>unbound</name>
	<range><lt>1.13.0</lt></range>
      </package>
      <package>
	<name>nsd</name>
	<range><lt>4.3.4</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>NLNetLabs reports:</p>
	<blockquote cite="https://nlnetlabs.nl/downloads/unbound/CVE-2020-28935.txt">
	  <p>Unbound and NSD when writing the PID file would not check if an
	    existing file was a symlink. This could allow for a local symlink \
	    attack if an attacker has access to the user Unbound/NSD runs as.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://nlnetlabs.nl/downloads/unbound/CVE-2020-28935.txt</url>
      <cvename>CVE-2020-28935</cvename>
    </references>
    <dates>
      <discovery>2020-12-01</discovery>
      <entry>2020-12-12</entry>
    </dates>
  </vuln>

  <vuln vid="88dfd92f-3b9c-11eb-929d-d4c9ef517024">
    <topic>LibreSSL -- NULL pointer dereference</topic>
    <affects>
      <package>
	<name>libressl</name>
	<range><gt>3.2.0</gt><lt>3.2.3</lt></range>
	<range><lt>3.1.5</lt></range>
      </package>
      <package>
	<name>libressl-devel</name>
	<range><lt>3.3.1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The LibreSSL project reports:</p>
	<blockquote cite="https://ftp.openbsd.org/pub/OpenBSD/LibreSSL/libressl-3.2.3-relnotes.txt">
	  <p>Malformed ASN.1 in a certificate revocation list or a timestamp
	    response token can lead to a NULL pointer dereference.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://ftp.openbsd.org/pub/OpenBSD/LibreSSL/libressl-3.2.3-relnotes.txt</url>
    </references>
    <dates>
      <discovery>2020-12-08</discovery>
      <entry>2020-12-11</entry>
      <modified>2020-12-12</modified>
    </dates>
  </vuln>

  <vuln vid="b3695b08-3b3a-11eb-af2a-080027dbe4b7">
    <topic>glpi -- Public GLPIKEY can be used to decrypt any data</topic>
    <affects>
      <package>
	<name>glpi</name>
	<range><lt>9.4.6,1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>MITRE Corporation reports:</p>
	<blockquote cite="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-5248">
	  <p>GLPI before before version 9.4.6 has a vulnerability involving a default encryption key. GLPIKEY is public and is used on every instance. This means anyone can decrypt sensitive data stored using this key. It is possible to change the key before installing GLPI. But on existing instances, data must be reencrypted with the new key. Problem is we can not know which columns or rows in the database are using that; espcially from plugins. Changing the key without updating data would lend in bad password sent from glpi; but storing them again from the UI will work.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://github.com/glpi-project/glpi/security/advisories/GHSA-j222-j9mf-h6j9</url>
      <url>https://github.com/glpi-project/glpi/commit/efd14468c92c4da43333aa9735e65fd20cbc7c6c</url>
      <cvename>CVE-2020-5248</cvename>
    </references>
    <dates>
      <discovery>2020-01-02</discovery>
      <entry>2020-01-02</entry>
      <modified>2024-04-25</modified>
    </dates>
  </vuln>

  <vuln vid="695b2310-3b3a-11eb-af2a-080027dbe4b7">
    <topic>glpi -- Insecure Direct Object Reference on ajax/getDropdownValue.php</topic>
    <affects>
      <package>
	<name>glpi</name>
	<range><lt>9.5.3,1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>MITRE Corporation reports:</p>
	<blockquote cite="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-27663">
	  <p>In GLPI before 9.5.3, ajax/getDropdownValue.php has an Insecure Direct Object Reference (IDOR) vulnerability that allows an attacker to read data from any itemType (e.g., Ticket, Users, etc.).</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://github.com/glpi-project/glpi/security/advisories/GHSA-pqfv-4pvr-55r4</url>
      <cvename>CVE-2020-27663</cvename>
    </references>
    <dates>
      <discovery>2020-10-22</discovery>
      <entry>2020-10-22</entry>
      <modified>2024-04-25</modified>
    </dates>
  </vuln>

  <vuln vid="190176ce-3b3a-11eb-af2a-080027dbe4b7">
    <topic>glpi -- Insecure Direct Object Reference on ajax/comments.ph</topic>
    <affects>
      <package>
	<name>glpi</name>
	<range><lt>9.5.3,1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>MITRE Corporation reports:</p>
	<blockquote cite="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-27662">
	  <p>In GLPI before 9.5.3, ajax/comments.php has an Insecure Direct Object Reference (IDOR) vulnerability that allows an attacker to read data from any database table (e.g., glpi_tickets, glpi_users, etc.).</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://github.com/glpi-project/glpi/security/advisories/GHSA-wq38-gwxp-8p5p</url>
      <cvename>CVE-2020-27662</cvename>
    </references>
    <dates>
      <discovery>2020-10-22</discovery>
      <entry>2020-10-22</entry>
      <modified>2024-04-25</modified>
    </dates>
  </vuln>

  <vuln vid="6a467439-3b38-11eb-af2a-080027dbe4b7">
    <topic>glpi -- Any CalDAV calendars is read-only for every authenticated user</topic>
    <affects>
      <package>
	<name>glpi</name>
	<range><ge>9.5.0,1</ge><lt>9.5.3,1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>MITRE Corporation reports:</p>
	<blockquote cite="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-26212">
	  <p>In GLPI before version 9.5.3, any authenticated user has read-only permissions to the planning of every other user, even admin ones. This issue is fixed in version 9.5.3. As a workaround, one can remove the caldav.php file to block access to CalDAV server.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://github.com/glpi-project/glpi/security/advisories/GHSA-qmw3-87hr-5wgx</url>
      <url>https://github.com/glpi-project/glpi/commit/527280358ec78988ac57e9809d2eb21fcd74caf7</url>
      <url>https://github.com/glpi-project/glpi/releases/tag/9.5.3</url>
      <cvename>CVE-2020-26212</cvename>
    </references>
    <dates>
      <discovery>2020-10-01</discovery>
      <entry>2020-10-01</entry>
      <modified>2024-04-25</modified>
    </dates>
  </vuln>

  <vuln vid="0ba61fcc-3b38-11eb-af2a-080027dbe4b7">
    <topic>glpi -- SQL Injection in Search API</topic>
    <affects>
      <package>
	<name>glpi</name>
	<range><ge>9.1,1</ge><lt>9.5.2,1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>MITRE Corporation reports:</p>
	<blockquote cite="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-15226">
	  <p>In GLPI before version 9.5.2, there is a SQL Injection in the API's search function. Not only is it possible to break the SQL syntax, but it is also possible to utilise a UNION SELECT query to reflect sensitive information such as the current database version, or database user. The most likely scenario for this vulnerability is with someone who has an API account to the system. The issue is patched in version 9.5.2. A proof-of-concept with technical details is available in the linked advisory.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://github.com/glpi-project/glpi/commit/3dc4475c56b241ad659cc5c7cb5fb65727409cf0</url>
      <url>https://github.com/glpi-project/glpi/security/advisories/GHSA-jwpv-7m4h-5gvc</url>
      <cvename>CVE-2020-15226</cvename>
    </references>
    <dates>
      <discovery>2020-06-25</discovery>
      <entry>2020-06-25</entry>
      <modified>2024-04-25</modified>
    </dates>
  </vuln>

  <vuln vid="5acd95db-3b16-11eb-af2a-080027dbe4b7">
    <topic>glpi -- leakage issue with knowledge base</topic>
    <affects>
      <package>
	<name>glpi</name>
	<range><ge>9.5.0,1</ge><lt>9.5.2,1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>MITRE Corporation reports:</p>
	<blockquote cite="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-15217">
	  <p>In GLPI before version 9.5.2, there is a leakage of user information through the public FAQ. The issue was introduced in version 9.5.0 and patched in 9.5.2. As a workaround, disable public access to the FAQ.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://github.com/glpi-project/glpi/commit/39e25591efddc560e3679ab07e443ee6198705e2</url>
      <url>https://github.com/glpi-project/glpi/security/advisories/GHSA-x9hg-j29f-wvvv</url>
      <cvename>CVE-2020-15217</cvename>
    </references>
    <dates>
      <discovery>2020-06-25</discovery>
      <entry>2020-06-25</entry>
      <modified>2024-04-25</modified>
    </dates>
  </vuln>

  <vuln vid="09eef008-3b16-11eb-af2a-080027dbe4b7">
    <topic>glpi -- Unauthenticated Stored XSS</topic>
    <affects>
      <package>
	<name>glpi</name>
	<range><lt>9.5.2,1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>MITRE Corporation reports:</p>
	<blockquote cite="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-15177">
	  <p>In GLPI before version 9.5.2, the `install/install.php` endpoint insecurely stores user input into the database as `url_base` and `url_base_api`. These settings are referenced throughout the application and allow for vulnerabilities like Cross-Site Scripting and Insecure Redirection Since authentication is not required to perform these changes,anyone could point these fields at malicious websites or form input in a way to trigger XSS. Leveraging JavaScript it's possible to steal cookies, perform actions as the user, etc. The issue is patched in version 9.5.2.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://github.com/glpi-project/glpi/commit/a8109d4ee970a222faf48cf48fae2d2f06465796</url>
      <url>https://github.com/glpi-project/glpi/security/advisories/GHSA-prvh-9m4h-4m79</url>
      <cvename>CVE-2020-15177</cvename>
    </references>
    <dates>
      <discovery>2020-06-25</discovery>
      <entry>2020-06-25</entry>
      <modified>2024-04-25</modified>
    </dates>
  </vuln>

  <vuln vid="b7abdb0f-3b15-11eb-af2a-080027dbe4b7">
    <topic>glpi -- Multiple SQL Injections Stemming From isNameQuoted()</topic>
    <affects>
      <package>
	<name>glpi</name>
	<range><lt>9.5.2,1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>MITRE Corporation reports:</p>
	<blockquote cite="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-15176">
	  <p>In GLPI before version 9.5.2, when supplying a back tick in input that gets put into a SQL query,the application does not escape or sanitize allowing for SQL Injection to occur. Leveraging this vulnerability an attacker is able to exfiltrate sensitive information like passwords, reset tokens, personal details, and more. The issue is patched in version 9.5.2</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://github.com/glpi-project/glpi/commit/f021f1f365b4acea5066d3e57c6d22658cf32575</url>
      <url>https://github.com/glpi-project/glpi/security/advisories/GHSA-x93w-64x9-58qw</url>
      <cvename>CVE-2020-15176</cvename>
    </references>
    <dates>
      <discovery>2020-06-25</discovery>
      <entry>2020-06-25</entry>
      <modified>2024-04-25</modified>
    </dates>
  </vuln>

  <vuln vid="675e5098-3b15-11eb-af2a-080027dbe4b7">
    <topic>glpi -- Unauthenticated File Deletion</topic>
    <affects>
      <package>
	<name>glpi</name>
	<range><lt>9.5.2,1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>MITRE Corporation reports:</p>
	<blockquote cite="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-15175">
	  <p>In GLPI before version 9.5.2, the pluginimage.send.php endpoint allows a user to specify an image from a plugin. The parameters can be maliciously crafted to instead delete the .htaccess file for the files directory. Any user becomes able to read all the files and folders contained in /files/. Some of the sensitive information that is compromised are the user sessions, logs, and more. An attacker would be able to get the Administrators session token and use that to authenticate. The issue is patched in version 9.5.2.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://github.com/glpi-project/glpi/security/advisories/GHSA-rm52-jx9h-rwcp</url>
      <url>https://github.com/glpi-project/glpi/commit/6ca9a0e77299a755c356d758344a23278df67f65</url>
      <cvename>CVE-2020-15175</cvename>
    </references>
    <dates>
      <discovery>2020-06-25</discovery>
      <entry>2020-06-25</entry>
      <modified>2024-04-25</modified>
    </dates>
  </vuln>

  <vuln vid="7f163c81-3b12-11eb-af2a-080027dbe4b7">
    <topic>glpi -- SQL injection for all usages of "Clone" feature</topic>
    <affects>
      <package>
	<name>glpi</name>
	<range><ge>9.5.0,1</ge><lt>9.5.1,1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>MITRE Corporation reports:</p>
	<blockquote cite="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-15108">
	  <p>In glpi before 9.5.1, there is a SQL injection for all usages of "Clone" feature. This has been fixed in 9.5.1.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://github.com/glpi-project/glpi/security/advisories/GHSA-qv6w-68gq-wx2v</url>
      <url>https://github.com/glpi-project/glpi/commit/a4baa64114eb92fd2adf6056a36e0582324414ba</url>
      <url>https://github.com/glpi-project/glpi/pull/6684</url>
      <cvename>CVE-2020-15108</cvename>
    </references>
    <dates>
      <discovery>2020-06-25</discovery>
      <entry>2020-06-25</entry>
      <modified>2024-04-25</modified>
    </dates>
  </vuln>

  <vuln vid="07aecafa-3b12-11eb-af2a-080027dbe4b7">
    <topic>glpi -- Reflexive XSS in Dropdown menus</topic>
    <affects>
      <package>
	<name>glpi</name>
	<range><lt>9.4.6,1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>MITRE Corporation reports:</p>
	<blockquote cite="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-11062">
	  <p>In GLPI after 0.68.1 and before 9.4.6, multiple reflexive XSS occur in Dropdown endpoints due to an invalid Content-Type. This has been fixed in version 9.4.6.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://github.com/glpi-project/glpi/security/advisories/GHSA-3xxh-f5p2-jg3h</url>
      <url>https://github.com/glpi-project/glpi/commit/5e1c52c5e8a30ceb4e9572964da7ed89ddfb1aaf</url>
      <cvename>CVE-2020-11062</cvename>
    </references>
    <dates>
      <discovery>2020-03-30</discovery>
      <entry>2020-03-30</entry>
      <modified>2024-04-25</modified>
    </dates>
  </vuln>

  <vuln vid="832fd11b-3b11-11eb-af2a-080027dbe4b7">
    <topic>glpi -- Remote Code Execution (RCE) via the backup functionality</topic>
    <affects>
      <package>
	<name>glpi</name>
	<range><lt>9.4.6,1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>MITRE Corporation reports:</p>
	<blockquote cite="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-11060">
	  <p>In GLPI before 9.4.6, an attacker can execute system commands by abusing the backup functionality. Theoretically, this vulnerability can be exploited by an attacker without a valid account by using a CSRF. Due to the difficulty of the exploitation, the attack is only conceivable by an account having Maintenance privileges and the right to add WIFI networks. This is fixed in version 9.4.6.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://github.com/glpi-project/glpi/security/advisories/GHSA-cvvq-3fww-5v6f</url>
      <url>https://github.com/glpi-project/glpi/commit/ad748d59c94da177a3ed25111c453902396f320c</url>
      <cvename>CVE-2020-11060</cvename>
    </references>
    <dates>
      <discovery>2020-03-30</discovery>
      <entry>2020-03-30</entry>
      <modified>2024-04-25</modified>
    </dates>
  </vuln>

  <vuln vid="27a230a2-3b11-11eb-af2a-080027dbe4b7">
    <topic>glpi -- multiple related stored XSS vulnerabilities</topic>
    <affects>
      <package>
	<name>glpi</name>
	<range><lt>9.4.6,1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>MITRE Corporation reports:</p>
	<blockquote cite="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-11036">
	  <p>In GLPI before version 9.4.6 there are multiple related stored XSS vulnerabilities. The package is vulnerable to Stored XSS in the comments of items in the Knowledge base. Adding a comment with content "alert(1)" reproduces the attack. This can be exploited by a user with administrator privileges in the User-Agent field. It can also be exploited by an outside party through the following steps: 1. Create a user with the surname `" onmouseover="alert(document.cookie)` and an empty first name. 2. With this user, create a ticket 3. As an administrator (or other privileged user) open the created ticket 4. On the "last update" field, put your mouse on the name of the user 5. The XSS fires This is fixed in version 9.4.6.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://github.com/glpi-project/glpi/security/advisories/GHSA-3g3h-rwhr-7385</url>
      <url>https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/5WQMONZRWLWOXMHMYWR7A5Q5JJERPMVC/</url>
      <url>https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/Q4BG2UTINBVV7MTJRXKBQ26GV2UINA6L/</url>
      <cvename>CVE-2020-11036</cvename>
    </references>
    <dates>
      <discovery>2020-03-30</discovery>
      <entry>2020-03-30</entry>
      <modified>2024-04-25</modified>
    </dates>
  </vuln>

  <vuln vid="b64edef7-3b10-11eb-af2a-080027dbe4b7">
    <topic>glpi -- weak csrf tokens</topic>
    <affects>
      <package>
	<name>glpi</name>
	<range><ge>0.83.3,1</ge><lt>9.4.6,1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>MITRE Corporation reports:</p>
	<blockquote cite="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-11035">
	  <p>In GLPI after version 0.83.3 and before version 9.4.6, the CSRF tokens are generated using an insecure algorithm. The implementation uses rand and uniqid and MD5 which does not provide secure values. This is fixed in version 9.4.6.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://github.com/glpi-project/glpi/security/advisories/GHSA-w7q8-58qp-vmpf</url>
      <url>https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/5WQMONZRWLWOXMHMYWR7A5Q5JJERPMVC/</url>
      <url>https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/Q4BG2UTINBVV7MTJRXKBQ26GV2UINA6L/</url>
      <cvename>CVE-2020-11035</cvename>
    </references>
    <dates>
      <discovery>2020-03-30</discovery>
      <entry>2020-03-30</entry>
      <modified>2024-04-25</modified>
    </dates>
  </vuln>

  <vuln vid="3a63f478-3b10-11eb-af2a-080027dbe4b7">
    <topic>glpi -- bypass of the open redirect protection</topic>
    <affects>
      <package>
	<name>glpi</name>
	<range><lt>9.4.6,1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>MITRE Corporation reports:</p>
	<blockquote cite="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-11034">
	  <p>In GLPI before version 9.4.6, there is a vulnerability that allows bypassing the open redirect protection based which is based on a regexp. This is fixed in version 9.4.6.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://github.com/glpi-project/glpi/security/advisories/GHSA-gxv6-xq9q-37hg</url>
      <url>https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/5WQMONZRWLWOXMHMYWR7A5Q5JJERPMVC/</url>
      <url>https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/Q4BG2UTINBVV7MTJRXKBQ26GV2UINA6L/</url>
      <cvename>CVE-2020-11034</cvename>
    </references>
    <dates>
      <discovery>2020-03-30</discovery>
      <entry>2020-03-30</entry>
      <modified>2024-04-25</modified>
    </dates>
  </vuln>

  <vuln vid="aec9cbe0-3b0f-11eb-af2a-080027dbe4b7">
    <topic>glpi -- able to read any token through API user endpoint</topic>
    <affects>
      <package>
	<name>glpi</name>
	<range><ge>9.1,1</ge><lt>9.4.6,1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>MITRE Corporation reports:</p>
	<blockquote cite="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-11033">
	  <p>In GLPI from version 9.1 and before version 9.4.6, any API user with READ right on User itemtype will have access to full list of users when querying apirest.php/User. The response contains: - All api_tokens which can be used to do privileges escalations or read/update/delete data normally non accessible to the current user. - All personal_tokens can display another users planning. Exploiting this vulnerability requires the api to be enabled, a technician account. It can be mitigated by adding an application token. This is fixed in version 9.4.6.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://github.com/glpi-project/glpi/security/advisories/GHSA-rf54-3r4w-4h55</url>
      <url>https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/5WQMONZRWLWOXMHMYWR7A5Q5JJERPMVC/</url>
      <url>https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/Q4BG2UTINBVV7MTJRXKBQ26GV2UINA6L/</url>
      <cvename>CVE-2020-11033</cvename>
    </references>
    <dates>
      <discovery>2020-03-30</discovery>
      <entry>2020-03-30</entry>
      <modified>2024-04-25</modified>
    </dates>
  </vuln>

  <vuln vid="b3aae7ea-3aef-11eb-af2a-080027dbe4b7">
    <topic>glpi -- SQL injection for all helpdesk instances</topic>
    <affects>
      <package>
	<name>glpi</name>
	<range><lt>9.4.6,1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>MITRE Corporation reports:</p>
	<blockquote cite="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-11032">
	  <p>In GLPI before version 9.4.6, there is a SQL injection vulnerability for all helpdesk instances. Exploiting this vulnerability requires a technician account. This is fixed in version 9.4.6.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://github.com/glpi-project/glpi/security/advisories/GHSA-344w-34h9-wwhh</url>
      <cvename>CVE-2020-11032</cvename>
    </references>
    <dates>
      <discovery>2020-03-30</discovery>
      <entry>2020-03-30</entry>
      <modified>2024-04-25</modified>
    </dates>
  </vuln>

  <vuln vid="0309c898-3aed-11eb-af2a-080027dbe4b7">
    <topic>glpi -- Improve encryption algorithm</topic>
    <affects>
      <package>
	<name>glpi</name>
	<range><lt>9.5.0,1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>MITRE Corporation reports:</p>
	<blockquote cite="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-11031">
	  <p>In GLPI before version 9.5.0, the encryption algorithm used is insecure. The security of the data encrypted relies on the password used, if a user sets a weak/predictable password, an attacker could decrypt data. This is fixed in version 9.5.0 by using a more secure encryption library. The library chosen is sodium.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://github.com/glpi-project/glpi/security/advisories/GHSA-7xwm-4vjr-jvqh</url>
      <url>https://github.com/glpi-project/glpi/commit/f1ae6c8481e5c19a6f1801a5548cada45702e01a#diff-b5d0ee8c97c7abd7e3fa29b9a27d1780</url>
      <url>https://github.com/glpi-project/glpi/commit/f1ae6c8481e5c19a6f1801a5548cada45702e01a#diff-b5d0ee8c97c7abd7e3fa29b9a27d1780</url>
      <cvename>CVE-2020-11031</cvename>
    </references>
    <dates>
      <discovery>2020-03-30</discovery>
      <entry>2020-03-30</entry>
      <modified>2024-04-25</modified>
    </dates>
  </vuln>

  <vuln vid="d3f60db0-3aea-11eb-af2a-080027dbe4b7">
    <topic>glpi -- Account takeover vulnerability</topic>
    <affects>
      <package>
	<name>glpi</name>
	<range><lt>9.4.4,1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>MITRE Corporation reports:</p>
	<blockquote cite="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-14666">
	  <p>GLPI through 9.4.3 is prone to account takeover by abusing the ajax/autocompletion.php autocompletion feature. The lack of correct validation leads to recovery of the token generated via the password reset functionality, and thus an authenticated attacker can set an arbitrary password for any user. This vulnerability can be exploited to take control of admin account. This vulnerability could be also abused to obtain other sensitive fields like API keys or password hashes.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-14666</url>
      <url>https://github.com/glpi-project/glpi/security/advisories/GHSA-47hq-pfrr-jh5q</url>
      <url>https://www.tarlogic.com/advisories/Tarlogic-2019-GPLI-Account-Takeover.txt</url>
      <cvename>CVE-2019-14666</cvename>
    </references>
    <dates>
      <discovery>2019-08-05</discovery>
      <entry>2019-08-05</entry>
      <modified>2024-04-25</modified>
    </dates>
  </vuln>

  <vuln vid="3c77f139-3a09-11eb-929d-d4c9ef517024">
    <topic>cURL -- Multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>curl</name>
	<range><gt>4.0</gt><lt>7.74.0</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The cURL project reports:</p>
	<blockquote cite="https://curl.se/docs/security.html">
	  <p>Trusting FTP PASV responses (CVE-2020-8284)</p>
	  <p>FTP wildcard stack overflow (CVE-2020-8285)</p>
	  <p>Inferior OCSP verification (CVE-2020-8286)</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://curl.se/docs/security.html</url>
      <cvename>CVE-2020-8284</cvename>
      <cvename>CVE-2020-8285</cvename>
      <cvename>CVE-2020-8286</cvename>
    </references>
    <dates>
      <discovery>2020-12-09</discovery>
      <entry>2020-12-09</entry>
    </dates>
  </vuln>

  <vuln vid="1d56cfc5-3970-11eb-929d-d4c9ef517024">
    <topic>OpenSSL -- NULL pointer de-reference</topic>
    <affects>
      <package>
	<name>openssl</name>
	<range><ge>1.0.2,1</ge><lt>1.1.1i,1</lt></range>
      </package>
      <package>
	<name>FreeBSD</name>
	<range><ge>12.2</ge><lt>12.2_2</lt></range>
	<range><ge>12.1</ge><lt>12.1_12</lt></range>
	<range><ge>11.4</ge><lt>11.4_6</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The OpenSSL project reports:</p>
	<blockquote cite="https://www.openssl.org/news/secadv/20201208.txt">
	  <p>EDIPARTYNAME NULL pointer de-reference (High)</p>
	  <p>The X.509 GeneralName type is a generic type for representing
	    different types of names. One of those name types is known as
	    EDIPartyName. OpenSSL provides a function GENERAL_NAME_cmp which
	    compares different instances of a GENERAL_NAME to see if they
	    are equal or not. This function behaves incorrectly when both
	    GENERAL_NAMEs contain an EDIPARTYNAME. A NULL pointer
	    dereference and a crash may occur leading to a possible denial
	    of service attack.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://www.openssl.org/news/secadv/20201208.txt</url>
      <cvename>CVE-2020-1971</cvename>
      <freebsdsa>SA-20:33.openssl</freebsdsa>
    </references>
    <dates>
      <discovery>2020-12-08</discovery>
      <entry>2020-12-08</entry>
      <modified>2020-12-15</modified>
    </dates>
  </vuln>

  <vuln vid="5d5e5cda-38e6-11eb-bbbf-001b217b3468">
    <topic>Gitlab -- Multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>gitlab-ce</name>
	<range><ge>13.6.0</ge><lt>13.6.2</lt></range>
	<range><ge>13.5.0</ge><lt>13.5.5</lt></range>
	<range><ge>12.2</ge><lt>13.4.9</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Gitlab reports:</p>
	<blockquote cite="https://about.gitlab.com/releases/2020/12/07/security-release-gitlab-13-6-2-released/">
	  <p>XSS in Zoom Meeting URL</p>
	  <p>Limited Information Disclosure in Private Profile</p>
	  <p>User email exposed via GraphQL endpoint</p>
	  <p>Group and project membership potentially exposed via GraphQL</p>
	  <p>Search terms logged in search parameter in rails logs</p>
	  <p>Un-authorised access to feature flag user list</p>
	  <p>A specific query on the explore page causes statement timeouts</p>
	  <p>Exposure of starred projects on private user profiles</p>
	  <p>Uncontrolled Resource Consumption in any Markdown field using Mermaid</p>
	  <p>Former group members able to view updates to confidential epics</p>
	  <p>Update GraphicsMagick dependency</p>
	  <p>Update GnuPG dependency</p>
	  <p>Update libxml dependency</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://about.gitlab.com/releases/2020/12/07/security-release-gitlab-13-6-2-released/</url>
      <cvename>CVE-2020-26407</cvename>
      <cvename>CVE-2020-26408</cvename>
      <cvename>CVE-2020-13357</cvename>
      <cvename>CVE-2020-26411</cvename>
      <cvename>CVE-2020-26409</cvename>
    </references>
    <dates>
      <discovery>2020-12-07</discovery>
      <entry>2020-12-07</entry>
    </dates>
  </vuln>

  <vuln vid="8d17229f-3054-11eb-a455-ac1f6b16e566">
    <topic>consul -- Fix Consul Connect CA private key configuration</topic>
    <affects>
      <package>
	<name>consul</name>
	<range><lt>1.9.0</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Hashicorp reports:</p>
	<blockquote cite="https://github.com/hashicorp/consul/blob/master/CHANGELOG.md">
	  <p>Increase the permissions to read from the
	    /connect/ca/configuration endpoint to operator:write.
	    Previously Connect CA configuration, including the private
	    key, set via this endpoint could be read back by an operator
	    with operator:read privileges.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://github.com/hashicorp/consul/blob/master/CHANGELOG.md</url>
      <cvename>CVE-2020-28053</cvename>
    </references>
    <dates>
      <discovery>2020-11-02</discovery>
      <entry>2020-12-06</entry>
    </dates>
  </vuln>

  <vuln vid="01ffd06a-36ed-11eb-b655-3065ec8fd3ec">
    <topic>chromium -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>chromium</name>
	<range><lt>87.0.4280.88</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Chrome Releases reports:</p>
	<blockquote cite="https://chromereleases.googleblog.com/2020/12/stable-channel-update-for-desktop.html">
	  <p>This release contains 8 security fixes, including:</p>
	  <ul>
	    <li>[1142331] High CVE-2020-16037: Use after free in clipboard.
	      Reported by Ryoya Tsukasaki on 2020-10-26</li>
	    <li>[1138683] High CVE-2020-16038: Use after free in media.
	      Reported by Khalil Zhani on 2020-10-14</li>
	    <li>[1149177] High CVE-2020-16039: Use after free in extensions.
	      Reported by Anonymous on 2020-11-15</li>
	    <li>[1150649] High CVE-2020-16040: Insufficient data validation in
	      V8. Reported by Lucas Pinheiro, Microsoft Browser Vulnerability
	      Research on 2020-11-19</li>
	    <li>[1151865] Medium CVE-2020-16041: Out of bounds read in
	      networking. Reported by Sergei Glazunov and Mark Brand of Google
	      Project Zero on 2020-11-23</li>
	    <li>[1151890] Medium CVE-2020-16042: Uninitialized Use in V8.
	      Reported by André Bargull on 2020-11-2</li>
	  </ul>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2020-16037</cvename>
      <cvename>CVE-2020-16038</cvename>
      <cvename>CVE-2020-16039</cvename>
      <cvename>CVE-2020-16040</cvename>
      <cvename>CVE-2020-16041</cvename>
      <cvename>CVE-2020-16042</cvename>
      <url>https://chromereleases.googleblog.com/2020/12/stable-channel-update-for-desktop.html</url>
    </references>
    <dates>
      <discovery>2020-12-02</discovery>
      <entry>2020-12-05</entry>
    </dates>
  </vuln>

  <vuln vid="b99492b2-362b-11eb-9f86-08002734b9ed">
    <topic>gitea -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>gitea</name>
	<range><lt>1.13.0</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The Gitea Team reports for release 1.13.0:</p>
	<blockquote cite="https://blog.gitea.io/2020/12/gitea-1.13.0-is-released/">
	  <ul>
	    <li>Add Allow-/Block-List for Migrate and Mirrors</li>
	    <li>Prevent git operations for inactive users</li>
	    <li>Disallow urlencoded new lines in git protocol paths if there is a port</li>
	    <li>Mitigate Security vulnerability in the git hook feature</li>
	    <li>Disable DSA ssh keys by default </li>
	    <li>Set TLS minimum version to 1.2</li>
	    <li>Use argon as default password hash algorithm</li>
	    <li>Escape failed highlighted files</li>
	  </ul>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://github.com/go-gitea/gitea/releases/tag/v1.13.0</url>
      <freebsdpr>ports/251577</freebsdpr>
    </references>
    <dates>
      <discovery>2020-12-01</discovery>
      <entry>2020-12-04</entry>
    </dates>
  </vuln>

  <vuln vid="e2748c9d-3483-11eb-b87a-901b0ef719ab">
    <topic>FreeBSD -- Multiple vulnerabilities in rtsold</topic>
    <affects>
      <package>
	<name>FreeBSD</name>
	<range><ge>12.2</ge><lt>12.2_1</lt></range>
	<range><ge>12.1</ge><lt>12.1_11</lt></range>
	<range><ge>11.4</ge><lt>11.4_5</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<h1>Problem Description:</h1>
	<p>Two bugs exist in rtsold(8)'s RDNSS and DNSSL option handling.
	First, rtsold(8) failed to perform sufficient bounds checking on the
	extent of the option. In particular, it does not verify that the
	option does not extend past the end of the received packet before
	processing its contents. The kernel currently ignores such
	malformed packets but still passes them to userspace programs.</p>
	<p>Second, when processing a DNSSL option, rtsold(8) decodes domain
	name labels per an encoding specified in RFC 1035 in which the first
	octet of each label contains the label's length. rtsold(8) did not
	validate label lengths correctly and could overflow the destination
	buffer.</p>
	<h1>Impact:</h1>
	<p>It is believed that these bugs could be exploited to gain remote
	code execution within the rtsold(8) daemon, which runs as root.
	Note that rtsold(8) only processes messages received from hosts
	attached to the same physical link as the interface(s) on which
	rtsold(8) is listening.</p>
	<p>In FreeBSD 12.2 rtsold(8) runs in a Capsicum sandbox, limiting the
	scope of a compromised rtsold(8) process.</p>
      </body>
    </description>
    <references>
      <cvename>CVE-2020-25577</cvename>
      <freebsdsa>SA-20:32.rtsold</freebsdsa>
    </references>
    <dates>
      <discovery>2020-12-01</discovery>
      <entry>2020-12-02</entry>
    </dates>
  </vuln>

  <vuln vid="8eed0c5c-3482-11eb-b87a-901b0ef719ab">
    <topic>FreeBSD -- ICMPv6 use-after-free in error message handling</topic>
    <affects>
      <package>
	<name>FreeBSD-kernel</name>
	<range><ge>12.2</ge><lt>12.2_1</lt></range>
	<range><ge>12.1</ge><lt>12.1_11</lt></range>
	<range><ge>11.4</ge><lt>11.4_5</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<h1>Problem Description:</h1>
	<p>When an ICMPv6 error message is received, the FreeBSD ICMPv6 stack
	may extract information from the message to hand to upper-layer
	protocols. As a part of this operation, it may parse IPv6 header
	options from a packet embedded in the ICMPv6 message.</p>
	<p>The handler for a routing option caches a pointer into the packet
	buffer holding the ICMPv6 message. However, when processing
	subsequent options the packet buffer may be freed, rendering the
	cached pointer invalid. The network stack may later dereference the
	pointer, potentially triggering a use-after-free.</p>
	<h1>Impact:</h1>
	<p>A remote host may be able to trigger a read of freed kernel memory.
	This may trigger a kernel panic if the address had been unmapped.</p>
      </body>
    </description>
    <references>
      <cvename>CVE-2020-7469</cvename>
      <freebsdsa>SA-20:31.icmp6</freebsdsa>
    </references>
    <dates>
      <discovery>2020-12-01</discovery>
      <entry>2020-12-02</entry>
    </dates>
  </vuln>

  <vuln vid="76c8b690-340b-11eb-a2b7-54e1ad3d6335">
    <topic>xorg-server -- Multiple input validation failures in X server XKB extension</topic>
    <affects>
      <package>
	<name>xorg-server</name>
	<range><lt>1.20.9_1,1</lt></range>
      </package>
      <package>
	<name>xephyr</name>
	<range><lt>1.20.9_1,1</lt></range>
      </package>
      <package>
	<name>xorg-vfbserver</name>
	<range><lt>1.20.9_1,1</lt></range>
      </package>
      <package>
	<name>xorg-nestserver</name>
	<range><lt>1.20.9_1,1</lt></range>
      </package>
      <package>
	<name>xwayland</name>
	<range><lt>1.20.9_2,1</lt></range>
      </package>
      <package>
	<name>xorg-dmx</name>
	<range><lt>1.20.9_1,1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The X.org project reports:</p>
	<blockquote cite="https://lists.x.org/archives/xorg-announce/2020-December/003066.html">
	  <p>These issues can lead to privileges elevations for authorized
	    clients on systems where the X server is running privileged.</p>
	  <p>Insufficient checks on the lengths of the XkbSetMap request can
	    lead to out of bounds memory accesses in the X server.</p>
	  <p>Insufficient checks on input of the XkbSetDeviceInfo request can
	    lead to a buffer overflow on the head in the X server.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://lists.x.org/archives/xorg-announce/2020-December/003066.html</url>
      <cvename>CVE-2020-14360</cvename>
      <cvename>CVE-2020-25712</cvename>
    </references>
    <dates>
      <discovery>2020-12-01</discovery>
      <entry>2020-12-01</entry>
    </dates>
  </vuln>

  <vuln vid="618010ff-3044-11eb-8112-000c292ee6b8">
    <topic>nomad -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>nomad</name>
	<range><lt>0.12.6</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The HashiCorp team reports:</p>
	<blockquote cite="https://github.com/hashicorp/nomad/blob/master/CHANGELOG.md">
	  <ul>
	    <li>artifact: Fixed a bug where interpolation can be used in the
	      artifact destination field to write artifact payloads outside
	      the allocation directory.</li>
	    <li>template: Fixed a bug where interpolation can be used in the
	      template source and destination fields to read or write files
	      outside the allocation directory even when disable_file_sandbox
	      was set to false (the default).</li>
	    <li>template: Fixed a bug where the disable_file_sandbox
	      configuration was only respected for the template file function
	      and not the template source and destination fields.</li>
	  </ul>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://github.com/hashicorp/nomad/blob/master/CHANGELOG.md</url>
      <cvename>CVE-2020-27195</cvename>
    </references>
    <dates>
      <discovery>2020-10-21</discovery>
      <entry>2020-11-27</entry>
    </dates>
  </vuln>

  <vuln vid="55facdb0-2c24-11eb-9aac-08002734b9ed">
    <topic>gitea -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>gitea</name>
	<range><lt>1.12.6</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The Gitea Team reports for release 1.12.6:</p>
	<blockquote cite="https://blog.gitea.io/2020/11/gitea-1.12.6-is-released/">
	  <ul>
	  <li>Prevent git operations for inactive users</li>
	  <li>Disallow urlencoded new lines in git protocol paths if there is a port</li>
	  </ul>
	</blockquote>
      </body>
    </description>
    <references>
      <url>Disallow urlencoded new lines in git protocol paths if there is a port</url>
      <freebsdpr>ports/251296</freebsdpr>
    </references>
    <dates>
      <discovery>2020-11-16</discovery>
      <entry>2020-11-21</entry>
    </dates>
  </vuln>

  <vuln vid="ad792169-2aa4-11eb-ab71-0022489ad614">
    <topic>Node.js -- November 2020 Security Releases</topic>
    <affects>
      <package>
	<name>node</name>
	<range><lt>15.2.1</lt></range>
      </package>
      <package>
	<name>node14</name>
	<range><lt>14.15.1</lt></range>
      </package>
      <package>
	<name>node12</name>
	<range><lt>12.19.1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Node.js reports:</p>
	<blockquote cite="https://nodejs.org/en/blog/vulnerability/november-2020-security-releases/">
	  <p>Updates are now available for v12.x, v14.x and v15.x Node.js release lines for the following issues.</p>
	  <h1>Denial of Service through DNS request (CVE-2020-8277)</h1>
	  <p>A Node.js application that allows an attacker to trigger a DNS request for a host of their choice could trigger a Denial of service by getting the application to resolve a DNS record with a larger number of responses.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://nodejs.org/en/blog/vulnerability/november-2020-security-releases/</url>
      <cvename>CVE-2020-8277</cvename>
    </references>
    <dates>
      <discovery>2020-11-16</discovery>
      <entry>2020-11-21</entry>
    </dates>
  </vuln>

  <vuln vid="dc132c91-2b71-11eb-8cfd-4437e6ad11c4">
    <topic>mutt -- authentication credentials being sent over an unencrypted connection</topic>
    <affects>
      <package>
	<name>mutt</name>
	<range><lt>2.0.2</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Kevin J. McCarthy reports:</p>
	<blockquote cite="https://gitlab.com/muttmua/mutt/-/commit/04b06aaa3e0cc0022b9b01dbca2863756ebbf59a">
	    <p>Mutt had incorrect error handling when initially connecting to an IMAP
	       server, which could result in an attempt to authenticate without enabling TLS.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2020-28896</cvename>
      <url>https://gitlab.com/muttmua/mutt/-/commit/04b06aaa3e0cc0022b9b01dbca2863756ebbf59a</url>
    </references>
    <dates>
      <discovery>2020-11-20</discovery>
      <entry>2020-11-20</entry>
    </dates>
  </vuln>

  <vuln vid="040707f9-0b2a-11eb-8834-00155d01f202">
    <topic>mozjpeg -- heap-based buffer over-read in get_rgb_row() in rdppm.c via a malformed PPM input file</topic>
    <affects>
      <package>
	<name>mozjpeg</name>
	<range><lt>4.0.0</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>NIST reports:</p>
	<blockquote cite="https://nvd.nist.gov/vuln/detail/CVE-2020-13790">
	<ul>
	   <li>Heap-based buffer over-read in get_rgb_row() in rdppm.c via a malformed PPM input file.</li>
	</ul>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2020-13790</cvename>
      <url>https://nvd.nist.gov/vuln/detail/CVE-2020-13790</url>
    </references>
    <dates>
      <discovery>2020-06-03</discovery>
      <entry>2020-10-10</entry>
    </dates>
  </vuln>

  <vuln vid="23a667c7-0b28-11eb-8834-00155d01f202">
    <topic>libjpeg-turbo -- Issue in the PPM reader causing a buffer overrun in cjpeg, TJBench, or the tjLoadImage() function.</topic>
    <affects>
      <package>
	<name>libjpeg-turbo</name>
	<range><lt>2.0.4</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>libjpeg-turbo releases reports:</p>
	<blockquote cite="https://github.com/libjpeg-turbo/libjpeg-turbo/releases/tag/2.0.5">
	  <p>This release fixes the following security issue:</p>
	  <ul>
	     <li>Heap-based buffer over-read in get_rgb_row() in rdppm.c via a malformed PPM input file.</li>
	  </ul>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2020-13790</cvename>
      <url>https://nvd.nist.gov/vuln/detail/CVE-2020-13790</url>
    </references>
    <dates>
      <discovery>2020-06-03</discovery>
      <entry>2020-10-10</entry>
    </dates>
  </vuln>

  <vuln vid="19259833-26b1-11eb-a239-1c697a013f4b">
    <topic>mantis -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>mantis-php72</name>
	<name>mantis-php73</name>
	<name>mantis-php74</name>
	<name>mantis-php80</name>
	<range><lt>2.24.3,1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Mantis 2.24.3 release reports:</p>
	<blockquote cite="https://mantisbt.org/bugs/changelog_page.php?project=mantisbt&amp;version=2.24.3">
	  <p>This release fixes 3 security issues:</p>
	  <ul>
	    <li>0027039: CVE-2020-25781: Access to private bug note attachments</li>
	    <li>0027275: CVE-2020-25288: HTML Injection on bug_update_page.php</li>
	    <li>0027304: CVE-2020-25830: HTML Injection in bug_actiongroup_page.php</li>
	  </ul>
	</blockquote>
      </body>
    </description>
    <references>
      <freebsdpr>ports/251141</freebsdpr>
      <cvename>CVE-2020-25781</cvename>
      <url>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-25781</url>
      <cvename>CVE-2020-25288</cvename>
      <url>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-25288</url>
      <cvename>CVE-2020-25830</cvename>
      <url>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-25830</url>
    </references>
    <dates>
      <discovery>2020-09-13</discovery>
      <entry>2020-11-14</entry>
      <modified>2020-11-15</modified>
    </dates>
  </vuln>

  <vuln vid="db4b2f27-252a-11eb-865c-00155d646400">
    <topic>go -- math/big: panic during recursive division of very large numbers; cmd/go: arbitrary code execution at build time through cgo</topic>
    <affects>
      <package>
	<name>go</name>
	<range><lt>1.15.5,1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The Go project reports:</p>
	<blockquote cite="https://github.com/golang/go/issues/42552">
	  <p>A number of math/big.Int methods (Div, Exp, DivMod, Quo, Rem,
	    QuoRem, Mod, ModInverse, ModSqrt, Jacobi, and GCD) can panic
	    when provided crafted large inputs. For the panic to happen,
	    the divisor or modulo argument must be larger than 3168 bits
	    (on 32-bit architectures) or 6336 bits (on 64-bit architectures).
	    Multiple math/big.Rat methods are similarly affected.</p>
	</blockquote>
	<blockquote cite="https://github.com/golang/go/issues/42556">
	  <p>The go command may execute arbitrary code at build time when
	    cgo is in use. This may occur when running go get on a malicious
	    package, or any other command that builds untrusted code.  This
	    can be caused by a malicious gcc flags specified via a #cgo
	    directive.</p>
	</blockquote>
	<blockquote cite="https://github.com/golang/go/issues/42559">
	  <p>The go command may execute arbitrary code at build time when
	    cgo is in use. This may occur when running go get on a malicious
	    package, or any other command that builds untrusted code.  This
	    can be caused by malicious unquoted symbol names.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2020-28362</cvename>
      <url>https://github.com/golang/go/issues/42552</url>
      <cvename>CVE-2020-28367</cvename>
      <url>https://github.com/golang/go/issues/42556</url>
      <cvename>CVE-2020-28366</cvename>
      <url>https://github.com/golang/go/issues/42559</url>
    </references>
    <dates>
      <discovery>2020-11-09</discovery>
      <entry>2020-11-12</entry>
    </dates>
  </vuln>

  <vuln vid="50259d8b-243e-11eb-8bae-b42e99975750">
    <topic>salt -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>py36-salt</name>
	<name>py37-salt</name>
	<name>py38-salt</name>
	<range><ge>3002</ge><lt>3002.1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>SaltStack reports multiple security vulnerabilities in Salt 3002:</p>
	<blockquote cite="https://docs.saltstack.com/en/latest/topics/releases/3002.1.html">
	  <ul>
	    <li>CVE-2020-16846: Prevent shell injections in netapi ssh client.</li>
	    <li>CVE-2020-17490: Prevent creating world readable private keys with the tls execution module.</li>
	    <li>CVE-2020-25592: Properly validate eauth credentials and tokens along with their ACLs.
	    Prior to this change eauth was not properly validated when calling Salt ssh via the salt-api.
	    Any value for 'eauth' or 'token' would allow a user to bypass authentication and make calls
	    to Salt ssh.</li>
	  </ul>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://docs.saltstack.com/en/latest/topics/releases/3002.1.html</url>
      <cvename>CVE-2020-16846</cvename>
      <url>https://nvd.nist.gov/vuln/detail/CVE-2020-16846</url>
      <cvename>CVE-2020-17490</cvename>
      <url>https://nvd.nist.gov/vuln/detail/CVE-2020-17490</url>
      <cvename>CVE-2020-25592</cvename>
      <url>https://nvd.nist.gov/vuln/detail/CVE-2020-25592</url>
    </references>
    <dates>
      <discovery>2020-11-06</discovery>
      <entry>2020-11-12</entry>
    </dates>
  </vuln>

  <vuln vid="4f15ca7b-23ae-11eb-9f59-1c1b0d9ea7e6">
    <topic>Apache OpenOffice -- Unrestricted actions leads to arbitrary code execution in crafted documents</topic>
    <affects>
      <package>
	<name>apache-openoffice</name>
	<range><lt>4.1.8</lt></range>
      </package>
      <package>
	<name>apache-openoffice-devel</name>
	<range><lt>4.2.1602022694,4</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The Apache Openofffice project reports:</p>
	<blockquote cite="https://www.openoffice.org/security/cves/CVE-2020-13958.html">
	  <h1>CVE-2020-13958 Unrestricted actions leads to arbitrary code execution in crafted documents</h1>
	  <h2>Description</h2>
	  <p>A vulnerability in Apache OpenOffice scripting events allows an attacker to construct documents containing hyperlinks pointing to an executable on the target users file system. These hyperlinks can be triggered unconditionally. In fixed versions no internal protocol may be called from the document event handler and other hyperlinks require a control-click.</p>
	  <h2>Severity: Low</h2>
	  <p>There are no known exploits of this vulnerability.<br/>A proof-of-concept demonstration exists.</p>
	  <p>Thanks to the reporter for discovering this issue.</p>
	  <h2>Acknowledgments</h2>
	  <p>The Apache OpenOffice Security Team would like to thank Imre Rad for discovering and reporting this attack vector.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://www.openoffice.org/security/cves/CVE-2020-13958.html</url>
      <cvename>CVE-2020-13958</cvename>
    </references>
    <dates>
      <discovery>2020-04-28</discovery>
      <entry>2020-11-10</entry>
    </dates>
  </vuln>

  <vuln vid="07c7ae7a-224b-11eb-aa6e-e0d55e2a8bf9">
    <topic>raptor2 -- buffer overflow</topic>
    <affects>
      <package>
	<name>raptor2</name>
	<range><lt>2.0.15_16</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>CVE MITRE reports:</p>
	<blockquote cite="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-18926">
	  <p>
	    raptor_xml_writer_start_element_common in raptor_xml_writer.c in Raptor RDF Syntax Library 2.0.15 miscalculates the maximum nspace declarations for the XML writer, leading to heap-based buffer overflows (sometimes seen in raptor_qname_format_as_xml).
	  </p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-18926</url>
      <url>https://github.com/LibreOffice/core/blob/master/external/redland/raptor/0001-Calcualte-max-nspace-declarations-correctly-for-XML-.patch.1</url>
      <cvename>CVE-2017-18926</cvename>
    </references>
    <dates>
      <discovery>2017-04-16</discovery>
      <entry>2020-11-09</entry>
    </dates>
  </vuln>

  <vuln vid="cf39ddf8-21be-11eb-8b47-641c67a117d8">
    <topic>jupyter notebook -- open redirect vulnerability</topic>
    <affects>
      <package>
	<name>py37-notebook</name>
	<name>py38-notebook</name>
	<name>py39-notebook</name>
	<range><lt>6.1.5</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Jupyter reports:</p>
	<blockquote cite="https://jupyter-notebook.readthedocs.io/en/stable/changelog.html#release-6-1-5">
	  <p>6.1.5 is a security release, fixing one vulnerability:
	    Fix open redirect vulnerability GHSA-c7vm-f5p4-8fqh (CVE to be assigned)
	  </p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://jupyter-notebook.readthedocs.io/en/stable/changelog.html#release-6-1-5</url>
      <url>https://github.com/jupyter/notebook/blob/6.1.5/docs/source/changelog.rst</url>
    </references>
    <dates>
      <discovery>2020-10-15</discovery>
      <entry>2020-11-08</entry>
    </dates>
  </vuln>

  <vuln vid="29b7f0be-1fb7-11eb-b9d4-001999f8d30b">
    <topic>asterisk -- Outbound INVITE loop on challenge with different nonce</topic>
    <affects>
      <package>
	<name>asterisk13</name>
	<range><lt>13.37.1</lt></range>
      </package>
      <package>
	<name>asterisk16</name>
	<range><lt>16.14.1</lt></range>
      </package>
      <package>
	<name>asterisk18</name>
	<range><lt>18.0.1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The Asterisk project reports:</p>
	<blockquote cite="https://www.asterisk.org/downloads/security-advisories">
	  <p>If Asterisk is challenged on an outbound INVITE and
	  the nonce is changed in each response, Asterisk will
	  continually send INVITEs in a loop. This causes Asterisk
	  to consume more and more memory since the transaction
	  will never terminate (even if the call is hung up),
	  ultimately leading to a restart or shutdown of Asterisk.
	  Outbound authentication must be configured on the endpoint
	  for this to occur.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://downloads.asterisk.org/pub/security/AST-2020-002.html</url>
    </references>
    <dates>
      <discovery>2020-11-05</discovery>
      <entry>2020-11-05</entry>
    </dates>
  </vuln>

  <vuln vid="972fe546-1fb6-11eb-b9d4-001999f8d30b">
    <topic>asterisk -- Remote crash in res_pjsip_session</topic>
    <affects>
      <package>
	<name>asterisk13</name>
	<range><lt>13.37.1</lt></range>
      </package>
      <package>
	<name>asterisk16</name>
	<range><lt>16.14.1</lt></range>
      </package>
      <package>
	<name>asterisk18</name>
	<range><lt>18.0.1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The Asterisk project reports:</p>
	<blockquote cite="https://www.asterisk.org/downloads/security-advisories">
	  <p> Upon receiving a new SIP Invite, Asterisk did not
	  return the created dialog locked or referenced. This
	  caused a gap between the creation of the dialog object,
	  and its next use by the thread that created it. Depending
	  upon some off nominal circumstances, and timing it was
	  possible for another thread to free said dialog in this
	  gap. Asterisk could then crash when the dialog object,
	  or any of its dependent objects were de-referenced, or
	  accessed next by the initial creation thread.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://downloads.asterisk.org/pub/security/AST-2020-001.html</url>
    </references>
    <dates>
      <discovery>2020-11-05</discovery>
      <entry>2020-11-05</entry>
    </dates>
  </vuln>

  <vuln vid="3ec6ab59-1e0c-11eb-a428-3065ec8fd3ec">
    <topic>chromium -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>chromium</name>
	<range><lt>86.0.4240.183</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Chrome Releases reports:</p>
	<blockquote cite="https://chromereleases.googleblog.com/2020/11/stable-channel-update-for-desktop.html">
	  <p>This release contains 10 security fixes, including:</p>
	  <ul>
	    <li>[1138911] High CVE-2020-16004: Use after free in user interface.
	      Reported by Leecraso and Guang Gong of 360 Alpha Lab working with
	      360 BugCloud on 2020-10-15</li>
	    <li>[1139398] High CVE-2020-16005: Insufficient policy enforcement
	      in ANGLE. Reported by Jaehun Jeong (@n3sk) of Theori on
	      2020-10-16</li>
	    <li>[1133527] High CVE-2020-16006: Inappropriate implementation in
	      V8. Reported by Bill Parks on 2020-09-29</li>
	    <li>[1125018] High CVE-2020-16007: Insufficient data validation in
	      installer. Reported by Abdelhamid Naceri (halov) on
	      2020-09-04</li>
	    <li>[1134107] High CVE-2020-16008: Stack buffer overflow in WebRTC.
	      Reported by Tolya Korniltsev on 2020-10-01</li>
	    <li>[1143772] High CVE-2020-16009: Inappropriate implementation in
	      V8. Reported by Clement Lecigne of Google's Threat Analysis Group
	      and Samuel Groß of Google Project Zero on 2020-10-29</li>
	    <li>[1144489] High CVE-2020-16011: Heap buffer overflow in UI on
	      Windows. Reported by Sergei Glazunov of Google Project Zero on
	      2020-11-01</li>
	  </ul>
	  <p>There are reports that an exploit for CVE-2020-16009 exists in the
	  wild.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2020-16004</cvename>
      <cvename>CVE-2020-16005</cvename>
      <cvename>CVE-2020-16006</cvename>
      <cvename>CVE-2020-16007</cvename>
      <cvename>CVE-2020-16008</cvename>
      <cvename>CVE-2020-16009</cvename>
      <cvename>CVE-2020-16011</cvename>
      <url>https://chromereleases.googleblog.com/2020/11/stable-channel-update-for-desktop.html</url>
    </references>
    <dates>
      <discovery>2020-11-02</discovery>
      <entry>2020-11-03</entry>
    </dates>
  </vuln>

  <vuln vid="174e466b-1d48-11eb-bd0f-001b217b3468">
    <topic>Gitlab -- Multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>gitlab-ce</name>
	<range><ge>13.5.0</ge><lt>13.5.2</lt></range>
	<range><ge>13.4.0</ge><lt>13.4.5</lt></range>
	<range><ge>8.8.9</ge><lt>13.3.9</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Gitlab reports:</p>
	<blockquote cite="https://about.gitlab.com/releases/2020/11/02/security-release-gitlab-13-5-2-released/">
	  <p>Path Traversal in LFS Upload</p>
	  <p>Path traversal allows saving packages in arbitrary location</p>
	  <p>Kubernetes agent API leaks private repos</p>
	  <p>Terraform state deletion API exposes object storage URL</p>
	  <p>Stored-XSS in error message of build-dependencies</p>
	  <p>Git credentials persisted on disk</p>
	  <p>Potential Denial of service via container registry</p>
	  <p>Info leak when group is transferred from private to public group</p>
	  <p>Limited File Disclosure Via Multipart Bypass</p>
	  <p>Unauthorized user is able to access scheduled pipeline variables and values</p>
	  <p>CSRF in runner administration page allows an attacker to pause/resume runners</p>
	  <p>Regex backtracking attack in path parsing of Advanced Search result</p>
	  <p>Bypass of required CODEOWNERS approval</p>
	  <p>SAST CiConfiguration information visible without permissions</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://about.gitlab.com/releases/2020/11/02/security-release-gitlab-13-5-2-released/</url>
      <cvename>CVE-2020-13355</cvename>
      <cvename>CVE-2020-26405</cvename>
      <cvename>CVE-2020-13358</cvename>
      <cvename>CVE-2020-13359</cvename>
      <cvename>CVE-2020-13340</cvename>
      <cvename>CVE-2020-13353</cvename>
      <cvename>CVE-2020-13354</cvename>
      <cvename>CVE-2020-13352</cvename>
      <cvename>CVE-2020-13356</cvename>
      <cvename>CVE-2020-13351</cvename>
      <cvename>CVE-2020-13350</cvename>
      <cvename>CVE-2020-13349</cvename>
      <cvename>CVE-2020-13348</cvename>
    </references>
    <dates>
      <discovery>2020-11-02</discovery>
      <entry>2020-11-02</entry>
    </dates>
  </vuln>

  <vuln vid="11325357-1d3c-11eb-ab74-4c72b94353b5">
    <topic>wordpress -- multiple issues</topic>
    <affects>
      <package>
	<name>wordpress</name>
	<name>fr-wordpress</name>
	<range><lt>5.5.2,1</lt></range>
      </package>
      <package>
	<name>de-wordpress</name>
	<name>zh_CN-wordpress</name>
	<name>zh_TW-wordpress</name>
	<name>ja-wordpress</name>
	<name>ru-wordpress</name>
	<range><lt>5.5.2</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>wordpress developers reports:</p>
	<blockquote cite="https://wordpress.org/news/2020/10/wordpress-5-5-2-security-and-maintenance-release/">
	  <p>Ten security issues affect WordPress versions 5.5.1 and earlier. If you havent yet updated to 5.5,
	    all WordPress versions since 3.7 have also been updated to fix the following security issues:
	    -Props to Alex Concha of the WordPress Security Team for their work in hardening deserialization requests.
	    -Props to David Binovec on a fix to disable spam embeds from disabled sites on a multisite network.
	    -Thanks to Marc Montas from Sucuri for reporting an issue that could lead to XSS from global variables.
	    -Thanks to Justin Tran who reported an issue surrounding privilege escalation in XML-RPC. He also found and disclosed an issue around privilege escalation around post commenting via XML-RPC.
	    -Props to Omar Ganiev who reported a method where a DoS attack could lead to RCE.
	    -Thanks to Karim El Ouerghemmi from RIPS who disclosed a method to store XSS in post slugs.
	    -Thanks to Slavco for reporting, and confirmation from Karim El Ouerghemmi, a method to bypass protected meta that could lead to arbitrary file deletion.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://wordpress.org/news/2020/10/wordpress-5-5-2-security-and-maintenance-release/</url>
    </references>
    <dates>
      <discovery>2020-10-29</discovery>
      <entry>2020-11-02</entry>
    </dates>
  </vuln>

  <vuln vid="9ca85b7c-1b31-11eb-8762-005056a311d1">
    <topic>samba -- Multiple Vulnerabilities</topic>
    <affects>
      <package>
	<name>samba410</name>
	<range><le>4.10.18</le></range>
      </package>
      <package>
	<name>samba411</name>
	<range><lt>4.11.15</lt></range>
      </package>
      <package>
	<name>samba412</name>
	<range><lt>4.12.9</lt></range>
      </package>
      <package>
	<name>samba413</name>
	<range><lt>4.13.1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The Samba Team reports:</p>
	<blockquote cite="https://www.samba.org/samba/history/security.html">
	  <ul>
	  <li>CVE-2020-14318: Missing handle permissions check in SMB1/2/3 ChangeNotify</li>
	  <li>CVE-2020-14323: Unprivileged user can crash winbind</li>
	  <li>CVE-2020-14383: An authenticated user can crash the DCE/RPC DNS with easily crafted records</li>
	  </ul>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://www.samba.org/samba/security/CVE-2020-14318.html</url>
      <url>https://www.samba.org/samba/security/CVE-2020-14323.html</url>
      <url>https://www.samba.org/samba/security/CVE-2020-14383.html</url>
      <cvename>CVE-2020-14318</cvename>
      <cvename>CVE-2020-14323</cvename>
      <cvename>CVE-2020-14383</cvename>
    </references>
    <dates>
      <discovery>2020-10-29</discovery>
      <entry>2020-10-30</entry>
    </dates>
  </vuln>

  <vuln vid="8827134c-1a8f-11eb-9bb0-08002725d892">
    <topic>tmux -- stack overflow in CSI parsing</topic>
    <affects>
      <package>
	<name>tmux</name>
	<range><lt>3.1c</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Nicholas Marriott reports:</p>
	<blockquote cite="https://groups.google.com/g/tmux-users/c/DGfmsD9CM00/m/Six6uZG0AQAJ">
	  <p>tmux has a stack overflow in CSI parsing.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://groups.google.com/g/tmux-users/c/DGfmsD9CM00/m/Six6uZG0AQAJ</url>
      <url>https://marc.info/?l=openbsd-announce&amp;m=160399126725142&amp;w=2</url>
    </references>
    <dates>
      <discovery>2020-10-29</discovery>
      <entry>2020-10-30</entry>
    </dates>
  </vuln>

  <vuln vid="94ffc0d9-1915-11eb-b809-b42e991fc52e">
    <topic>motion -- Denial of Service</topic>
    <affects>
      <package>
	<name>motion</name>
	<range><ge>3.2</ge><lt>4.3.1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>cxsecurity.com reports:</p>
	<blockquote cite="https://cxsecurity.com/cveshow/CVE-2020-26566/">
	  <p>A Denial of Service condition in Motion-Project Motion 3.2 through
	  4.3.1 allows remote unauthenticated users to cause a webu.c
	  segmentation fault and kill the main process via a crafted HTTP
	  request</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://cve-search.iicrai.org/cve/CVE-2020-26566</url>
    </references>
    <dates>
      <discovery>2020-10-05</discovery>
      <entry>2020-10-28</entry>
    </dates>
  </vuln>

  <vuln vid="458df97f-1440-11eb-aaec-e0d55e2a8bf9">
    <topic>freetype2 -- heap buffer overlfow</topic>
    <affects>
      <package>
	<name>freetype2</name>
	<range><lt>2.10.4</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The freetype project reports:</p>
	<blockquote cite="https://sourceforge.net/projects/freetype/files/freetype2/2.10.4/">
	  <p>A heap buffer overflow has been found  in the handling of embedded
	    PNG bitmaps, introduced in FreeType version 2.6.
	  </p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://sourceforge.net/projects/freetype/files/freetype2/2.10.4/</url>
      <cvename>CVE-2020-15999</cvename>
    </references>
    <dates>
      <discovery>2020-10-20</discovery>
      <entry>2020-10-22</entry>
    </dates>
  </vuln>

  <vuln vid="4fba07ca-13aa-11eb-b31e-d4c9ef517024">
    <topic>MySQL -- Multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>mariadb103-server</name>
	<range><lt>10.3.26</lt></range>
      </package>
      <package>
	<name>mariadb104-server</name>
	<range><lt>10.4.16</lt></range>
      </package>
      <package>
	<name>mariadb105-server</name>
	<range><lt>10.5.7</lt></range>
      </package>
      <package>
	<name>mysql56-server</name>
	<range><lt>5.6.50</lt></range>
      </package>
      <package>
	<name>mysql57-server</name>
	<range><lt>5.7.32</lt></range>
      </package>
      <package>
	<name>mysql80-server</name>
	<range><lt>8.0.22</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Oracle reports:</p>
	<blockquote cite="https://www.oracle.com/security-alerts/cpuoct2020.html#AppendixMSQL">
	  <p>This Critical Patch Update contains 48 new security patches for
	    Oracle MySQL.</p>
	  <p>The highest CVSS v3.1 Base Score of vulnerabilities affecting Oracle
	    MySQL is 8.</p>
	  <p>NOTE: MariaDB only contains CVE-2020-14812 CVE-2020-14765
	    CVE-2020-14776 and CVE-2020-14789</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://www.oracle.com/security-alerts/cpuoct2020.html#AppendixMSQL</url>
      <cvename>CVE-2020-14878</cvename>
      <cvename>CVE-2020-14828</cvename>
      <cvename>CVE-2020-14775</cvename>
      <cvename>CVE-2020-14765</cvename>
      <cvename>CVE-2020-14769</cvename>
      <cvename>CVE-2020-14830</cvename>
      <cvename>CVE-2020-14836</cvename>
      <cvename>CVE-2020-14846</cvename>
      <cvename>CVE-2020-14800</cvename>
      <cvename>CVE-2020-14827</cvename>
      <cvename>CVE-2020-14760</cvename>
      <cvename>CVE-2020-14776</cvename>
      <cvename>CVE-2020-14821</cvename>
      <cvename>CVE-2020-14829</cvename>
      <cvename>CVE-2020-14848</cvename>
      <cvename>CVE-2020-14852</cvename>
      <cvename>CVE-2020-14814</cvename>
      <cvename>CVE-2020-14789</cvename>
      <cvename>CVE-2020-14804</cvename>
      <cvename>CVE-2020-14812</cvename>
      <cvename>CVE-2020-14773</cvename>
      <cvename>CVE-2020-14777</cvename>
      <cvename>CVE-2020-14785</cvename>
      <cvename>CVE-2020-14793</cvename>
      <cvename>CVE-2020-14794</cvename>
      <cvename>CVE-2020-14809</cvename>
      <cvename>CVE-2020-14837</cvename>
      <cvename>CVE-2020-14839</cvename>
      <cvename>CVE-2020-14845</cvename>
      <cvename>CVE-2020-14861</cvename>
      <cvename>CVE-2020-14866</cvename>
      <cvename>CVE-2020-14868</cvename>
      <cvename>CVE-2020-14888</cvename>
      <cvename>CVE-2020-14891</cvename>
      <cvename>CVE-2020-14893</cvename>
      <cvename>CVE-2020-14786</cvename>
      <cvename>CVE-2020-14790</cvename>
      <cvename>CVE-2020-14844</cvename>
      <cvename>CVE-2020-14799</cvename>
      <cvename>CVE-2020-14869</cvename>
      <cvename>CVE-2020-14672</cvename>
      <cvename>CVE-2020-14870</cvename>
      <cvename>CVE-2020-14867</cvename>
      <cvename>CVE-2020-14873</cvename>
      <cvename>CVE-2020-14838</cvename>
      <cvename>CVE-2020-14860</cvename>
      <cvename>CVE-2020-14791</cvename>
      <cvename>CVE-2020-14771</cvename>
    </references>
    <dates>
      <discovery>2020-10-20</discovery>
      <entry>2020-10-21</entry>
      <modified>2020-11-07</modified>
    </dates>
  </vuln>

  <vuln vid="f4722927-1375-11eb-8711-3065ec8fd3ec">
    <topic>chromium -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>chromium</name>
	<range><lt>86.0.4240.111</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Chrome Releases reports:</p>
	<blockquote cite="https://chromereleases.googleblog.com/2020/10/stable-channel-update-for-desktop_20.html">
	  <p>This release includes 5 security fixes:</p>
	  <ul>
	    <li>[1125337] High CVE-2020-16000: Inappropriate implementation in
	    Blink. Reported by amaebi_jp on 2020-09-06</li>
	    <li>[1135018] High CVE-2020-16001: Use after free in media.
	    Reported by Khalil Zhani on 2020-10-05</li>
	    <li>[1137630] High CVE-2020-16002: Use after free in PDFium.
	    Reported by Weipeng Jiang (@Krace) from Codesafe Team of Legendsec
	    at Qi'anxin Group on 2020-10-13</li>
	    <li>[1139963] High CVE-2020-15999: Heap buffer overflow in
	    Freetype. Reported by Sergei Glazunov of Google Project Zero on
	    2020-10-19</li>
	    <li>[1134960] Medium CVE-2020-16003: Use after free in printing.
	    Reported by Khalil Zhani on 2020-10-04</li>
	  </ul>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2020-15999</cvename>
      <cvename>CVE-2020-16000</cvename>
      <cvename>CVE-2020-16001</cvename>
      <cvename>CVE-2020-16002</cvename>
      <cvename>CVE-2020-16003</cvename>
      <url>https://chromereleases.googleblog.com/2020/10/stable-channel-update-for-desktop_20.html</url>
    </references>
    <dates>
      <discovery>2020-10-20</discovery>
      <entry>2020-10-21</entry>
    </dates>
  </vuln>

  <vuln vid="a6860b11-0dee-11eb-94ff-6805ca2fa271">
    <topic>powerdns-recursor -- cache pollution</topic>
    <affects>
      <package>
	<name>powerdns-recursor</name>
	<range><ge>4.3.0</ge><lt>4.3.5</lt></range>
	<range><ge>4.2.0</ge><lt>4.2.5</lt></range>
	<range><ge>4.1.0</ge><lt>4.1.18</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>PowerDNS Team reports:</p>
	<blockquote cite="https://doc.powerdns.com/recursor/changelog/4.3.html#change-4.3.5">
	  <p>CVE-2020-25829: An issue has been found in PowerDNS Recursor where a
	    remote attacker can cause the cached records for a given name to be
	    updated to the ‘Bogus’ DNSSEC validation state, instead of their actual
	    DNSSEC ‘Secure’ state, via a DNS ANY query. This results in a denial
	    of service for installations that always validate (dnssec=validate)
	    and for clients requesting validation when on-demand validation is
	    enabled (dnssec=process).</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://doc.powerdns.com/recursor/security-advisories/powerdns-advisory-2020-07.html</url>
      <cvename>CVE-2020-25829</cvename>
    </references>
    <dates>
      <discovery>2020-10-13</discovery>
      <entry>2020-10-14</entry>
    </dates>
  </vuln>

  <vuln vid="a2565962-1156-11eb-9c9c-d4c9ef517024">
    <topic>MariaDB -- Undisclosed vulnerability</topic>
    <affects>
      <package>
	<name>mariadb103-client</name>
	<range><lt>10.3.25</lt></range>
      </package>
      <package>
	<name>mariadb103-server</name>
	<range><lt>10.3.25</lt></range>
      </package>
      <package>
	<name>mariadb104-client</name>
	<range><lt>10.4.15</lt></range>
      </package>
      <package>
	<name>mariadb104-server</name>
	<range><lt>10.4.15</lt></range>
      </package>
      <package>
	<name>mariadb105-client</name>
	<range><lt>10.5.6</lt></range>
      </package>
      <package>
	<name>mariadb105-server</name>
	<range><lt>10.5.6</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The MariaDB project reports:</p>
	<blockquote cite="https://mariadb.com/kb/en/mariadb-1056-release-notes/">
	  <p>Details of this vulnerability have not yet been disclosed</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://mariadb.com/kb/en/mariadb-1056-release-notes/</url>
      <url>https://mariadb.com/kb/en/mariadb-10415-release-notes/</url>
      <url>https://mariadb.com/kb/en/mariadb-10325-release-notes/</url>
      <cvename>CVE-2020-15180</cvename>
    </references>
    <dates>
      <discovery>2020-10-07</discovery>
      <entry>2020-10-18</entry>
    </dates>
  </vuln>

  <vuln vid="5f39d80f-107c-11eb-8b47-641c67a117d8">
    <topic>py-matrix-synapse -- XSS vulnerability</topic>
    <affects>
      <package>
	<name>py36-matrix-synapse</name>
	<name>py37-matrix-synapse</name>
	<name>py38-matrix-synapse</name>
	<name>py39-matrix-synapse</name>
	<range><lt>1.21.0</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Matrix developers reports:</p>
	<blockquote cite="https://github.com/matrix-org/synapse/security/advisories/GHSA-3x8c-fmpc-5rmq">
	  <p>The fallback authentication endpoint served via Synapse were vulnerable
	    to cross-site scripting (XSS) attacks. The impact depends on the
	    configuration of the domain that Synapse is deployed on, but may allow
	    access to cookies and other browser data, CSRF vulnerabilities, and
	    access to other resources served on the same domain or parent domains.</p>
   </blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2020-26891</cvename>
      <url>https://github.com/matrix-org/synapse/security/advisories/GHSA-3x8c-fmpc-5rmq</url>
      <url>https://github.com/matrix-org/synapse/releases/tag/v1.21.2</url>
      <freebsdpr>ports/249948</freebsdpr>
    </references>
    <dates>
      <discovery>2020-10-01</discovery>
      <entry>2020-10-17</entry>
    </dates>
  </vuln>

  <vuln vid="95d9d986-1078-11eb-ab74-4c72b94353b5">
    <topic>drupal -- Multiple Vulnerabilities</topic>
    <affects>
      <package>
	<name>drupal7</name>
	<range><lt>7.72</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Drupal Security Team reports:</p>
	<blockquote cite="https://www.drupal.org/project/drupal/releases/7.73">
	  <p>The Drupal AJAX API does not disable JSONP by default, which can
	    lead to cross-site scripting.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://www.drupal.org/sa-core-2020-007</url>
    </references>
    <dates>
      <discovery>2020-09-16</discovery>
      <entry>2020-10-17</entry>
    </dates>
  </vuln>

  <vuln vid="42926d7b-0da3-11eb-8dbd-6451062f0f7a">
    <topic>Flash Player -- arbitrary code execution</topic>
    <affects>
      <package>
	<name>linux-flashplayer</name>
	<range><lt>32.0.0.445</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Adobe reports:</p>
	<blockquote cite="https://helpx.adobe.com/security/products/flash-player/apsb20-58.html">
	  <ul>
	    <li>This update resolves a NULL pointer dereference vulnerability
	      that could lead to arbitrary code execution (CVE-2020-9746).</li>
	  </ul>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2020-9746</cvename>
      <url>https://helpx.adobe.com/security/products/flash-player/apsb20-58.html</url>
    </references>
    <dates>
      <discovery>2020-10-13</discovery>
      <entry>2020-10-13</entry>
    </dates>
  </vuln>

  <vuln vid="95f306a6-0aee-11eb-add4-08002728f74c">
    <topic>Rails -- Possible XSS vulnerability</topic>
    <affects>
      <package>
	<name>rubygem-actionpack60</name>
	<range><lt>6.0.3.4</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Ruby on Rails blog:</p>
	<blockquote cite="https://weblog.rubyonrails.org/2020/10/7/Rails-6-0-3-4-has-been-released/">
	  <p>Rails version 6.0.3.4 has been released! This version is a security
	    release and addresses one possible XSS attack vector in Actionable
	    Exceptions.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://weblog.rubyonrails.org/2020/10/7/Rails-6-0-3-4-has-been-released/</url>
      <cvename>CVE-2020-8264</cvename>
    </references>
    <dates>
      <discovery>2020-10-07</discovery>
      <entry>2020-10-10</entry>
    </dates>
  </vuln>

  <vuln vid="b07bdd3c-0809-11eb-a3a4-0019dbb15b3f">
    <topic>Payara -- path trasversal flaw via either loc/con parameters in Eclipse Mojarra</topic>
    <affects>
      <package>
	<name>payara</name>
	<range><lt>5.201</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Payara Releases reports:</p>
	<blockquote cite="https://docs.payara.fish/community/docs/5.2020.4/security/security-fix-list.html">
	  <p>The following is a list of tracked Common Vulnerabilities and Exposures that have been reported and analyzed, which can or have impacted Payara Server across releases:</p>
	  <ul>
	    <li>CVE-2020-6950 Eclipse Mojarra vulnerable to path trasversal flaw via either loc/con parameters</li>
	  </ul>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2020-6950</cvename>
      <url>https://docs.payara.fish/community/docs/5.2020.4/security/security-fix-list.html</url>
    </references>
    <dates>
      <discovery>2020-01-13</discovery>
      <entry>2020-10-06</entry>
    </dates>
  </vuln>

  <vuln vid="bd159669-0808-11eb-a3a4-0019dbb15b3f">
    <topic>Payara -- A Polymorphic Typing issue in FasterXML jackson-databind</topic>
    <affects>
      <package>
	<name>payara</name>
	<range><lt>5.193</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Payara Releases reports:</p>
	<blockquote cite="https://docs.payara.fish/community/docs/5.193/security/security-fix-list.html">
	  <p>The following is a list of tracked Common Vulnerabilities and Exposures that have been reported and analyzed, which can or have impacted Payara Server across releases:</p>
	  <ul>
	    <li>CVE-2019-12086 A Polymorphic Typing issue was discovered in FasterXML jackson-databind 2.x before 2.9.9</li>
	  </ul>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2019-12086</cvename>
      <url>https://docs.payara.fish/community/docs/5.193/security/security-fix-list.html</url>
    </references>
    <dates>
      <discovery>2019-05-17</discovery>
      <entry>2020-10-06</entry>
    </dates>
  </vuln>

  <vuln vid="71c71ce0-0805-11eb-a3a4-0019dbb15b3f">
    <topic>payara -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>payara</name>
	<range><lt>5.191</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Payara Releases reports:</p>
	<blockquote cite="https://docs.payara.fish/community/docs/5.191/security/security-fix-list.html">
	  <p>The following is a list of tracked Common Vulnerabilities and Exposures that have been reported and analyzed, which can or have impacted Payara Server across releases:</p>
	  <ul>
	    <li>CVE-2018-14721 FasterXML jackson-databind 2.x before 2.9.7 might allow remote attackers to conduct server-side request forgery (SSRF) attacks</li>
	    <li>CVE-2018-14720 FasterXML jackson-databind 2.x before 2.9.7 might allow remote attackers to conduct external XML entity (XXE) attacks</li>
	    <li>CVE-2018-14719 FasterXML jackson-databind 2.x before 2.9.7 might allow remote attackers to execute arbitrary code</li>
	    <li>CVE-2018-14718 FasterXML jackson-databind 2.x before 2.9.7 might allow remote attackers to execute arbitrary code</li>
	    <li>CVE-2018-14371 Eclipse Mojarra before 2.3.7 is affected by Directory Traversal via the loc parameter</li>
	  </ul>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2018-14721</cvename>
      <cvename>CVE-2018-14720</cvename>
      <cvename>CVE-2018-14719</cvename>
      <cvename>CVE-2018-14718</cvename>
      <cvename>CVE-2018-14371</cvename>
      <url>https://docs.payara.fish/community/docs/5.191/security/security-fix-list.html</url>
    </references>
    <dates>
      <discovery>2019-02-01</discovery>
      <entry>2020-10-06</entry>
    </dates>
  </vuln>

  <vuln vid="769a4f60-9056-4c27-89a1-1758a59a21f8">
    <topic>zeek -- Vulnerability due to memory leak</topic>
    <affects>
      <package>
	<name>zeek</name>
	<range><lt>3.0.11</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Jon Siwek of Corelight reports:</p>
	<blockquote cite="https://github.com/zeek/zeek/releases/tag/v3.0.11">
	  <p>This release fixes the following security issue:</p>
	  <ul>
	  <li>A memory leak in multipart MIME code has potential
	  for remote exploitation and cause for Denial of Service
	  via resource exhaustion.</li>
	  </ul>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://github.com/zeek/zeek/releases/tag/v3.0.11</url>
    </references>
    <dates>
      <discovery>2020-09-29</discovery>
      <entry>2020-10-07</entry>
    </dates>
  </vuln>

  <vuln vid="64988354-0889-11eb-a01b-e09467587c17">
    <topic>chromium -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>chromium</name>
	<range><lt>86.0.4240.75</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Chrome releases reports:</p>
	<blockquote cite="https://chromereleases.googleblog.com/2020/10/stable-channel-update-for-desktop.html">
	  <p>This release contains 35 security fixes, including:</p>
	  <ul>
	    <li>[1127322] Critical CVE-2020-15967: Use after free in payments.
	      Reported by Man Yue Mo of GitHub Security Lab on 2020-09-11</li>
	    <li>[1126424] High CVE-2020-15968: Use after free in Blink.
	      Reported by Anonymous on 2020-09-09</li>
	    <li>[1124659] High CVE-2020-15969: Use after free in WebRTC.
	      Reported by Anonymous on 2020-09-03</li>
	    <li>[1108299] High CVE-2020-15970: Use after free in NFC. Reported
	      by Man Yue Mo of GitHub Security Lab on 2020-07-22</li>
	    <li>[1114062] High CVE-2020-15971: Use after free in printing.
	      Reported by Jun Kokatsu, Microsoft Browser Vulnerability Research on
	      2020-08-07</li>
	    <li>[1115901] High CVE-2020-15972: Use after free in audio.
	      Reported by Anonymous on 2020-08-13</li>
	    <li>[1133671] High CVE-2020-15990: Use after free in autofill.
	      Reported by Rong Jian and Guang Gong of Alpha Lab, Qihoo 360 on
	      2020-09-30</li>
	    <li>[1133688] High CVE-2020-15991: Use after free in password
	      manager. Reported by Rong Jian and Guang Gong of Alpha Lab, Qihoo
	      360 on 2020-09-30</li>
	    <li>[1106890] Medium CVE-2020-15973: Insufficient policy
	      enforcement in extensions. Reported by David Erceg on
	      2020-07-17</li>
	    <li>[1104103] Medium CVE-2020-15974: Integer overflow in Blink.
	      Reported by Juno Im (junorouse) of Theori on 2020-07-10</li>
	    <li>[1110800] Medium CVE-2020-15975: Integer overflow in
	      SwiftShader. Reported by Anonymous on 2020-07-29</li>
	    <li>[1123522] Medium CVE-2020-15976: Use after free in WebXR.
	      Reported by YoungJoo Lee (@ashuu_lee) of Raon Whitehat on
	      2020-08-31</li>
	    <li>[1083278] Medium CVE-2020-6557: Inappropriate implementation
	      in networking. Reported by Matthias Gierlings and Marcus Brinkmann
	      (NDS Ruhr-University Bochum) on 2020-05-15</li>
	    <li>[1097724] Medium CVE-2020-15977: Insufficient data validation
	      in dialogs. Reported by Narendra Bhati (@imnarendrabhati) on
	      2020-06-22</li>
	    <li>[1116280] Medium CVE-2020-15978: Insufficient data validation
	      in navigation. Reported by Luan Herrera (@lbherrera_) on
	      2020-08-14</li>
	    <li>[1127319] Medium CVE-2020-15979: Inappropriate implementation
	      in V8. Reported by Avihay Cohen (@SeraphicAlgorithms) on
	      2020-09-11</li>
	    <li>[1092453] Medium CVE-2020-15980: Insufficient policy
	      enforcement in Intents. Reported by Yongke Wang (@Rudykewang) and
	      Aryb1n (@aryb1n) of Tencent Security Xuanwu Lab on 2020-06-08</li>
	    <li>[1123023] Medium CVE-2020-15981: Out of bounds read in audio.
	      Reported by Christoph Guttandin on 2020-08-28</li>
	    <li>[1039882] Medium CVE-2020-15982: Side-channel information
	      leakage in cache. Reported by Luan Herrera (@lbherrera_) on
	      2020-01-07</li>
	    <li>[1076786] Medium CVE-2020-15983: Insufficient data validation
	      in webUI. Reported by Jun Kokatsu, Microsoft Browser Vulnerability
	      Research on 2020-04-30</li>
	    <li>[1080395] Medium CVE-2020-15984: Insufficient policy
	      enforcement in Omnibox. Reported by Rayyan Bijoora on
	      2020-05-07</li>
	    <li>[1099276] Medium CVE-2020-15985: Inappropriate implementation
	      in Blink. Reported by Abdulrahman Alqabandi, Microsoft Browser
	      Vulnerability Research on 2020-06-25</li>
	    <li>[1100247] Medium CVE-2020-15986: Integer overflow in media.
	      Reported by Mark Brand of Google Project Zero on 2020-06-29</li>
	    <li>[1127774] Medium CVE-2020-15987: Use after free in WebRTC.
	      Reported by Philipp Hancke on 2020-09-14</li>
	    <li>[1110195] Medium CVE-2020-15992: Insufficient policy
	      enforcement in networking. Reported by Alison Huffman, Microsoft
	      Browser Vulnerability Research on 2020-07-28</li>
	    <li>[1092518] Low CVE-2020-15988: Insufficient policy enforcement
	      in downloads. Reported by Samuel Attard on 2020-06-08</li>
	    <li>[1108351] Low CVE-2020-15989: Uninitialized Use in PDFium.
	      Reported by Gareth Evans (Microsoft) on 2020-07-22</li>
	  </ul>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2020-6557</cvename>
      <cvename>CVE-2020-15967</cvename>
      <cvename>CVE-2020-15968</cvename>
      <cvename>CVE-2020-15969</cvename>
      <cvename>CVE-2020-15970</cvename>
      <cvename>CVE-2020-15971</cvename>
      <cvename>CVE-2020-15972</cvename>
      <cvename>CVE-2020-15973</cvename>
      <cvename>CVE-2020-15974</cvename>
      <cvename>CVE-2020-15975</cvename>
      <cvename>CVE-2020-15976</cvename>
      <cvename>CVE-2020-15977</cvename>
      <cvename>CVE-2020-15978</cvename>
      <cvename>CVE-2020-15979</cvename>
      <cvename>CVE-2020-15980</cvename>
      <cvename>CVE-2020-15981</cvename>
      <cvename>CVE-2020-15982</cvename>
      <cvename>CVE-2020-15983</cvename>
      <cvename>CVE-2020-15984</cvename>
      <cvename>CVE-2020-15985</cvename>
      <cvename>CVE-2020-15986</cvename>
      <cvename>CVE-2020-15987</cvename>
      <cvename>CVE-2020-15988</cvename>
      <cvename>CVE-2020-15989</cvename>
      <cvename>CVE-2020-15990</cvename>
      <cvename>CVE-2020-15991</cvename>
      <cvename>CVE-2020-15992</cvename>
      <url>https://chromereleases.googleblog.com/2020/10/stable-channel-update-for-desktop.html</url>
    </references>
    <dates>
      <discovery>2020-10-06</discovery>
      <entry>2020-10-07</entry>
    </dates>
  </vuln>

  <vuln vid="cff0b2e2-0716-11eb-9e5d-08002728f74c">
    <topic>libexif -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>libexif</name>
	<range><lt>0.6.22</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Release notes:</p>
	<blockquote cite="https://github.com/libexif/libexif/blob/master/NEWS">
	  <p>Lots of fixes exposed by fuzzers like AFL, ClusterFuzz, OSSFuzz and others:</p>
	  <p>CVE-2016-6328: fixed integer overflow when parsing maker notes</p>
	  <p>CVE-2017-7544: fixed buffer overread</p>
	  <p>CVE-2018-20030: Fix for recursion DoS</p>
	  <p>CVE-2019-9278: replaced integer overflow checks the compiler could optimize away by safer constructs</p>
	  <p>CVE-2020-0093: read overflow</p>
	  <p>CVE-2020-12767: fixed division by zero </p>
	  <p>CVE-2020-13112: Various buffer overread fixes due to integer overflows in maker notes</p>
	  <p>CVE-2020-13113: Potential use of uninitialized memory </p>
	  <p>CVE-2020-13114: Time consumption DoS when parsing canon array markers</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://github.com/libexif/libexif/blob/master/NEWS</url>
      <url>CVE-2016-6328</url>
      <url>CVE-2017-7544</url>
      <url>CVE-2018-20030</url>
      <url>CVE-2019-9278</url>
      <url>CVE-2020-0093</url>
      <url>CVE-2020-12767</url>
      <url>CVE-2020-13112</url>
      <url>CVE-2020-13113</url>
      <url>CVE-2020-13114</url>
    </references>
    <dates>
      <discovery>2020-05-18</discovery>
      <entry>2020-10-05</entry>
    </dates>
  </vuln>

  <vuln vid="c71ed065-0600-11eb-8758-e0d55e2a8bf9">
    <topic>kdeconnect -- packet manipulation can be exploited in a Denial of Service attack</topic>
    <affects>
      <package>
	<name>kdeconnect-kde</name>
	<range><le>20.08.1</le></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Albert Astals Cid  reports:</p>
	<blockquote cite="https://kde.org/info/security/advisory-20201002-1.txt">
	  <h3>KDE Project Security Advisory</h3>
	  <table>
	    <tr>
	      <td>Title</td>
	      <td>KDE Connect: packet manipulation can be exploited in a Denial of Service attack</td>
	    </tr>
	    <tr>
	      <td>Risk Rating</td>
	      <td>Important</td>
	    </tr>
	    <tr>
	      <td>CVE</td>
	      <td>CVE-2020-26164</td>
	    </tr>
	    <tr>
	      <td>Versions</td>
	      <td>kdeconnect &lt;= 20.08.1</td>
	    </tr>
	    <tr>
	      <td>Author</td>
	      <td>Albert Vaca Cintora &lt;albertvaka@gmail.com&gt;</td>
	    </tr>
	    <tr>
	      <td>Date</td>
	      <td>2 October 2020</td>
	    </tr>
	  </table>
	  <h3>Overview</h3>
	    <p>
	      An attacker on your local network could send maliciously crafted
	      packets to other hosts running kdeconnect on the network, causing
	      them to use large amounts of CPU, memory or network connections,
	      which could be used in a Denial of Service attack within the
	      network.
	    </p>

	  <h3>Impact</h3>
	    <p>
	      Computers that run kdeconnect are susceptible to DoS attacks from
	      the local network.
	    </p>

	  <h3>Workaround</h3>
	    <p>
	      We advise you to stop KDE Connect when on untrusted networks like
	      those on airports or conferences.
	    </p>
	    <p>
	      Since kdeconnect is dbus activated it is relatively hard to make
	      sure it stays stopped so the brute force approach is to uninstall
	      the kdeconnect package from your system and then run
	    </p>
	  <pre>
	      kquitapp5 kdeconnectd
	  </pre>
	  <p>
	    Just install the package again once you're back in a trusted
	    network.
	  </p>
	  <h3>Solution</h3>
	  <p>
	    KDE Connect 20.08.2 patches several code paths that could result
	    in a DoS.
	  </p>
	  <p>You can apply these patches on top of 20.08.1:</p>
	  <ul>
	    <li>
	      https://invent.kde.org/network/kdeconnect-kde/-/commit/f183b5447bad47655c21af87214579f03bf3a163
	    </li>
	    <li>
	      https://invent.kde.org/network/kdeconnect-kde/-/commit/b279c52101d3f7cc30a26086d58de0b5f1c547fa
	    </li>
	    <li>
	      https://invent.kde.org/network/kdeconnect-kde/-/commit/d35b88c1b25fe13715f9170f18674d476ca9acdc
	    </li>
	    <li>
	      https://invent.kde.org/network/kdeconnect-kde/-/commit/b496e66899e5bc9547b6537a7f44ab44dd0aaf38
	    </li>
	    <li>
	      https://invent.kde.org/network/kdeconnect-kde/-/commit/5310eae85dbdf92fba30375238a2481f2e34943e
	    </li>
	    <li>
	      https://invent.kde.org/network/kdeconnect-kde/-/commit/721ba9faafb79aac73973410ee1dd3624ded97a5
	    </li>
	    <li>
	      https://invent.kde.org/network/kdeconnect-kde/-/commit/ae58b9dec49c809b85b5404cee17946116f8a706
	    </li>
	    <li>
	      https://invent.kde.org/network/kdeconnect-kde/-/commit/66c768aa9e7fba30b119c8b801efd49ed1270b0a
	    </li>
	    <li>
	      https://invent.kde.org/network/kdeconnect-kde/-/commit/85b691e40f525e22ca5cc4ebe79c361d71d7dc05
	    </li>
	    <li>
	      https://invent.kde.org/network/kdeconnect-kde/-/commit/48180b46552d40729a36b7431e97bbe2b5379306
	    </li>
	  </ul>
	  <h3>Credits</h3>
	  <p>
	    Thanks Matthias Gerstner and the openSUSE security team for
	    reporting the issue.
	  </p>
	  <p>
	    Thanks to Aleix Pol, Nicolas Fella and Albert Vaca Cintora for the
	    patches.
	  </p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://kde.org/info/security/advisory-20201002-1.txt</url>
      <cvename>CVE-2020-26164</cvename>
    </references>
    <dates>
      <discovery>2020-10-02</discovery>
      <entry>2020-10-04</entry>
    </dates>
  </vuln>

  <vuln vid="a23871f6-059b-11eb-8758-e0d55e2a8bf9">
    <topic>upnp -- denial of service (crash)</topic>
    <affects>
      <package>
	<name>upnp</name>
	<range><lt>1.12.1_1,1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>CVE mitre reports:</p>
	<blockquote cite="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-13848">
	  <p>Portable UPnP SDK (aka libupnp) 1.12.1 and earlier allows remote attackers to cause a denial of service (crash) via a crafted SSDP message due to a NULL pointer dereference in the functions FindServiceControlURLPath and FindServiceEventURLPath in genlib/service_table/service_table.c. </p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-13848</url>
      <url>https://nvd.nist.gov/vuln/detail/CVE-2020-13848</url>
      <url>https://github.com/pupnp/pupnp/issues/177</url>
      <url>https://github.com/pupnp/pupnp/commit/c805c1de1141cb22f74c0d94dd5664bda37398e0</url>
      <cvename>CVE-2020-13848</cvename>
    </references>
    <dates>
      <discovery>2020-06-04</discovery>
      <entry>2020-10-03</entry>
    </dates>
  </vuln>

  <vuln vid="a3495e61-047f-11eb-86ea-001b217b3468">
    <topic>Gitlab -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>gitlab-ce</name>
	<range><ge>13.4.0</ge><lt>13.4.2</lt></range>
	<range><ge>13.3.0</ge><lt>13.3.7</lt></range>
	<range><ge>7.12</ge><lt>13.2.10</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Gitlab reports:</p>
	<blockquote cite="https://about.gitlab.com/releases/2020/10/01/security-release-13-4-2-release/">
	  <p>Potential Denial Of Service Via Update Release Links API</p>
	  <p>Insecure Storage of Session Key In Redis</p>
	  <p>Improper Access Expiration Date Validation</p>
	  <p>Cross-Site Scripting in Multiple Pages</p>
	  <p>Unauthorized Users Can View Custom Project Template</p>
	  <p>Cross-Site Scripting in SVG Image Preview</p>
	  <p>Incomplete Handling in Account Deletion</p>
	  <p>Insufficient Rate Limiting at Re-Sending Confirmation Email</p>
	  <p>Improper Type Check in GraphQL</p>
	  <p>To-dos Are Not Redacted When Membership Changes</p>
	  <p>Guest users can modify confidentiality attribute</p>
	  <p>Command injection on runner host</p>
	  <p>Insecure Runner Configuration in Kubernetes Environments</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://about.gitlab.com/releases/2020/10/01/security-release-13-4-2-release/</url>
      <cvename>CVE-2020-13333</cvename>
      <cvename>CVE-2020-13332</cvename>
      <cvename>CVE-2020-13335</cvename>
      <cvename>CVE-2020-13334</cvename>
      <cvename>CVE-2020-13327</cvename>
    </references>
    <dates>
      <discovery>2020-10-01</discovery>
      <entry>2020-10-02</entry>
    </dates>
  </vuln>

  <vuln vid="2eec1e85-faf3-11ea-8ac0-4437e6ad11c4">
    <topic>tt-rss -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>tt-rss</name>
	<range><lt>g20200919</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>tt-rss project reports:</p>
	<blockquote cite="https://community.tt-rss.org/t/heads-up-several-vulnerabilities-fixed/3799">
	  <p>The cached_url feature mishandles JavaScript inside an SVG document.</p>
	  <p>imgproxy in plugins/af_proxy_http/init.php mishandles $_REQUEST["url"] in an error message.</p>
	  <p>It does not validate all URLs before requesting them.</p>
	</blockquote>
	<blockquote cite="https://community.tt-rss.org/t/replace-php-gettext/2889">
	  <p>Allows remote attackers to execute arbitrary PHP code via a crafted plural forms header.</p>
	</blockquote>
      </body>
    </description>
    <references>
	<url>https://community.tt-rss.org/t/heads-up-several-vulnerabilities-fixed/3799</url>
	<url>https://community.tt-rss.org/t/replace-php-gettext/2889</url>
	<cvename>CVE-2020-25789</cvename>
	<cvename>CVE-2020-25788</cvename>
	<cvename>CVE-2020-25787</cvename>
	<cvename>CVE-2016-6175</cvename>
    </references>
    <dates>
      <discovery>2020-09-15</discovery>
      <entry>2020-09-20</entry>
    </dates>
  </vuln>

  <vuln vid="6d5f1b0b-b865-48d5-935b-3fb6ebb425fc">
    <topic>Apache Ant leaks sensitive information via the java.io.tmpdir</topic>
    <affects>
      <package>
	<name>apache-ant</name>
	<range><ge>1.1</ge><lt>1.10.8</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Apache reports:</p>
	<blockquote cite="https://issues.apache.org/jira/browse/RAT-269?page=com.atlassian.jira.plugin.system.issuetabpanels%3Aall-tabpanel">
	  <p>Apache Ant 1.1 to 1.9.14 and 1.10.0 to 1.10.7 uses the
	     default temporary directory identified by the Java
	     system property java.io.tmpdir for several tasks and
	     may thus leak sensitive information. The fixcrlf and
	     replaceregexp tasks also copy files from the temporary
	     directory back into the build tree allowing an attacker
	     to inject modified source files into the build
	     process.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://issues.apache.org/jira/browse/RAT-269?page=com.atlassian.jira.plugin.system.issuetabpanels%3Aall-tabpanel</url>
      <cvename>CVE-2020-1945</cvename>
    </references>
    <dates>
      <discovery>2020-05-14</discovery>
      <entry>2020-09-28</entry>
    </dates>
  </vuln>

  <vuln vid="b371db92-fe34-11ea-b90e-6805ca2fa271">
    <topic>powerdns -- Leaking uninitialised memory through crafted zone records</topic>
    <affects>
      <package>
	<name>powerdns</name>
	<range><ge>4.3.0</ge><lt>4.3.1</lt></range>
	<range><ge>4.2.0</ge><lt>4.2.3</lt></range>
	<range><ge>4.1.0</ge><lt>4.1.14</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>PowerDNS Team reports</p>
	<blockquote cite="https://doc.powerdns.com/authoritative/changelog/4.3.html#change-4.3.1">
	  <p>CVE-2020-17482: An issue has been found in PowerDNS Authoritative
	     Server before 4.3.1 where an authorized user with the
	     ability to insert crafted records into a zone might
	     be able to leak the content of uninitialized memory.
	     Such a user could be a customer inserting data via a
	     control panel, or somebody with access to the REST
	     API. Crafted records cannot be inserted via AXFR.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://doc.powerdns.com/authoritative/security-advisories/powerdns-advisory-2020-05.html</url>
      <cvename>CVE-2020-17482</cvename>
    </references>
    <dates>
      <discovery>2020-09-22</discovery>
      <entry>2020-09-24</entry>
    </dates>
  </vuln>

  <vuln vid="e68d3db1-fd04-11ea-a67f-e09467587c17">
    <topic>chromium -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>chromium</name>
	<range><lt>85.0.4183.121</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Chrome Releases reports:</p>
	<blockquote cite="https://chromereleases.googleblog.com/2020/09/stable-channel-update-for-desktop_21.html">
	  <p>This release fixes 10 security issues, including:</p>
	  <ul>
	    <li>[1100136] High CVE-2020-15960: Out of bounds read in storage.
	      Reported by Anonymous on 2020-06-28</li>

	    <li>[1114636] High CVE-2020-15961: Insufficient policy
	      enforcement in extensions. Reported by David Erceg on
	      2020-08-10</li>

	    <li>[1121836] High CVE-2020-15962: Insufficient policy
	      enforcement in serial. Reported by Leecraso and Guang Gong of 360
	      Alpha Lab working with 360 BugCloud on 2020-08-26</li>

	    <li>[1113558] High CVE-2020-15963: Insufficient policy
	      enforcement in extensions. Reported by David Erceg on
	      2020-08-06</li>

	    <li>[1126249] High CVE-2020-15965: Out of bounds write in V8.
	      Reported by Lucas Pinheiro, Microsoft Browser Vulnerability
	      Research on 2020-09-08</li>

	    <li>[1113565] Medium CVE-2020-15966: Insufficient policy
	      enforcement in extensions. Reported by David Erceg on
	      2020-08-06</li>

	    <li>[1121414] Low CVE-2020-15964: Insufficient data validation in
	      media. Reported by Woojin Oh(@pwn_expoit) of STEALIEN on
	      2020-08-25</li>
	  </ul>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2020-15960</cvename>
      <cvename>CVE-2020-15961</cvename>
      <cvename>CVE-2020-15962</cvename>
      <cvename>CVE-2020-15963</cvename>
      <cvename>CVE-2020-15964</cvename>
      <cvename>CVE-2020-15965</cvename>
      <cvename>CVE-2020-15966</cvename>
      <url>https://chromereleases.googleblog.com/2020/09/stable-channel-update-for-desktop_21.html</url>
    </references>
    <dates>
      <discovery>2020-09-21</discovery>
      <entry>2020-09-22</entry>
    </dates>
  </vuln>

  <vuln vid="f5abafc0-fcf6-11ea-8758-e0d55e2a8bf9">
    <topic>libxml -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>libxml2</name>
	<range><lt>2.9.10_1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>CVE mitre reports:</p>
	<blockquote cite="https://nvd.nist.gov/vuln/detail/CVE-2019-20388">
	    <h3>CVE-2019-20388</h3>
	    <p>
	      xmlSchemaPreRun in xmlschemas.c in libxml2 2.9.10 allows an xmlSchemaValidateStream memory leak.
	    </p>
	    <h3>CVE-2020-7595</h3>
	    <p>
	      xmlStringLenDecodeEntities in parser.c in libxml2 2.9.10 has an infinite loop in a certain end-of-file situation.
	    </p>
	  <h3>CVE-2020-24977</h3>
	  <p>
	    GNOME project libxml2 v2.9.10 and earlier have a global buffer over-read vulnerability in xmlEncodeEntitiesInternal
	  </p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://nvd.nist.gov/vuln/detail/CVE-2019-20388</url>
      <url>https://nvd.nist.gov/vuln/detail/CVE-2020-7595</url>
      <url>https://nvd.nist.gov/vuln/detail/CVE-2020-24977</url>
    </references>
    <dates>
      <discovery>2020-01-21</discovery>
      <entry>2020-09-22</entry>
    </dates>
  </vuln>

  <vuln vid="2327234d-fc4b-11ea-adef-641c67a117d8">
    <topic>py-matrix-synapse -- malformed events may prevent users from joining federated rooms</topic>
    <affects>
      <package>
	<name>py36-matrix-synapse</name>
	<name>py37-matrix-synapse</name>
	<name>py38-matrix-synapse</name>
	<range><lt>1.19.2</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
    <h1>Problem Description:</h1>
      <p>Affected Synapse versions assume that all events have an "origin" field set. If an event
      without the "origin" field is sent into a federated room, servers not already joined to
      the room will be unable to do so due to failing to fetch the malformed event.</p>
    <h1>Impact:</h1>
      <p>An attacker could cause a denial of service by deliberately sending a malformed event
      into a room, thus preventing new servers (and thus their users) from joining the
      room.</p>
      </body>
    </description>
    <references>
      <url>https://github.com/matrix-org/synapse/issues/8319</url>
      <url>https://github.com/matrix-org/synapse/pull/8324</url>
      <url>https://github.com/matrix-org/synapse/blob/v1.19.3/CHANGES.md</url>
    </references>
    <dates>
      <discovery>2020-09-16</discovery>
      <entry>2020-09-21</entry>
    </dates>
  </vuln>

  <vuln vid="2cb21232-fb32-11ea-a929-a4bf014bf5f7">
    <topic>Python -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>python35</name>
	<range><lt>3.5.10</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Python reports:</p>
	<blockquote cite="https://docs.python.org/3.5/whatsnew/changelog.html#python-3-5-10">
	  <p>bpo-39603: Prevent http header injection by rejecting control characters in http.client.putrequest(…).</p>
	  <p>bpo-29778: Ensure python3.dll is loaded from correct locations when Python is embedded (CVE-2020-15523).</p>
	  <p>bpo-41004: CVE-2020-14422: The __hash__() methods of ipaddress.IPv4Interface and ipaddress.IPv6Interface incorrectly generated constant hash values of 32 and 128 respectively. This resulted in always causing hash collisions. The fix uses hash() to generate hash values for the tuple of (address, mask length, network address).</p>
	  <p>bpo-39073: Disallow CR or LF in email.headerregistry.Address arguments to guard against header injection attacks.</p>
	  <p>bpo-38576: Disallow control characters in hostnames in http.client, addressing CVE-2019-18348. Such potentially malicious header injection URLs now cause a InvalidURL to be raised.</p>
	  <p>bpo-39503: CVE-2020-8492: The AbstractBasicAuthHandler class of the urllib.request module uses an inefficient regular expression which can be exploited by an attacker to cause a denial of service. Fix the regex to prevent the catastrophic backtracking. Vulnerability reported by Ben Caller and Matt Schwager.</p>
	  <p>bpo-38945: Newline characters have been escaped when performing uu encoding to prevent them from overflowing into to content section of the encoded file. This prevents malicious or accidental modification of data during the decoding process.</p>
	  <p>bpo-38804: Fixes a ReDoS vulnerability in http.cookiejar. Patch by Ben Caller.</p>
	  <p>bpo-39017: Avoid infinite loop when reading specially crafted TAR files using the tarfile module (CVE-2019-20907).</p>
	  <p>bpo-41183: Use 3072 RSA keys and SHA-256 signature for test certs and keys.</p>
	  <p>bpo-39503: AbstractBasicAuthHandler of urllib.request now parses all WWW-Authenticate HTTP headers and accepts multiple challenges per header: use the realm of the first Basic challenge.</p>
	</blockquote>
      </body>
    </description>
    <references>
       <cvename>CVE-2020-15523</cvename>
       <cvename>CVE-2020-14422</cvename>
       <cvename>CVE-2019-18348</cvename>
       <cvename>CVE-2020-8492</cvename>
       <cvename>CVE-2019-20907</cvename>
    </references>
    <dates>
      <discovery>2020-08-19</discovery>
      <entry>2020-09-20</entry>
    </dates>
  </vuln>

  <vuln vid="24ace516-fad7-11ea-8d8c-005056a311d1">
    <topic>samba -- Unauthenticated domain takeover via netlogon</topic>
    <affects>
      <package>
	<name>samba410</name>
	<range><lt>4.10.18</lt></range>
      </package>
      <package>
	<name>samba411</name>
	<range><lt>4.11.13</lt></range>
      </package>
      <package>
	<name>samba412</name>
	<range><lt>4.12.7</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The Samba Team reports:</p>
	<blockquote cite="https://www.samba.org/samba/security/CVE-2020-1472.html">
	  <p>An unauthenticated attacker on the network can gain
	  administrator access by exploiting a netlogon protocol flaw.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://www.samba.org/samba/security/CVE-2020-1472.html</url>
      <cvename>CVE-2020-1472</cvename>
    </references>
    <dates>
      <discovery>2020-01-01</discovery>
      <entry>2020-09-20</entry>
    </dates>
  </vuln>

  <vuln vid="eeec4e6f-fa71-11ea-9bb7-d4c9ef517024">
    <topic>Nextcloud -- Password share by mail not hashed</topic>
    <affects>
      <package>
	<name>nextcloud</name>
	<range><lt>19.0.1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The Nextcloud project reports:</p>
	<blockquote cite="https://nextcloud.com/security/advisory/?id=NC-SA-2020-026">
	  <p>NC-SA-2020-026 (low): Password of share by mail is not hashed when
	    given on the create share call<br/>
	    A logic error in Nextcloud Server 19.0.0 caused a plaintext storage
	    of the share password when it was given on the initial create API
	    call.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://nextcloud.com/security/advisory/?id=NC-SA-2020-026</url>
      <cvename>CVE-2020-8183</cvename>
    </references>
    <dates>
      <discovery>2020-06-04</discovery>
      <entry>2020-09-19</entry>
    </dates>
  </vuln>

  <vuln vid="efd03116-c2a9-11ea-82bc-b42e99a1b9c3">
    <topic>webkit2-gtk3 -- multible vulnerabilities</topic>
    <affects>
      <package>
	<name>webkit2-gtk3</name>
	<range><lt>2.28.3</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The WebKitGTK project reports vulnerabilities:</p>
	<blockquote cite="https://webkitgtk.org/security/WSA-2020-0006.html">
	  <ul>
      <li>CVE-2020-9802: Processing maliciously crafted web content may lead to arbitrary code execution.</li>
      <li>CVE-2020-9803: Processing maliciously crafted web content may lead to arbitrary code execution.</li>
      <li>CVE-2020-9805: Processing maliciously crafted web content may lead to universal cross site scripting.</li>
      <li>CVE-2020-9806: Processing maliciously crafted web content may lead to arbitrary code execution.</li>
      <li>CVE-2020-9807: Processing maliciously crafted web content may lead to arbitrary code execution.</li>
      <li>CVE-2020-9843: Processing maliciously crafted web content may lead to a cross site scripting attack.</li>
      <li>CVE-2020-9850: A remote attacker may be able to cause arbitrary code execution.</li>
      <li>CVE-2020-13753: CLONE_NEWUSER could potentially be used to confuse xdg- desktop-portal, which allows access outside the sandbox. TIOCSTI can be used to directly execute commands outside the sandbox by writing to the controlling terminal’s input buffer.</li>
      </ul>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://webkitgtk.org/security/WSA-2020-0006.html</url>
      <cvename>CVE-2020-9802</cvename>
      <cvename>CVE-2020-9803</cvename>
      <cvename>CVE-2020-9805</cvename>
      <cvename>CVE-2020-9806</cvename>
      <cvename>CVE-2020-9807</cvename>
      <cvename>CVE-2020-9843</cvename>
      <cvename>CVE-2020-9850</cvename>
      <cvename>CVE-2020-13753</cvename>
    </references>
    <dates>
      <discovery>2020-07-10</discovery>
      <entry>2020-07-10</entry>
    </dates>
  </vuln>

  <vuln vid="4ca5894c-f7f1-11ea-8ff8-0022489ad614">
    <topic>Node.js -- September 2020 Security Releases</topic>
    <affects>
      <package>
	<name>node</name>
	<range><lt>14.11.0</lt></range>
      </package>
      <package>
	<name>node12</name>
	<range><lt>12.18.4</lt></range>
      </package>
      <package>
	<name>node10</name>
	<range><lt>10.22.1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Node.js reports:</p>
	<blockquote cite="https://nodejs.org/en/blog/vulnerability/september-2020-security-releases/">
	  <p>Updates are now available for v10,x, v12.x and v14.x Node.js release lines for the following issues.</p>
	  <h1>HTTP Request Smuggling due to CR-to-Hyphen conversion (High) (CVE-2020-8201)</h1>
	  <p>Affected Node.js versions converted carriage returns in HTTP request headers to a hyphen before parsing. This can lead to HTTP Request Smuggling as it is a non-standard interpretation of the header.</p>
	  <p>Impacts:</p>
	  <ul>
	    <li>All versions of the 14.x and 12.x releases line</li>
	  </ul>
	  <h1>Denial of Service by resource exhaustion CWE-400 due to unfinished HTTP/1.1 requests (Critical) (CVE-2020-8251)</h1>
	  <p>Node.js is vulnerable to HTTP denial of service (DOS) attacks based on delayed requests submission which can make the server unable to accept new connections. The fix a new http.Server option called requestTimeout with a default value of 0 which means it is disabled by default. This should be set when Node.js is used as an edge server, for more details refer to the documentation.</p>
	  <p>Impacts:</p>
	  <ul>
	    <li>All versions of the 14.x release line</li>
	  </ul>
	  <h1>fs.realpath.native on may cause buffer overflow (Medium) (CVE-2020-8252)</h1>
	  <p>libuv's realpath implementation incorrectly determined the buffer size which can result in a buffer overflow if the resolved path is longer than 256 bytes.</p>
	  <p>Impacts:</p>
	  <ul>
	    <li>All versions of the 10.x release line</li>
	    <li>All versions of the 12.x release line</li>
	    <li>All versions of the 14.x release line before 14.9.0</li>
	  </ul>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://nodejs.org/en/blog/vulnerability/september-2020-security-releases/</url>
      <cvename>CVE-2020-8201</cvename>
      <cvename>CVE-2020-8251</cvename>
      <cvename>CVE-2020-8252</cvename>
    </references>
    <dates>
      <discovery>2020-09-08</discovery>
      <entry>2020-09-16</entry>
    </dates>
  </vuln>

  <vuln vid="6d334fdb-f7e7-11ea-88f8-901b0ef719ab">
    <topic>FreeBSD -- ftpd privilege escalation via ftpchroot feature</topic>
    <affects>
      <package>
	<name>FreeBSD</name>
	<range><ge>12.1</ge><lt>12.1_10</lt></range>
	<range><ge>11.4</ge><lt>11.4_4</lt></range>
	<range><ge>11.3</ge><lt>11.3_14</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<h1>Problem Description:</h1>
	<p>A ftpd(8) bug in the implementation of the file system sandbox, combined
	with capabilities available to an authenticated FTP user, can be used to
	escape the file system restriction configured in ftpchroot(5).
	Moreover, the bug allows a malicious client to gain root privileges.</p>
	<h1>Impact:</h1>
	<p>A malicious FTP user can gain privileged access to an affected system.</p>
      </body>
    </description>
    <references>
      <cvename>CVE-2020-7468</cvename>
      <freebsdsa>SA-20:30.ftpd</freebsdsa>
    </references>
    <dates>
      <discovery>2020-09-15</discovery>
      <entry>2020-09-16</entry>
    </dates>
  </vuln>

  <vuln vid="e73c688b-f7e6-11ea-88f8-901b0ef719ab">
    <topic>FreeBSD -- bhyve SVM guest escape</topic>
    <affects>
      <package>
	<name>FreeBSD-kernel</name>
	<range><ge>12.1</ge><lt>12.1_10</lt></range>
	<range><ge>11.4</ge><lt>11.4_4</lt></range>
	<range><ge>11.3</ge><lt>11.3_14</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<h1>Problem Description:</h1>
	<p>A number of AMD virtualization instructions operate on host physical
	addresses, are not subject to nested page table translation, and guest use of
	these instructions was not trapped.</p>
	<h1>Impact:</h1>
	<p>From kernel mode a malicious guest can write to arbitrary host memory (with
	some constraints), affording the guest full control of the host.</p>
      </body>
    </description>
    <references>
      <cvename>CVE-2020-7467</cvename>
      <freebsdsa>SA-20:29.bhyve_svm</freebsdsa>
    </references>
    <dates>
      <discovery>2020-09-15</discovery>
      <entry>2020-09-16</entry>
    </dates>
  </vuln>

  <vuln vid="2c5b9cd7-f7e6-11ea-88f8-901b0ef719ab">
    <topic>FreeBSD -- bhyve privilege escalation via VMCS access</topic>
    <affects>
      <package>
	<name>FreeBSD-kernel</name>
	<range><ge>12.1</ge><lt>12.1_10</lt></range>
	<range><ge>11.4</ge><lt>11.4_4</lt></range>
	<range><ge>11.3</ge><lt>11.3_14</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<h1>Problem Description:</h1>
	<p>AMD and Intel CPUs support hardware virtualization using specialized data
	structures that control various aspects of guest operation.  These are the
	Virtual Machine Control Structure (VMCS) on Intel CPUs, and the Virtual
	Machine Control Block (VMCB) on AMD CPUs.  Insufficient access controls allow
	root users, including those running in a jail, to change these data
	structures.</p>
	<h1>Impact:</h1>
	<p>An attacker with host root access (including to a jailed bhyve instance) can
	use this vulnerability to achieve kernel code execution.</p>
      </body>
    </description>
    <references>
      <cvename>CVE-2020-24718</cvename>
      <freebsdsa>SA-20:28.bhyve_vmcs</freebsdsa>
    </references>
    <dates>
      <discovery>2020-09-15</discovery>
      <entry>2020-09-16</entry>
    </dates>
  </vuln>

  <vuln vid="bb53af7b-f7e4-11ea-88f8-901b0ef719ab">
    <topic>FreeBSD -- ure device driver susceptible to packet-in-packet attack</topic>
    <affects>
      <package>
	<name>FreeBSD-kernel</name>
	<range><ge>12.1</ge><lt>12.1_10</lt></range>
	<range><ge>11.4</ge><lt>11.4_4</lt></range>
	<range><ge>11.3</ge><lt>11.3_14</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<h1>Problem Description:</h1>
	<p>A programming error in the ure(4) device driver caused some Realtek USB
	Ethernet interfaces to incorrectly report packets with more than 2048 bytes
	in a single USB transfer as having a length of only 2048 bytes.</p>
	<p>An adversary can exploit this to cause the driver to misinterpret part of the
	payload of a large packet as a separate packet, and thereby inject packets
	across security boundaries such as VLANs.</p>
	<h1>Impact:</h1>
	<p>An attacker that can send large frames (larger than 2048 bytes in size) to be
	received by the host (be it VLAN, or non-VLAN tagged packet), can inject
	arbitrary packets to be received and processed by the host.  This includes
	spoofing packets from other hosts, or injecting packets to other VLANs than
	the host is on.</p>
      </body>
    </description>
    <references>
      <cvename>CVE-2020-7464</cvename>
      <freebsdsa>SA-20:27.ure</freebsdsa>
    </references>
    <dates>
      <discovery>2020-09-15</discovery>
      <entry>2020-09-16</entry>
    </dates>
  </vuln>

  <vuln vid="7b630362-f468-11ea-a96c-08002728f74c">
    <topic>Rails -- Potential XSS vulnerability</topic>
    <affects>
      <package>
	<name>rubygem-actionview52</name>
	<range><lt>5.2.4.4</lt></range>
      </package>
      <package>
	<name>rubygem-actionview60</name>
	<range><lt>6.0.3.3</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Ruby on Rails blog:</p>
	<blockquote cite="https://weblog.rubyonrails.org/2020/9/10/Rails-5-2-4-4-and-6-0-3-3-have-been-released/">
	  <p>Rails 5.2.4.4 and 6.0.3.3 have been released! These releases contain an
	    important security fix, so please upgrade when you can.</p>
	  <p>Both releases contain the following fix: [CVE-2020-15169] Potential XSS
	    vulnerability in Action View</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://weblog.rubyonrails.org/2020/9/10/Rails-5-2-4-4-and-6-0-3-3-have-been-released/</url>
      <url>https://groups.google.com/forum/#!topic/rubyonrails-security/b-C9kSGXYrc</url>
      <url>https://github.com/rails/rails/blob/5-2-stable/actionview/CHANGELOG.md</url>
      <url>https://github.com/rails/rails/blob/6-0-stable/actionview/CHANGELOG.md</url>
      <cvename>CVE-2020-15169</cvename>
    </references>
    <dates>
      <discovery>2020-09-09</discovery>
      <entry>2020-09-12</entry>
    </dates>
  </vuln>

  <vuln vid="2c92fdd3-896c-4a5a-a0d8-52acee69182d">
    <topic>zeek -- Various vulnerabilities</topic>
    <affects>
      <package>
	<name>zeek</name>
	<range><lt>3.0.10</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Jon Siwek of Corelight reports:</p>
	<blockquote cite="https://github.com/zeek/zeek/releases/tag/v3.0.10">
	  <p>This release fixes the following security issue:</p>
	  <ul>
	  <li>The AYIYA and GTPv1 parsing/decapsulation logic may
	  leak memory -- These leaks have potential for remote
	  exploitation to cause Denial of Service via resource
	  exhaustion.</li>
	  </ul>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://github.com/zeek/zeek/releases/tag/v3.0.10</url>
    </references>
    <dates>
      <discovery>2020-08-28</discovery>
      <entry>2020-09-09</entry>
    </dates>
  </vuln>

  <vuln vid="bed5d41a-f2b4-11ea-a878-e09467587c17">
    <topic>chromium -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>chromium</name>
	<range><lt>85.0.4183.102</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Chrome Releases reports:</p>
	<blockquote cite="https://chromereleases.googleblog.com/2020/09/stable-channel-update-for-desktop.html">
	  <p>This release contains 5 security fixes:</p>
	  <ul>
	    <li>[1116304] High CVE-2020-6573: Use after free in video. Reported
	      by Leecraso and Guang Gong of 360 Alpha Lab working with 360
	      BugCloud on 2020-08-14</li>
	    <li>[1102196] High CVE-2020-6574: Insufficient policy
	      enforcement in installer. Reported by CodeColorist of
	      Ant-Financial LightYear Labs on 2020-07-05</li>
	    <li>[1081874] High CVE-2020-6575: Race in Mojo. Reported by
	      Microsoft on 2020-05-12</li>
	    <li>[1111737] High CVE-2020-6576: Use after free in offscreen
	      canvas. Reported by Looben Yang on 2020-07-31</li>
	    <li>[1122684] High CVE-2020-15959: Insufficient policy enforcement
	      in networking. Reported by Eric Lawrence of Microsoft on
	      2020-08-27</li>
	  </ul>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2020-6573</cvename>
      <cvename>CVE-2020-6574</cvename>
      <cvename>CVE-2020-6575</cvename>
      <cvename>CVE-2020-6576</cvename>
      <cvename>CVE-2020-15969</cvename>
      <url>https://chromereleases.googleblog.com/2020/09/stable-channel-update-for-desktop.html</url>
    </references>
    <dates>
      <discovery>2020-09-08</discovery>
      <entry>2020-09-09</entry>
    </dates>
  </vuln>

  <vuln vid="cd97c7ca-f079-11ea-9c31-001b216d295b">
    <topic>Multi-link PPP protocol daemon MPD5 remotely exploitable crash</topic>
    <affects>
      <package>
	<name>mpd5</name>
	<range><lt>5.9</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Version 5.9 contains security fix for L2TP clients and servers.
	Insufficient validation of incoming L2TP control packet
	specially crafted by unauthenticated user might lead to unexpected
	termination of the process. The problem affects mpd versions
	since 4.0 that brought in initial support for L2TP.
	Installations not using L2TP clients nor L2TP server configuration were not affected.</p>
      </body>
    </description>
    <references>
      <cvename>CVE-2020-7465</cvename>
      <cvename>CVE-2020-7466</cvename>
      <url>http://mpd.sourceforge.net/doc5/mpd4.html#4</url>
    </references>
    <dates>
      <discovery>2020-09-04</discovery>
      <entry>2020-09-06</entry>
      <modified>2020-09-07</modified>
    </dates>
  </vuln>

  <vuln vid="bcdeb6d2-f02d-11ea-838a-0011d823eebd">
    <topic>Mbed TLS -- Local side channel attack on RSA and static Diffie-Hellman</topic>
    <affects>
      <package>
	<name>mbedtls</name>
	<range><lt>2.16.8</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Manuel Pégourié-Gonnard reports:</p>
	<blockquote cite="https://tls.mbed.org/tech-updates/security-advisories/mbedtls-security-advisory-2020-09-2">
	  <p>An attacker with access to precise enough timing and memory access
	    information (typically an untrusted operating system attacking a
	    secure enclave such as SGX or the TrustZone secure world) can
	    recover the private keys used in RSA or static (finite-field)
	    Diffie-Hellman operations.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://tls.mbed.org/tech-updates/security-advisories/mbedtls-security-advisory-2020-09-2</url>
    </references>
    <dates>
      <discovery>2020-09-01</discovery>
      <entry>2020-09-06</entry>
    </dates>
  </vuln>

  <vuln vid="4c69240f-f02c-11ea-838a-0011d823eebd">
    <topic>Mbed TLS -- Local side channel attack on classical CBC decryption in (D)TLS</topic>
    <affects>
      <package>
	<name>mbedtls</name>
	<range><lt>2.16.8</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Manuel Pégourié-Gonnard reports:</p>
	<blockquote cite="https://tls.mbed.org/tech-updates/security-advisories/mbedtls-security-advisory-2020-09-1">
	  <p>When decrypting/authenticating (D)TLS record in a connection using
	    a CBC ciphersuite without the Encrypt-then-Mac extension RFC 7366,
	    Mbed TLS used dummy rounds of the compression function associated
	    with the hash used for HMAC in order to hide the length of the
	    padding to remote attackers, as recommended in the original Lucky
	    Thirteen paper.</p>
	  <p>A local attacker who is able to observe the state of the cache
	    could monitor the presence of mbedtls_md_process() in the cache in
	    order to determine when the actual computation ends and when the
	    dummy rounds start. This is a reliable target as it's always called
	    at least once, in response to a previous attack. The attacker can
	    then continue with one of many well-documented Lucky 13
	    variants.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://tls.mbed.org/tech-updates/security-advisories/mbedtls-security-advisory-2020-09-1</url>
      <cvename>CVE-2020-16150</cvename>
    </references>
    <dates>
      <discovery>2020-09-01</discovery>
      <entry>2020-09-06</entry>
    </dates>
  </vuln>

  <vuln vid="2272e6f1-f029-11ea-838a-0011d823eebd">
    <topic>GnuTLS -- null pointer dereference</topic>
    <affects>
      <package>
	<name>gnutls</name>
	<range><lt>3.6.15</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The GnuTLS project reports:</p>
	<blockquote cite="https://gnutls.org/security-new.html#GNUTLS-SA-2020-09-04">
	  <p>It was found by oss-fuzz that the server sending a
	    "no_renegotiation" alert in an unexpected timing, followed by an
	    invalid second handshake can cause a TLS 1.3 client to crash via a
	    null-pointer dereference. The crash happens in the application's
	    error handling path, where the gnutls_deinit function is called
	    after detecting a handshake failure.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://gnutls.org/security-new.html#GNUTLS-SA-2020-09-04</url>
      <cvename>CVE-2020-24659</cvename>
    </references>
    <dates>
      <discovery>2020-09-04</discovery>
      <entry>2020-09-06</entry>
    </dates>
  </vuln>

  <vuln vid="002432c8-ef6a-11ea-ba8f-08002728f74c">
    <topic>Django -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>py35-django22</name>
	<name>py36-django22</name>
	<name>py37-django22</name>
	<name>py38-django22</name>
	<range><lt>2.2.16</lt></range>
      </package>
      <package>
	<name>py36-django30</name>
	<name>py37-django30</name>
	<name>py38-django30</name>
	<range><lt>3.0.10</lt></range>
      </package>
      <package>
	<name>py36-django31</name>
	<name>py37-django31</name>
	<name>py38-django31</name>
	<range><lt>3.1.1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Django Release notes:</p>
	<blockquote cite="https://docs.djangoproject.com/en/3.1/releases/3.1.1/">
	  <p>CVE-2020-24583: Incorrect permissions on intermediate-level directories
	    on Python 3.7+</p>
	  <p>On Python 3.7+, FILE_UPLOAD_DIRECTORY_PERMISSIONS mode was not applied
	    to intermediate-level directories created in the process of uploading
	    files and to intermediate-level collected static directories when using
	    the collectstatic management command.</p>
	  <p>CVE-2020-24584: Permission escalation in intermediate-level directories
	    of the file system cache on Python 3.7+</p>
	  <p>On Python 3.7+, the intermediate-level directories of the file system
	    cache had the system's standard umask rather than 0o077 (no group or
	    others permissions).</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://docs.djangoproject.com/en/2.2/releases/2.2.16/</url>
      <url>https://docs.djangoproject.com/en/3.0/releases/3.0.10/</url>
      <url>https://docs.djangoproject.com/en/3.1/releases/3.1.1/</url>
      <cvename>CVE-2020-24583</cvename>
      <cvename>CVE-2020-24584</cvename>
    </references>
    <dates>
      <discovery>2020-09-01</discovery>
      <entry>2020-09-05</entry>
    </dates>
  </vuln>

  <vuln vid="f9fa7adc-ee51-11ea-a240-002590acae31">
    <topic>gnupg -- AEAD key import overflow</topic>
    <affects>
      <package>
	<name>gnupg</name>
	<range><ge>2.2.21</ge><lt>2.2.23</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Importing an OpenPGP key having a preference list for AEAD algorithms
	will lead to an array overflow and thus often to a crash or other
	undefined behaviour.</p>

	<p>Importing an arbitrary key can often easily be triggered by an attacker
	and thus triggering this bug.  Exploiting the bug aside from crashes is
	not trivial but likely possible for a dedicated attacker.  The major
	hurdle for an attacker is that only every second byte is under their
	control with every first byte having a fixed value of 0x04.</p>
      </body>
    </description>
    <references>
      <cvename>CVE-2020-25125</cvename>
      <url>https://dev.gnupg.org/T5050</url>
    </references>
    <dates>
      <discovery>2020-09-03</discovery>
      <entry>2020-09-03</entry>
    </dates>
  </vuln>

  <vuln vid="762b7d4a-ec19-11ea-88f8-901b0ef719ab">
    <topic>FreeBSD -- dhclient heap overflow</topic>
    <affects>
      <package>
	<name>FreeBSD</name>
	<range><ge>12.1</ge><lt>12.1_9</lt></range>
	<range><ge>11.4</ge><lt>11.4_3</lt></range>
	<range><ge>11.3</ge><lt>11.3_13</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<h1>Problem Description:</h1>
	<p>When parsing option 119 data, dhclient(8) computes the uncompressed domain
	list length so that it can allocate an appropriately sized buffer to store
	the uncompressed list.  The code to compute the length failed to handle
	certain malformed input, resulting in a heap overflow when the uncompressed
	list is copied into in inadequately sized buffer.</p>
	<h1>Impact:</h1>
	<p>The heap overflow could in principle be exploited to achieve remote code
	execution.  The affected process runs with reduced privileges in a Capsicum
	sandbox, limiting the immediate impact of an exploit.  However, it is
	possible the bug could be combined with other vulnerabilities to escape the
	sandbox.</p>
      </body>
    </description>
    <references>
      <cvename>CVE-2020-7461</cvename>
      <freebsdsa>SA-20:26.dhclient</freebsdsa>
    </references>
    <dates>
      <discovery>2020-09-02</discovery>
      <entry>2020-09-02</entry>
    </dates>
  </vuln>

  <vuln vid="77b877aa-ec18-11ea-88f8-901b0ef719ab">
    <topic>FreeBSD -- SCTP socket use-after-free bug</topic>
    <affects>
      <package>
	<name>FreeBSD-kernel</name>
	<range><ge>12.1</ge><lt>12.1_9</lt></range>
	<range><ge>11.4</ge><lt>11.4_3</lt></range>
	<range><ge>11.3</ge><lt>11.3_13</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<h1>Problem Description:</h1>
	<p>Due to improper handling in the kernel, a use-after-free bug can be triggered
	by sending large user messages from multiple threads on the same socket.</p>
	<h1>Impact:</h1>
	<p>Triggering the use-after-free situation may result in unintended kernel
	behaviour including a kernel panic.</p>
      </body>
    </description>
    <references>
      <cvename>CVE-2020-7463</cvename>
      <freebsdsa>SA-20:25.sctp</freebsdsa>
    </references>
    <dates>
      <discovery>2020-09-02</discovery>
      <entry>2020-09-02</entry>
    </dates>
  </vuln>

  <vuln vid="74bbde13-ec17-11ea-88f8-901b0ef719ab">
    <topic>FreeBSD -- IPv6 Hop-by-Hop options use-after-free bug</topic>
    <affects>
      <package>
	<name>FreeBSD-kernel</name>
	<range><ge>11.3</ge><lt>11.3_13</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<h1>Problem Description:</h1>
	<p>Due to improper mbuf handling in the kernel, a use-after-free bug might be
	triggered by sending IPv6 Hop-by-Hop options over the loopback interface.</p>
	<h1>Impact:</h1>
	<p>Triggering the use-after-free situation may result in unintended kernel
	behaviour including a kernel panic.</p>
      </body>
    </description>
    <references>
      <cvename>CVE-2020-7462</cvename>
      <freebsdsa>SA-20:24.ipv6</freebsdsa>
    </references>
    <dates>
      <discovery>2020-09-02</discovery>
      <entry>2020-09-02</entry>
    </dates>
  </vuln>

  <vuln vid="1fb13175-ed52-11ea-8b93-001b217b3468">
    <topic>Gitlab -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>gitlab-ce</name>
	<range><ge>13.3.0</ge><lt>13.3.4</lt></range>
	<range><ge>13.2.0</ge><lt>13.2.8</lt></range>
	<range><ge>0</ge><lt>13.1.10</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Gitlab reports:</p>
	<blockquote cite="https://about.gitlab.com/releases/2020/09/02/security-release-gitlab-13-3-3-released/">
	  <p>Vendor Cross-Account Assume-Role Attack</p>
	  <p>Stored XSS on the Vulnerability Page</p>
	  <p>Outdated Job Token Can Be Reused to Access Unauthorized Resources</p>
	  <p>File Disclosure Via Workhorse File Upload Bypass</p>
	  <p>Unauthorized Maintainer Can Edit Group Badge</p>
	  <p>Denial of Service Within Wiki Functionality</p>
	  <p>Sign-in Vulnerable to Brute-force Attacks</p>
	  <p>Invalidated Session Allows Account Access With an Old Password</p>
	  <p>GitLab Omniauth Endpoint Renders User Controlled Messages</p>
	  <p>Blind SSRF Through Repository Mirroring</p>
	  <p>Information Disclosure Through Incorrect Group Permission Verifications</p>
	  <p>No Rate Limit on GitLab Webhook Feature</p>
	  <p>GitLab Session Revocation Feature Does Not Invalidate All Sessions</p>
	  <p>OAuth Authorization Scope for an External Application Can Be Changed Without User Consent</p>
	  <p>Unauthorized Maintainer Can Delete Repository</p>
	  <p>Improper Verification of Deploy-Key Leads to Access Restricted Repository</p>
	  <p>Disabled Repository Still Accessible With a Deploy-Token</p>
	  <p>Duplicated Secret Code Generated by 2 Factor Authentication Mechanism</p>
	  <p>Lack of Validation Within Project Invitation Flow</p>
	  <p>Current Sessions Not Invalidated Upon Enabling 2 Factor Authentication</p>
	  <p>Users Without 2 Factor Authentication Can Be Blocked Accessing GitLab</p>
	  <p>Lack of Upper Bound Check Leading to Possible Denial of Service</p>
	  <p>2 Factor Authentication for Groups Was Not Enforced Within API Endpoint</p>
	  <p>GitLab Runner Denial of Service via CI Jobs</p>
	  <p>Update jQuery Dependency</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://about.gitlab.com/releases/2020/09/02/security-release-gitlab-13-3-3-released/</url>
      <cvename>CVE-2020-13318</cvename>
      <cvename>CVE-2020-13301</cvename>
      <cvename>CVE-2020-13284</cvename>
      <cvename>CVE-2020-13298</cvename>
      <cvename>CVE-2020-13313</cvename>
      <cvename>CVE-2020-13311</cvename>
      <cvename>CVE-2020-13289</cvename>
      <cvename>CVE-2020-13302</cvename>
      <cvename>CVE-2020-13314</cvename>
      <cvename>CVE-2020-13309</cvename>
      <cvename>CVE-2020-13287</cvename>
      <cvename>CVE-2020-13306</cvename>
      <cvename>CVE-2020-13299</cvename>
      <cvename>CVE-2020-13300</cvename>
      <cvename>CVE-2020-13317</cvename>
      <cvename>CVE-2020-13303</cvename>
      <cvename>CVE-2020-13316</cvename>
      <cvename>CVE-2020-13304</cvename>
      <cvename>CVE-2020-13305</cvename>
      <cvename>CVE-2020-13307</cvename>
      <cvename>CVE-2020-13308</cvename>
      <cvename>CVE-2020-13315</cvename>
      <cvename>CVE-2020-13297</cvename>
      <cvename>CVE-2020-13310</cvename>
      <cvename>CVE-2020-11022</cvename>
    </references>
    <dates>
      <discovery>2020-09-02</discovery>
      <entry>2020-09-02</entry>
    </dates>
  </vuln>

  <vuln vid="67b050ae-ec82-11ea-9071-10c37b4ac2ea">
    <topic>go -- net/http/cgi, net/http/fcgi: Cross-Site Scripting (XSS) when Content-Type is not specified</topic>
    <affects>
      <package>
	<name>go</name>
	<range><lt>1.14.8,1</lt></range>
	<range><ge>1.15,1</ge><lt>1.15.1,1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The Go project reports:</p>
	<blockquote cite="https://github.com/golang/go/issues/40928">
	  <p>When a Handler does not explicitly set the Content-Type header, both
	    CGI implementations default to “text/html”. If an attacker can make
	    a server generate content under their control (e.g. a JSON
	    containing user data or an uploaded image file) this might be
	    mistakenly returned by the server as “text/html”. If a victim visits
	    such a page they could get the attacker's code executed in the
	    context of the server origin. If an attacker can make a server
	    generate content under their control (e.g. a JSON containing user
	    data or an uploaded image file) this might be mistakenly returned by
	    the server as “text/html”. If a victim visits such a page they could
	    get the attacker's code executed in the context of the server
	    origin.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2020-24553</cvename>
      <url>https://github.com/golang/go/issues/40928</url>
    </references>
    <dates>
      <discovery>2020-08-20</discovery>
      <entry>2020-09-01</entry>
    </dates>
  </vuln>

  <vuln vid="38fdf07b-e8ec-11ea-8bbe-e0d55e2a8bf9">
    <topic>ark -- extraction outside of extraction directory</topic>
    <affects>
      <package>
	<name>ark</name>
	<range><lt>20.08.0_1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Albert Astals Cid reports:</p>
	<blockquote cite="https://kde.org/info/security/advisory-20200827-1.txt">
	  <h3>Overview</h3>
	    <p>A maliciously crafted TAR archive containing symlink entries
	      would install files anywhere in the user's home directory upon extraction.</p>
	  <h3>Proof of concept</h3>
	    <p>For testing, an example of malicious archive can be found at
	      <a href="https://github.com/jwilk/traversal-archives/releases/download/0/dirsymlink.tar">dirsymlink.tar</a>
	    </p>
	  <h3>Impact</h3>
	    <p>Users can unwillingly install files like a modified .bashrc, or a malicious
	      script placed in ~/.config/autostart.</p>
	  <h3>Workaround</h3>
	    <p>Before extracting a downloaded archive using the Ark GUI, users should inspect it
	      to make sure it doesn't contain symlink entries pointing outside the extraction folder.</p>
	    <p>The 'Extract' context menu from the Dolphin file manager shouldn't be used.</p>
	  <h3>Solution</h3>
	    <p>Ark 20.08.1 skips maliciously crafted symlinks when extracting TAR archives.</p>
	    <p>Alternatively, <a href="https://invent.kde.org/utilities/ark/-/commit/8bf8c5ef07b0ac5e914d752681e470dea403a5bd">8bf8c5ef07b0ac5e914d752681e470dea403a5bd</a> can be applied to previous releases.</p>
	  <h3>Credits</h3>
	    <p>Thanks to Fabian Vogt for reporting this issue and for fixing it.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://kde.org/info/security/advisory-20200827-1.txt</url>
      <cvename>CVE-2020-24654</cvename>
    </references>
    <dates>
      <discovery>2020-08-27</discovery>
      <entry>2020-08-28</entry>
    </dates>
  </vuln>

  <vuln vid="ee261034-b95e-4479-b947-08b0877e029f">
    <topic>php72 -- use of freed hash key</topic>
    <affects>
      <package>
	<name>php72</name>
	<range><lt>7.2.33</lt></range>
      </package>
      <package>
	<name>php73</name>
	<range><lt>7.3.21</lt></range>
      </package>
      <package>
	<name>php74</name>
	<range><lt>7.4.9</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>grigoritchy at gmail dot com reports:</p>
	<blockquote cite="https://bugs.php.net/bug.php?id=79797">
	  <p>The phar_parse_zipfile function had use-after-free
	  vulnerability because of mishandling of the actual_alias
	  variable.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-7068</url>
      <cvename>CVE-2020-7068</cvename>
    </references>
    <dates>
      <discovery>2020-07-06</discovery>
      <entry>2020-08-27</entry>
    </dates>
  </vuln>

  <vuln vid="d73bc4e6-e7c4-11ea-a878-e09467587c17">
    <topic>chromium -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>chromium</name>
	<range><lt>85.0.4183.83</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Chrome Releases reports:</p>
	<blockquote cite="https://chromereleases.googleblog.com/2020/08/stable-channel-update-for-desktop_25.html">
	  <p>This update includes 20 security fixes, including:</p>
	  <ul>
	    <li>[1109120] High CVE-2020-6558: Insufficient policy
	      enforcement in iOS. Reported by Alison Huffman, Microsoft Browser
	      Vulnerability Research on 2020-07-24</li>
	    <li>[1116706] High CVE-2020-6559: Use after free in presentation
	      API. Reported by Liu Wei and Wu Zekai of Tencent Security Xuanwu
	      Lab on 2020-08-15</li>
	    <li>[1108181] Medium CVE-2020-6560: Insufficient policy
	      enforcement in autofill. Reported by Nadja Ungethuem from
	      www.unnex.de on 2020-07-22</li>
	    <li>[932892] Medium CVE-2020-6561: Inappropriate implementation
	      in Content Security Policy. Reported by Rob Wu on 2019-02-16</li>
	    <li>[1086845] Medium CVE-2020-6562: Insufficient policy
	      enforcement in Blink. Reported by Masato Kinugawa on
	      2020-05-27</li>
	    <li>[1104628] Medium CVE-2020-6563: Insufficient policy
	      enforcement in intent handling. Reported by Pedro Oliveira on
	      2020-07-12</li>
	    <li>[841622] Medium CVE-2020-6564: Incorrect security UI in
	      permissions. Reported by Khalil Zhani on 2018-05-10</li>
	    <li>[1029907] Medium CVE-2020-6565: Incorrect security UI in
	      Omnibox. Reported by Khalil Zhani on 2019-12-02</li>
	    <li>[1065264] Medium CVE-2020-6566: Insufficient policy
	      enforcement in media. Reported by Jun Kokatsu, Microsoft Browser
	      Vulnerability Research on 2020-03-27</li>
	    <li>[937179] Low CVE-2020-6567: Insufficient validation of
	      untrusted input in command line handling. Reported by Joshua
	      Graham of TSS on 2019-03-01</li>
	    <li>[1092451] Low CVE-2020-6568: Insufficient policy enforcement
	      in intent handling. Reported by Yongke Wang(@Rudykewang) and
	      Aryb1n(@aryb1n) of Tencent Security Xuanwu Lab on 2020-06-08</li>
	    <li>[995732] Low CVE-2020-6569: Integer overflow in WebUSB.
	      Reported by guaixiaomei on 2019-08-20</li>
	    <li>[1084699] Low CVE-2020-6570: Side-channel information leakage
	      in WebRTC. Reported by Signal/Tenable on 2020-05-19</li>
	    <li>[1085315] Low CVE-2020-6571: Incorrect security UI in Omnibox.
	      Reported by Rayyan Bijoora on 2020-05-21</li>
	  </ul>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2020-6558</cvename>
      <cvename>CVE-2020-6559</cvename>
      <cvename>CVE-2020-6560</cvename>
      <cvename>CVE-2020-6561</cvename>
      <cvename>CVE-2020-6562</cvename>
      <cvename>CVE-2020-6563</cvename>
      <cvename>CVE-2020-6564</cvename>
      <cvename>CVE-2020-6565</cvename>
      <cvename>CVE-2020-6566</cvename>
      <cvename>CVE-2020-6567</cvename>
      <cvename>CVE-2020-6568</cvename>
      <cvename>CVE-2020-6569</cvename>
      <cvename>CVE-2020-6570</cvename>
      <cvename>CVE-2020-6571</cvename>
      <url>https://chromereleases.googleblog.com/2020/08/stable-channel-update-for-desktop_25.html</url>
    </references>
    <dates>
      <discovery>2020-08-25</discovery>
      <entry>2020-08-26</entry>
    </dates>
  </vuln>

  <vuln vid="6842ac7e-d250-11ea-b9b7-08002728f74c">
    <topic>jasper -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>jasper</name>
	<range><lt>2.0.20</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>JasPer NEWS:</p>
	<blockquote cite="https://github.com/jasper-software/jasper/blob/master/NEWS">
	  <p>- Fix CVE-2018-9154</p>
	  <p>- Fix CVE-2018-19541</p>
	  <p>- Fix CVE-2016-9399, CVE-2017-13751</p>
	  <p>- Fix CVE-2018-19540</p>
	  <p>- Fix CVE-2018-9055</p>
	  <p>- Fix CVE-2017-13748</p>
	  <p>- Fix CVE-2017-5503, CVE-2017-5504, CVE-2017-5505</p>
	  <p>- Fix CVE-2018-9252</p>
	  <p>- Fix CVE-2018-19139</p>
	  <p>- Fix CVE-2018-19543, CVE-2017-9782</p>
	  <p>- Fix CVE-2018-20570</p>
	  <p>- Fix CVE-2018-20622</p>
	  <p>- Fix CVE-2016-9398</p>
	  <p>- Fix CVE-2017-14132</p>
	  <p>- Fix CVE-2017-5499</p>
	  <p>- Fix CVE-2018-18873</p>
	  <p>- Fix CVE-2017-13750</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://github.com/jasper-software/jasper/blob/master/NEWS</url>
      <cvename>CVE-2018-9154</cvename>
      <cvename>CVE-2018-19541</cvename>
      <cvename>CVE-2016-9399</cvename>
      <cvename>CVE-2017-13751</cvename>
      <cvename>CVE-2018-19540</cvename>
      <cvename>CVE-2018-9055</cvename>
      <cvename>CVE-2017-13748</cvename>
      <cvename>CVE-2017-5503</cvename>
      <cvename>CVE-2017-5504</cvename>
      <cvename>CVE-2017-5505</cvename>
      <cvename>CVE-2018-9252</cvename>
      <cvename>CVE-2018-19139</cvename>
      <cvename>CVE-2018-19543</cvename>
      <cvename>CVE-2017-9782</cvename>
      <cvename>CVE-2018-20570</cvename>
      <cvename>CVE-2018-20622</cvename>
      <cvename>CVE-2016-9398</cvename>
      <cvename>CVE-2017-14132</cvename>
      <cvename>CVE-2017-5499</cvename>
      <cvename>CVE-2018-18873</cvename>
      <cvename>CVE-2017-13750</cvename>
    </references>
    <dates>
      <discovery>2020-07-28</discovery>
      <entry>2020-08-25</entry>
      <modified>2020-09-05</modified>
    </dates>
  </vuln>

  <vuln vid="ffa15b3b-e6f6-11ea-8cbf-54e1ad3d6335">
    <topic>xorg-server -- Multiple input validation failures in X server extensions</topic>
    <affects>
      <package>
	<name>xorg-server</name>
	<range><lt>1.20.8_4,1</lt></range>
      </package>
      <package>
	<name>xephyr</name>
	<range><lt>1.20.8_4,1</lt></range>
      </package>
      <package>
	<name>xorg-vfbserver</name>
	<range><lt>1.20.8_4,1</lt></range>
      </package>
      <package>
	<name>xorg-nestserver</name>
	<range><lt>1.20.8_4,1</lt></range>
      </package>
      <package>
	<name>xwayland</name>
	<range><lt>1.20.8_4,1</lt></range>
      </package>
      <package>
	<name>xorg-dmx</name>
	<range><lt>1.20.8_4,1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The X.org project reports:</p>
	<blockquote cite="https://lists.x.org/archives/xorg-announce/2020-August/003058.html">
	  <p>All theses issuses  can lead to local privileges elevation on
	    systems where the X server is running privileged.</p>
	  <p>The handler for the XkbSetNames request does not validate the
	    request length before accessing its contents.</p>
	  <p>An integer underflow exists in the handler for the
	    XIChangeHierarchy request.</p>
	  <p>An integer underflow exist in the handler for the XkbSelectEvents
	    request.</p>
	  <p> An integer underflow exist in the handler for the CreateRegister
	    request of the X record extension.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2020-14345</cvename>
      <cvename>CVE-2020-14346</cvename>
      <cvename>CVE-2020-14361</cvename>
      <cvename>CVE-2020-14362</cvename>
      <url>https://lists.x.org/archives/xorg-announce/2020-August/003058.html</url>
    </references>
    <dates>
      <discovery>2020-08-25</discovery>
      <entry>2020-08-25</entry>
    </dates>
  </vuln>

  <vuln vid="8da79498-e6f6-11ea-8cbf-54e1ad3d6335">
    <topic>libX11 -- Doublefree in locale handlng code</topic>
    <affects>
      <package>
	<name>libX11</name>
	<range><lt>1.6.12,1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The X.org project reports:</p>
	<blockquote cite="https://lists.x.org/archives/xorg-announce/2020-August/003056.html">
	  <p>There is an integer overflow and a double free vulnerability in
	    the way LibX11 handles locales. The integer overflow is a necessary
	    precursor to the double free.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2020-14363</cvename>
      <url>https://lists.x.org/archives/xorg-announce/2020-August/003056.html</url>
    </references>
    <dates>
      <discovery>2020-08-25</discovery>
      <entry>2020-08-25</entry>
      <modified>2020-11-15</modified>
    </dates>
  </vuln>

  <vuln vid="719f06af-e45e-11ea-95a1-c3b8167b8026">
    <topic>chrony &lt;= 3.5.1 data corruption through symlink vulnerability writing the pidfile</topic>
    <affects>
      <package>
	<name>chrony</name>
	<range><lt>3.5.1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Miroslav Lichvar reports:</p>
	<blockquote cite="https://listengine.tuxfamily.org/chrony.tuxfamily.org/chrony-announce/2020/08/msg00000.html">
	  <p>chrony-3.5.1 [...] fixes a security issue in writing of the pidfile.</p>
	  <p>When chronyd is configured to save the pidfile in a directory where the
	    chrony user has write permissions (e.g. /var/run/chrony - the default
	    since chrony-3.4), an attacker that compromised the chrony user account
	    could create a symbolic link at the location of the pidfile to make
	    chronyd starting with root privileges follow the symlink and write its
	    process ID to a file for which the chrony user doesn't have write
	    permissions, causing a denial of service, or data loss.</p>
	  <p>This issue was reported by Matthias Gerstner of SUSE.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://listengine.tuxfamily.org/chrony.tuxfamily.org/chrony-announce/2020/08/msg00000.html</url>
      <cvename>CVE-2020-14367</cvename>
    </references>
    <dates>
      <discovery>2020-08-06</discovery>
      <entry>2020-08-22</entry>
    </dates>
  </vuln>

  <vuln vid="2ed7e8db-e234-11ea-9392-002590bc43be">
    <topic>sysutils/openzfs-kmod -- critical permissions issues</topic>
    <affects>
      <package>
	<name>openzfs-kmod</name>
	<range><lt>2020081800</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Andrew Walker reports:</p>
	<blockquote cite="https://bugs.freebsd.org/bugzilla/show_bug.cgi?id=248787">
	  <h5>Issue 1:</h5>
	  <p>
	    Users are always granted permissions to cd into a directory.  The
	    check for whether execute is present on directories is a de-facto
	    no-op.  This cannot be mitigated without upgrading.  Even setting
	    an explicit "deny - execute" NFSv4 ACE will be bypassed.
	  </p>
	  <h5>Issue 2:</h5>
	  <p>
	    All ACEs for the owner_group (group@) and regular groups
	    (group:&lt;foo&gt;) are granted the current user.  This means that
	    POSIX mode 770 is de-facto 777, and the below ACL is also de-facto
	    777 because the groupmember check for builtin_administrators
	    returns True.
	  </p>
	  <pre>
root@TESTBOX[~]# getfacl testfile
# file: testfile
# owner: root
# group: wheel
group:builtin_administrators:rwxpDdaARWcCos:-------:allow
	  </pre>
	</blockquote>
      </body>
    </description>
    <references>
      <freebsdpr>ports/248787</freebsdpr>
      <url>https://github.com/openzfs/zfs/commit/716b53d0a14c72bda16c0872565dd1909757e73f</url>
      <url>https://reviews.freebsd.org/D26107</url>
    </references>
    <dates>
      <discovery>2020-08-13</discovery>
      <entry>2020-08-20</entry>
    </dates>
  </vuln>

  <vuln vid="fbca6863-e2ad-11ea-9d39-00a09858faf5">
   <topic>textproc/elasticsearch6 -- field disclosure flaw</topic>
    <affects>
      <package>
	<name>elasticsearch6</name>
	<range><lt>6.8.12</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Elastic reports:</p>
	<blockquote cite="https://discuss.elastic.co/t/elastic-stack-7-9-0-and-6-8-12-security-update/245456">
	<p>A field disclosure flaw was found in Elasticsearch when running
	  a scrolling search with Field Level Security. If a user runs
	  the same query another more privileged user recently ran,
	  the scrolling search can leak fields that should be hidden.
	  This could result in an attacker gaining additional permissions
	  against a restricted index.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2020-7019</cvename>
      <url>https://discuss.elastic.co/t/elastic-stack-7-9-0-and-6-8-12-security-update/245456</url>
      <url>https://github.com/elastic/elasticsearch/pull/39490</url>
    </references>
    <dates>
      <discovery>2020-08-19</discovery>
      <entry>2020-08-20</entry>
    </dates>
  </vuln>

  <vuln vid="08de38d2-e2d0-11ea-9538-0c9d925bbbc0">
    <topic>adns -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>adns</name>
	<range><lt>1.5.2</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Ian Jackson and the adns project reports:</p>
	<blockquote cite="https://www.chiark.greenend.org.uk/pipermail/adns-announce/2020/000004.html">
	<p>Vulnerable applications: all adns callers.
	  Exploitable by: the local recursive resolver.
	  Likely worst case: Remote code execution.</p>
	<p>Vulnerable applications: those that make SOA queries.
	  Exploitable by: upstream DNS data sources.
	  Likely worst case: DoS (crash of the adns-using application)</p>
	<p>Vulnerable applications: those that use adns_qf_quoteok_query.
	  Exploitable by: sources of query domain names.
	  Likely worst case: DoS (crash of the adns-using application)</p>
	<p>Vulnerable applications: adnshost.
	  Exploitable by: code responsible for framing the input.
	  Likely worst case: DoS (adnshost crashes at EOF).</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://www.chiark.greenend.org.uk/pipermail/adns-announce/2020/000004.html</url>
      <cvename>CVE-2017-9103</cvename>
      <cvename>CVE-2017-9104</cvename>
      <cvename>CVE-2017-9105</cvename>
      <cvename>CVE-2017-9106</cvename>
      <cvename>CVE-2017-9107</cvename>
      <cvename>CVE-2017-9108</cvename>
      <cvename>CVE-2017-9109</cvename>
    </references>
    <dates>
      <discovery>2017-05-21</discovery>
      <entry>2020-08-20</entry>
    </dates>
  </vuln>

  <vuln vid="f60561e7-e23e-11ea-be64-507b9d01076a">
    <topic>Icinga Web 2 -- directory traversal vulnerability</topic>
    <affects>
      <package>
	<name>icingaweb2</name>
	<range><le>2.8.1</le></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Icinga development team reports:</p>
	<blockquote cite="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-24368">
	  <p>CVE-2020-24368</p>
	  <p>
	    Icinga Icinga Web2 2.0.0 through 2.6.4, 2.7.4 and 2.8.2 has a
	    Directory Traversal vulnerability which allows an attacker to access
	    arbitrary files that are readable by the process running Icinga Web
	    2. This issue is fixed in Icinga Web 2 in v2.6.4, v2.7.4 and v2.8.2.
	  </p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://icinga.com/2020/08/19/icinga-web-security-release-v2-6-4-v2-7-4-and-v2-8-2/</url>
      <cvename>CVE-2020-24368</cvename>
    </references>
    <dates>
      <discovery>2020-08-19</discovery>
      <entry>2020-08-19</entry>
    </dates>
  </vuln>

  <vuln vid="b905dff4-e227-11ea-b0ea-08002728f74c">
    <topic>curl -- expired pointer dereference vulnerability</topic>
    <affects>
      <package>
	<name>curl</name>
	<range><ge>7.29.0</ge><lt>7.72.0</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>curl security problems:</p>
	<blockquote cite="https://curl.haxx.se/docs/security.html">
	  <p>CVE-2020-8231: wrong connect-only connection</p>
	  <p>An application that performs multiple requests with libcurl's multi API
	    and sets the CURLOPT_CONNECT_ONLY option, might in rare circumstances
	    experience that when subsequently using the setup connect-only transfer,
	    libcurl will pick and use the wrong connection - and instead pick
	    another one the application has created since then.</p>
	  <p>CURLOPT_CONNECT_ONLY is the option to tell libcurl to not perform an
	    actual transfer, only connect. When that operation is completed, libcurl
	    remembers which connection it used for that transfer and "easy handle".
	    It remembers the connection using a pointer to the internal connectdata
	    struct in memory.</p>
	  <p>If more transfers are then done with the same multi handle before the
	    connect-only connection is used, leading to the initial connect-only
	    connection to get closed (for example due to idle time-out) while also
	    new transfers (and connections) are setup, such a new connection might
	    end up getting the exact same memory address as the now closed
	    connect-only connection.</p>
	  <p>If after those operations, the application then wants to use the
	    original transfer's connect-only setup to for example use
	    curl_easy_send() to send raw data over that connection, libcurl could
	    erroneously find an existing connection still being alive at the address
	    it remembered since before even though this is now a new and different
	    connection.</p>
	  <p>The application could then accidentally send data over that connection
	    which wasn't at all intended for that recipient, entirely unknowingly.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://curl.haxx.se/docs/security.html</url>
      <url>https://curl.haxx.se/docs/CVE-2020-8231.html</url>
      <cvename>CVE-2020-8231</cvename>
    </references>
    <dates>
      <discovery>2020-08-19</discovery>
      <entry>2020-08-19</entry>
    </dates>
  </vuln>

  <vuln vid="3fcb70a4-e22d-11ea-98b2-080027846a02">
    <topic>Python -- multiple vulnerabilities</topic>
    <affects>
      <package>
       <name>python37</name>
       <range><lt>3.7.9</lt></range>
      </package>
      <package>
       <name>python36</name>
       <range><lt>3.6.12</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
       <p>Python reports:</p>
       <blockquote cite="https://docs.python.org/release/3.7.9/whatsnew/changelog.html#changelog">
	  <p>bpo-29778: Ensure python3.dll is loaded from correct locations when
	    Python is embedded (CVE-2020-15523).</p>
	  <p>bpo-41004: CVE-2020-14422: The __hash__() methods of ipaddress.IPv4Interface
	    and ipaddress.IPv6Interface incorrectly generated constant hash values
	    of 32 and 128 respectively. This resulted in always causing hash collisions.
	    The fix uses hash() to generate hash values for the tuple of (address, mask
	    length, network address).</p>
	  <p>bpo-39603: Prevent http header injection by rejecting control characters
	    in http.client.putrequest(...).</p>
       </blockquote>
      </body>
    </description>
    <references>
       <url>https://docs.python.org/release/3.7.9/whatsnew/changelog.html#changelog</url>
       <url>https://docs.python.org/release/3.6.12/whatsnew/changelog.html#changelog</url>
       <cvename>CVE-2020-14422</cvename>
       <cvename>CVE-2020-15523</cvename>
    </references>
    <dates>
      <discovery>2020-06-17</discovery>
      <entry>2020-08-19</entry>
    </dates>
  </vuln>

  <vuln vid="e37a0a7b-e1a7-11ea-9538-0c9d925bbbc0">
    <topic>security/trousers -- several vulnerabilities</topic>
    <affects>
      <package>
	<name>trousers</name>
	<range><lt>0.3.14_3</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>the TrouSerS project reports reports:</p>
	<blockquote cite="https://sourceforge.net/p/trousers/trousers/ci/e74dd1d96753b0538192143adf58d04fcd3b242b/">
	  <p>If the tcsd daemon is started with root privileges, it fails to
	    drop the root gid after it is no longer needed.</p>
	  <p>If the tcsd daemon is started with root privileges, the tss user
	    has read and write access to the /etc/tcsd.conf file.</p>
	  <p>If the tcsd daemon is started with root privileges, the creation
	    of the system.data file is prone to symlink attacks.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://sourceforge.net/p/trousers/trousers/ci/e74dd1d96753b0538192143adf58d04fcd3b242b/</url>
      <url>https://www.openwall.com/lists/oss-security/2020/05/20/3</url>
      <cvename>CVE-2020-24330</cvename>
      <cvename>CVE-2020-24331</cvename>
      <cvename>CVE-2020-24332</cvename>
    </references>
    <dates>
      <discovery>2020-05-20</discovery>
      <entry>2020-08-18</entry>
    </dates>
  </vuln>

  <vuln vid="64575bb6-e188-11ea-beed-e09467587c17">
    <topic>chromium -- heap buffer overflow</topic>
    <affects>
      <package>
	<name>chromium</name>
	<range><lt>84.0.4147.135</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Chrome Releases reports:</p>
	<blockquote cite="https://chromereleases.googleblog.com/2020/08/stable-channel-update-for-desktop_18.html">
	  <p>This release contains one security fix:</p>
	  <ul>
	    <li>[1115345] High CVE-2020-6556: Heap buffer overflow in
	    SwiftShader. Reported by Alison Huffman, Microsoft Browser
	    Vulnerability Research on 2020-08-12</li>
	  </ul>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2020-6556</cvename>
      <url>https://chromereleases.googleblog.com/2020/08/stable-channel-update-for-desktop_18.html</url>
    </references>
    <dates>
      <discovery>2020-08-18</discovery>
      <entry>2020-08-18</entry>
    </dates>
  </vuln>

  <vuln vid="f20eb9a4-dfea-11ea-a9b8-9c5c8e84d621">
    <topic>ceph14 -- HTTP header injection via CORS ExposeHeader tag</topic>
    <affects>
      <package>
       <name>ceph14</name>
       <range><lt>14.2.11</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
       <p>Red Hat bugzilla reports:</p>
       <blockquote cite="https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2020-10753">
       <p>A flaw was found in the Red Hat Ceph Storage RadosGW (Ceph Object Gateway).
	The vulnerability is related to the injection of HTTP headers via a CORS
	ExposeHeader tag. The newline character in the ExposeHeader tag in the
	CORS configuration file generates a header injection in the response
	when the CORS request is made.</p>
       </blockquote>
      </body>
    </description>
    <references>
      <url>https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2020-10753</url>
      <cvename>CVE-2020-10753</cvename>
      <freebsdpr>ports/248673</freebsdpr>
    </references>
    <dates>
      <discovery>2020-05-27</discovery>
      <entry>2020-08-16</entry>
    </dates>
  </vuln>

  <vuln vid="09ea1b08-1d3e-4bf2-91a1-d6573f4da3d8">
    <topic>jenkins -- Buffer corruption in bundled Jetty</topic>
    <affects>
      <package>
	<name>jenkins</name>
	<range><lt>2.243</lt></range>
      </package>
      <package>
	<name>jenkins-lts</name>
	<range><lt>2.235.5</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Jenkins Security Advisory:</p>
	<blockquote cite="https://www.jenkins.io/security/advisory/2020-08-17/">
	  <h1>Description</h1>
	  <h5>(Critical) SECURITY-1983 / CVE-2019-17638</h5>
	  <p>Buffer corruption in bundled Jetty</p>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2019-17638</cvename>
      <url>https://www.jenkins.io/security/advisory/2020-08-17/</url>
    </references>
    <dates>
      <discovery>2020-08-17</discovery>
      <entry>2020-08-17</entry>
    </dates>
  </vuln>

  <vuln vid="085399ab-dfd7-11ea-96e4-80ee73bc7b66">
    <topic>net/rsync -- multiple zlib issues</topic>
    <affects>
      <package>
	<name>rsync</name>
	<range><lt>3.2.0</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>rsync developers reports:</p>
	<blockquote cite="https://download.samba.org/pub/rsync/NEWS#3.2.0">
	  <p>Various zlib fixes, including security fixes for CVE-2016-9843, CVE-2016-9842, CVE-2016-9841, and CVE-2016-9840</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://download.samba.org/pub/rsync/NEWS#3.2.0</url>
      <cvename>CVE-2016-9843</cvename>
      <cvename>CVE-2016-9842</cvename>
      <cvename>CVE-2016-9841</cvename>
      <cvename>CVE-2016-9840</cvename>
    </references>
    <dates>
      <discovery>2020-06-19</discovery>
      <entry>2020-08-16</entry>
    </dates>
  </vuln>

  <vuln vid="a23ebf36-e8b6-4665-b0f3-4c977f9a145c">
    <topic>security/py-ecdsa -- multiple issues</topic>
    <affects>
      <package>
	<name>py27-ecdsa</name>
	<range><le>0.13.3</le></range>
      </package>
      <package>
	<name>py37-ecdsa</name>
	<range><le>0.13.3</le></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>py-ecdsa developers report:</p>
	<blockquote cite="https://github.com/warner/python-ecdsa/releases/tag/python-ecdsa-0.13.3">
	  <p>Fix CVE-2019-14853 - possible DoS caused by malformed signature decoding.</p>
	  <p>Fix CVE-2019-14859 - signature malleability caused by insufficient checks of DER encoding</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://github.com/warner/python-ecdsa/releases/tag/python-ecdsa-0.13.3</url>
      <cvename>CVE-2019-14853</cvename>
      <cvename>CVE-2019-14859</cvename>
    </references>
    <dates>
      <discovery>2019-10-07</discovery>
      <entry>2020-08-16</entry>
    </dates>
  </vuln>

  <vuln vid="b8ea5b66-deff-11ea-adef-641c67a117d8">
    <topic>snmptt -- malicious shell code</topic>
    <affects>
      <package>
	<name>snmptt</name>
	<range><lt>1.4.2</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Snmptt reports:</p>
	<blockquote cite="http://snmptt.sourceforge.net/changelog.shtml">
	  <p>Fixed a security issue with EXEC / PREXEC / unknown_trap_exec that could
	    allow malicious shell code to be executed.</p>
	  <p>Fixed a bug with EXEC / PREXEC / unknown_trap_exec that caused commands to be
	    run as root instead of the user defined in daemon_uid.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>http://snmptt.sourceforge.net/changelog.shtml</url>
      <freebsdpr>ports/248162</freebsdpr>
    </references>
    <dates>
      <discovery>2020-07-23</discovery>
      <entry>2020-08-15</entry>
    </dates>
  </vuln>

  <vuln vid="87a07de1-e55e-4d51-bb64-8d117829a26a">
    <topic>mail/dovecot -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>dovecot</name>
	<range><lt>2.3.11</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Aki Tuomi reports:</p>
	<blockquote cite="https://dovecot.org/pipermail/dovecot-news/2020-August/000440.html">
	  <p>Parsing mails with a large number of MIME parts could
  have resulted in excessive CPU usage or a crash due to running out of
  stack memory..</p>
	</blockquote>
	<blockquote cite="https://dovecot.org/pipermail/dovecot-news/2020-August/000440.html">
	  <p>Dovecot's NTLM implementation does not correctly check
  message buffer size, which leads to reading past allocation which can
	    lead to crash</p>
	</blockquote>
	<blockquote cite="https://dovecot.org/pipermail/dovecot-news/2020-August/000440.html">
	  <p>lmtp/submission: Issuing the RCPT command with an
  address that has the empty quoted string as local-part causes the lmtp
  service to crash.</p>
	</blockquote>
	<blockquote cite="https://dovecot.org/pipermail/dovecot-news/2020-August/000440.html">
	  <p>Dovecot's RPA mechanism implementation accepts
  zero-length message, which leads to assert-crash later on.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://dovecot.org/pipermail/dovecot-news/2020-August/000440.html</url>
      <cvename>CVE-2020-12100</cvename>
      <cvename>CVE-2020-12673</cvename>
      <cvename>CVE-2020-10967</cvename>
      <cvename>CVE-2020-12674</cvename>
    </references>
    <dates>
      <discovery>2020-04-23</discovery>
      <entry>2020-08-13</entry>
    </dates>
  </vuln>

  <vuln vid="b1d6b383-dd51-11ea-a688-7b12871ef3ad">
    <topic>ilmbase, openexr -- v2.5.3 is a patch release with various bug/security fixes</topic>
    <affects>
      <package>
	<name>ilmbase</name>
	<range><lt>2.5.3</lt></range>
      </package>
      <package>
	<name>openexr</name>
	<range><lt>2.5.3</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Cary Phillips reports:</p>
	<blockquote cite="https://github.com/AcademySoftwareFoundation/openexr/releases/tag/v2.5.3">
	  <p>v2.5.3 - Patch release with various bug/security fixes [...]:</p>
	  <ul><li>Various sanitizer/fuzz-identified issues related to handling of invalid input</li></ul>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://github.com/AcademySoftwareFoundation/openexr/releases/tag/v2.5.3</url>
    </references>
    <dates>
      <discovery>2020-07-13</discovery> <!-- first commit 'sanity check string vectors on read', fe727ea in Git -->
      <entry>2020-08-13</entry>
    </dates>
  </vuln>

  <vuln vid="eef0d2d9-78c0-441e-8b03-454c5baebe20">
    <topic>jenkins -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>jenkins</name>
	<range><lt>2.252</lt></range>
      </package>
      <package>
	<name>jenkins-lts</name>
	<range><lt>2.235.4</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Jenkins Security Advisory:</p>
	<blockquote cite="https://www.jenkins.io/security/advisory/2020-08-12/">
	  <h1>Description</h1>
	  <h5>(High) SECURITY-1955 / CVE-2020-2229</h5>
	  <p>Stored XSS vulnerability in help icons</p>
	  <h5>(High) SECURITY-1957 / CVE-2020-2230</h5>
	  <p>Stored XSS vulnerability in project naming strategy</p>
	  <h5>(High) SECURITY-1960 / CVE-2020-2231</h5>
	  <p>Stored XSS vulnerability in 'Trigger builds remotely'</p>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2020-2229</cvename>
      <cvename>CVE-2020-2230</cvename>
      <cvename>CVE-2020-2231</cvename>
      <url>https://www.jenkins.io/security/advisory/2020-08-12/</url>
    </references>
    <dates>
      <discovery>2020-08-12</discovery>
      <entry>2020-08-12</entry>
    </dates>
  </vuln>

  <vuln vid="1110e286-dc08-11ea-beed-e09467587c17">
    <topic>chromium -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>chromium</name>
	<range><lt>84.0.4147.125</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Chrome Releases reports:</p>
	<blockquote cite="https://chromereleases.googleblog.com/2020/08/stable-channel-update-for-desktop.html">
	  <p>This release contains 15 security fixes, including:</p>
	  <ul>
	    <li>[1107433] High CVE-2020-6542: Use after free in ANGLE.
	      Reported by Piotr Bania of Cisco Talos on 2020-07-20</li>
	    <li>[1104046] High CVE-2020-6543: Use after free in task
	      scheduling. Reported by Looben Yang on 2020-07-10</li>
	    <li>[1108497] High CVE-2020-6544: Use after free in media. Reported
	      by Tim Becker of Theori on 2020-07-22</li>
	    <li>[1095584] High CVE-2020-6545: Use after free in audio. Reported
	      by Anonymous on 2020-06-16</li>
	    <li>[1100280] High CVE-2020-6546: Inappropriate implementation in
	      installer. Reported by Andrew Hess (any1) on 2020-06-29</li>
	    <li>[1102153] High CVE-2020-6547: Incorrect security UI in media.
	      Reported by David Albert on 2020-07-05</li>
	    <li>[1103827] High CVE-2020-6548: Heap buffer overflow in Skia.
	      Reported by Choongwoo Han, Microsoft Browser Vulnerability
	      Research on 2020-07-09</li>
	    <li>[1105426] High CVE-2020-6549: Use after free in media. Reported
	      by Sergei Glazunov of Google Project Zero on 2020-07-14</li>
	    <li>[1106682] High CVE-2020-6550: Use after free in IndexedDB.
	      Reported by Sergei Glazunov of Google Project Zero on
	      2020-07-17</li>
	    <li>[1107815] High CVE-2020-6551: Use after free in WebXR. Reported
	      by Sergei Glazunov of Google Project Zero on 2020-07-21</li>
	    <li>[1108518] High CVE-2020-6552: Use after free in Blink. Reported
	      by Tim Becker of Theori on 2020-07-22</li>
	    <li>[1111307] High CVE-2020-6553: Use after free in offline mode.
	      Reported by Alison Huffman, Microsoft Browser Vulnerability
	      Research on 2020-07-30</li>
	    <li>[1094235] Medium CVE-2020-6554: Use after free in extensions.
	      Reported by Anonymous on 2020-06-12</li>
	    <li>[1105202] Medium CVE-2020-6555: Out of bounds read in WebGL.
	      Reported by Marcin Towalski of Cisco Talos on 2020-07-13</li>
	  </ul>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2020-6542</cvename>
      <cvename>CVE-2020-6543</cvename>
      <cvename>CVE-2020-6544</cvename>
      <cvename>CVE-2020-6545</cvename>
      <cvename>CVE-2020-6546</cvename>
      <cvename>CVE-2020-6547</cvename>
      <cvename>CVE-2020-6548</cvename>
      <cvename>CVE-2020-6549</cvename>
      <cvename>CVE-2020-6550</cvename>
      <cvename>CVE-2020-6551</cvename>
      <cvename>CVE-2020-6552</cvename>
      <cvename>CVE-2020-6553</cvename>
      <cvename>CVE-2020-6554</cvename>
      <cvename>CVE-2020-6555</cvename>
      <url>https://chromereleases.googleblog.com/2020/08/stable-channel-update-for-desktop.html</url>
    </references>
    <dates>
      <discovery>2020-08-10</discovery>
      <entry>2020-08-11</entry>
    </dates>
  </vuln>

  <vuln vid="10e3ed8a-db7f-11ea-8bdf-643150d3111d">
    <topic>puppetdb -- Multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>puppetdb5</name>
	<range><lt>5.2.18</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Puppetlabs reports:</p>
	<blockquote cite="https://puppet.com/security/cve/jackson-july-2020-security-fixes/">
	  <p>In June 2020, jackson-databind published security updates addressing several CVEs. Previous releases of PuppetDB contain a vulnerable version of jackson.core:jackson-databind. PuppetDB 5.2.18 contains an updated version of jackson-databind that has patched the vulnerabilities.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://puppet.com/security/cve/jackson-july-2020-security-fixes/</url>
      <cvename>CVE-2020-9548</cvename>
      <cvename>CVE-2020-14062</cvename>
      <cvename>CVE-2020-14060</cvename>
      <cvename>CVE-2020-14061</cvename>
      <cvename>CVE-2020-14195</cvename>
    </references>
    <dates>
      <discovery>2020-07-23</discovery>
      <entry>2020-08-11</entry>
    </dates>
  </vuln>

  <vuln vid="6b6de127-db0b-11ea-ba1e-1c39475b9f84">
    <topic>bftpd -- Multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>bftpd</name>
	<range><lt>5.6</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Bftpd project reports:</p>
	<blockquote cite="http://bftpd.sourceforge.net/news.html">
	  <p>Bftpd is vulnerable to out of bounds memory access, file descriptor leak and a potential buffer overflow.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>http://bftpd.sourceforge.net/news.html</url>
    </references>
    <dates>
      <discovery>2020-04-16</discovery>
      <entry>2020-08-10</entry>
    </dates>
  </vuln>

  <vuln vid="6fd773d3-bc5a-11ea-b38d-f0def1d0c3ea">
    <topic>trafficserver -- resource consumption</topic>
    <affects>
      <package>
	<name>trafficserver</name>
	<range><lt>8.0.8</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Bryan Call reports:</p>
	<blockquote cite="https://lists.apache.org/thread.html/rf7f86917f42fdaf904d99560cba0c016e03baea6244c47efeb60ecbe%40%3Cdev.trafficserver.apache.org%3E">
	  <p>ATS is vulnerable to certain types of HTTP/2 HEADERS frames that can cause the server to allocate a large amount of memory and spin the thread.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-9494</url>
      <cvename>CVE-2020-9494</cvename>
    </references>
    <dates>
      <discovery>2020-06-24</discovery>
      <entry>2020-07-02</entry>
    </dates>
  </vuln>

  <vuln vid="76700d2f-d959-11ea-b53c-d4c9ef517024">
    <topic>Apache httpd -- Multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>apache24</name>
	<range><lt>2.4.46</lt></range>
      </package>
      <package>
	<name>mod_http2</name>
	<range><lt>1.15.14</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The Apache httpd projec reports:</p>
	<blockquote cite="https://downloads.apache.org/httpd/CHANGES_2.4.46">
	  <ul>
	    <li>mod_http2: Important:  Push Diary Crash on Specifically
	      Crafted HTTP/2 Header (CVE-2020-9490)<br/>
	      A specially crafted value for the 'Cache-Digest' header in a HTTP/2
	      request would result in a crash when the server actually tries to
	      HTTP/2 PUSH a resource afterwards.</li>
	    <li>mod_proxy_uwsgi: Moderate: mod_proxy_uwsgi buffer overflow
	      (CVE-2020-11984)<br/>
	      info disclosure and possible RCE</li>
	    <li>mod_http2: Moderate: Push Diary Crash on Specifically Crafted
	      HTTP/2 Header (CVE-2020-11993)<br/>
	      When trace/debug was enabled for the HTTP/2 module and on certain
	      traffic edge patterns, logging statements were made on the wrong
	      connection, causing concurrent use of memory pools.</li>
	  </ul>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://downloads.apache.org/httpd/CHANGES_2.4.46</url>
      <url>https://httpd.apache.org/security/vulnerabilities_24.html</url>
      <cvename>CVE-2020-9490</cvename>
      <cvename>CVE-2020-11984</cvename>
      <cvename>CVE-2020-11993</cvename>
    </references>
    <dates>
      <discovery>2020-08-07</discovery>
      <entry>2020-08-08</entry>
      <modified>2020-08-08</modified>
    </dates>
  </vuln>

  <vuln vid="bc7aff8c-d806-11ea-a5aa-0800272260e5">
    <topic>go -- encoding/binary: ReadUvarint and ReadVarint can read an unlimited number of bytes from invalid inputs</topic>
    <affects>
      <package>
	<name>go</name>
	<range><lt>1.14.7,1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The Go project reports:</p>
	<blockquote cite="https://github.com/golang/go/issues/40618">
	  <p>Certain invalid inputs to ReadUvarint or ReadVarint could cause
	    those functions to read an unlimited number of bytes from the
	    ByteReader argument before returning an error. This could lead to
	    processing more input than expected when the caller is reading
	    directly from the network and depends on ReadUvarint and ReadVarint
	    only consuming a small, bounded number of bytes, even from invalid
	    inputs.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2020-16845</cvename>
      <url>https://github.com/golang/go/issues/40618</url>
    </references>
    <dates>
      <discovery>2020-08-06</discovery>
      <entry>2020-08-06</entry>
    </dates>
  </vuln>

  <vuln vid="a003b74f-d7b3-11ea-9df1-001b217b3468">
    <topic>Gitlab -- Multiple Vulnerabilities</topic>
    <affects>
      <package>
	<name>gitlab-ce</name>
	<range><lt>13.3.0</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Gitlab reports:</p>
	<blockquote cite="https://about.gitlab.com/releases/2020/08/05/gitlab-13-2-3-released/">
	  <p>Arbitrary File Read when Moving an Issue</p>
	  <p>Memory Exhaustion via Excessive Logging of Invite Email Error</p>
	  <p>Denial of Service Through Project Import Feature</p>
	  <p>User Controlled Git Configuration Settings Resulting in SSRF</p>
	  <p>Stored XSS in Issue Reference Number Tooltip</p>
	  <p>Stored XSS in Issues List via Milestone Title</p>
	  <p>Improper Access Control After Group Transfer</p>
	  <p>Bypass Email Verification Required for OAuth Flow</p>
	  <p>Confusion When Using Hexadecimal Branch Names</p>
	  <p>Insufficient OAuth Revocation</p>
	  <p>Improper Access Control for Project Sharing</p>
	  <p>Stored XSS in Jobs Page</p>
	  <p>Improper Access Control of Applications Page</p>
	  <p>SSRF into Shared Runner</p>
	  <p>Update Kramdown Gem</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://about.gitlab.com/releases/2020/08/05/gitlab-13-2-3-released/</url>
      <cvename>CVE-2020-10977</cvename>
      <cvename>CVE-2020-13280</cvename>
      <cvename>CVE-2020-13281</cvename>
      <cvename>CVE-2020-14001</cvename>
    </references>
    <dates>
      <discovery>2020-08-05</discovery>
      <entry>2020-08-06</entry>
      <modified>2020-08-25</modified>
    </dates>
  </vuln>

  <vuln vid="8db74c04-d794-11ea-88f8-901b0ef719ab">
    <topic>FreeBSD -- sendmsg(2) privilege escalation</topic>
    <affects>
      <package>
	<name>FreeBSD-kernel</name>
	<range><ge>12.1</ge><lt>12.1_8</lt></range>
	<range><ge>11.4</ge><lt>11.4_2</lt></range>
	<range><ge>11.3</ge><lt>11.3_12</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<h1>Problem Description:</h1>
	<p>When handling a 32-bit sendmsg(2) call, the compat32 subsystem copies the
	control message to be transmitted (if any) into kernel memory, and adjusts
	alignment of control message headers.  The code which performs this work
	contained a time-of-check to time-of-use (TOCTOU) vulnerability which allows a
	malicious userspace program to modify control message headers after they were
	validated by the kernel.</p>
	<h1>Impact:</h1>
	<p>The TOCTOU bug can be exploited by an unprivileged malicious userspace program
	to trigger privilege escalation.</p>
      </body>
    </description>
    <references>
      <cvename>CVE-2020-7460</cvename>
      <freebsdsa>SA-20:23.sendmsg</freebsdsa>
    </references>
    <dates>
      <discovery>2020-08-05</discovery>
      <entry>2020-08-06</entry>
    </dates>
  </vuln>

  <vuln vid="9eb01384-d793-11ea-88f8-901b0ef719ab">
    <topic>FreeBSD -- Potential memory corruption in USB network device drivers</topic>
    <affects>
      <package>
	<name>FreeBSD-kernel</name>
	<range><ge>12.1</ge><lt>12.1_8</lt></range>
	<range><ge>11.4</ge><lt>11.4_2</lt></range>
	<range><ge>11.3</ge><lt>11.3_12</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<h1>Problem Description:</h1>
	<p>A missing length validation code common to these three drivers means that a
	malicious USB device could write beyond the end of an allocated network
	packet buffer.</p>
	<h1>Impact:</h1>
	<p>An attacker with physical access to a USB port and the ability to bring a
	network interface up may be able to use a specially crafted USB device to
	gain kernel or user-space code execution.</p>
      </body>
    </description>
    <references>
      <cvename>CVE-2020-7459</cvename>
      <freebsdsa>SA-20:21.usb_net</freebsdsa>
    </references>
    <dates>
      <discovery>2020-08-05</discovery>
      <entry>2020-08-06</entry>
    </dates>
  </vuln>

  <vuln vid="eab964f8-d632-11ea-9172-4c72b94353b5">
    <topic>typo3 -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>typo3-9-php72</name>
	<name>typo3-9-php73</name>
	<name>typo3-9-php74</name>
	<range><lt>9.5.20</lt></range>
      </package>
      <package>
	<name>typo3-10-php72</name>
	<name>typo3-10-php73</name>
	<name>typo3-10-php74</name>
	<range><lt>10.4.6</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Typo3 Team reports:</p>
	<blockquote cite="https://typo3.org/article/typo3-1046-and-9520-security-releases-published">
	  <p>In case an attacker manages to generate a valid cryptographic message authentication
	    code (HMAC-SHA1) - either by using a different existing vulnerability or in case the
	    internal encryptionKey was exposed - it is possible to retrieve arbitrary files of a
	    TYPO3 installation. This includes the possibility to fetch typo3conf/LocalConfiguration.php
	    which again contains the encryptionKey as well as credentials of the database management
	    system being used.
	    In case a database server is directly accessible either via internet or in a shared hosting
	    network, this allows to completely retrieve, manipulate or delete database contents.
	    This includes creating an administration user account - which can be used to trigger remote
	    code execution by injecting custom extensions.</p>
	  <p>It has been discovered that an internal verification mechanism can be used to generate
	    arbitrary checksums. This allows to inject arbitrary data having a valid cryptographic
	    message authentication code (HMAC-SHA1) and can lead to various attack chains as described
	    below.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://typo3.org/article/typo3-1046-and-9520-security-releases-published</url>
      <url>https://typo3.org/security/advisory/typo3-core-sa-2020-007</url>
      <url>https://typo3.org/security/advisory/typo3-core-sa-2020-008</url>
      <cvename>CVE-2020-15098</cvename>
      <cvename>CVE-2020-15099</cvename>
    </references>
    <dates>
      <discovery>2020-07-28</discovery>
      <entry>2020-08-04</entry>
    </dates>
  </vuln>

  <vuln vid="3c7ba82a-d3fb-11ea-9aba-0c9d925bbbc0">
    <topic>xorg-server -- Pixel Data Uninitialized Memory Information Disclosure</topic>
    <affects>
      <package>
	<name>xorg-server</name>
	<range><lt>1.20.8_3,1</lt></range>
      </package>
      <package>
	<name>xephyr</name>
	<range><lt>1.20.8_3,1</lt></range>
      </package>
      <package>
	<name>xorg-vfbserver</name>
	<range><lt>1.20.8_3,1</lt></range>
      </package>
      <package>
	<name>xorg-nestserver</name>
	<range><lt>1.20.8_3,1</lt></range>
      </package>
      <package>
	<name>xwayland</name>
	<range><lt>1.20.8_3,1</lt></range>
      </package>
      <package>
	<name>xorg-dmx</name>
	<range><lt>1.20.8_3,1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The X.org project reports:</p>
	<blockquote cite="https://lists.x.org/archives/xorg-announce/2020-July/003051.html">
	  <p>Allocation for pixmap data in AllocatePixmap() does not initialize
	    the memory in xserver, it leads to leak uninitialize heap memory to
	    clients. When the X server runs with elevated privileges.</p>
	  <p>This flaw can lead to ASLR bypass, which when combined with other
	    flaws (known/unknown) could lead to lead to privilege elevation in
	    the client.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://lists.x.org/archives/xorg-announce/2020-July/003051.html</url>
      <cvename>CVE-2020-14347</cvename>
    </references>
    <dates>
      <discovery>2020-07-31</discovery>
      <entry>2020-08-01</entry>
    </dates>
  </vuln>

  <vuln vid="6faa7feb-d3fa-11ea-9aba-0c9d925bbbc0">
    <topic>libX11 -- Heap corruption in the X input method client in libX11</topic>
    <affects>
      <package>
	<name>libX11</name>
	<range><lt>1.6.9_3,1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The X.org project reports:</p>
	<blockquote cite="https://lists.x.org/archives/xorg-announce/2020-July/003050.html">
	  <p>The X Input Method (XIM) client implementation in libX11 has some
	    integer overflows and signed/unsigned comparison issues that can
	    lead to heap corruption when handling malformed messages from an
	    input method.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://lists.x.org/archives/xorg-announce/2020-July/003050.html</url>
      <cvename>CVE-2020-14344</cvename>
    </references>
    <dates>
      <discovery>2020-07-31</discovery>
      <entry>2020-08-01</entry>
    </dates>
  </vuln>

  <vuln vid="7d7221ee-d334-11ea-bc50-080027846a02">
    <topic>Python -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>python38</name>
	<range><lt>3.8.5</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Python reports:</p>
	<blockquote cite="https://docs.python.org/3/whatsnew/changelog.html#python-3-8-5-final">
	  <p>bpo-41304: Fixes python3x._pth being ignored on Windows, caused by the fix for
	    bpo-29778 (CVE-2020-15801).</p>
	  <p>bpo-39603: Prevent http header injection by rejecting control characters in
	    http.client.putreques().</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://docs.python.org/3/whatsnew/changelog.html#python-3-8-5-final</url>
      <cvename>CVE-2020-15801</cvename>
    </references>
    <dates>
      <discovery>2020-02-11</discovery>
      <entry>2020-07-31</entry>
    </dates>
  </vuln>

  <vuln vid="d1ef1138-d273-11ea-a757-e0d55e2a8bf9">
    <topic>ark -- directory traversal</topic>
    <affects>
      <package>
	<name>ark</name>
	  <range><lt>20.04.2_1</lt></range>
	  <range><eq>20.04.3</eq></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>KDE Project Security Advisory reports:</p>
	<blockquote cite="https://kde.org/info/security/advisory-20200730-1.txt">
	  <h3>KDE Project Security Advisory</h3>
	  <table>
	    <tr>
	      <td>Title:</td>
	      <td>Ark: maliciously crafted archive can install files outside the extraction directory.</td>
	    </tr>
	    <tr>
	      <td>Risk Rating:</td>
	      <td>Important</td>
	    </tr>
	    <tr>
	      <td>CVE:</td>
	      <td>CVE-2020-16116</td>
	    </tr>
	    <tr>
	      <td>Versions:</td>
	      <td>ark &lt;= 20.04.3</td>
	    </tr>
	    <tr>
	      <td>Author:</td>
	      <td>Elvis Angelaccio &lt;elvis.angelaccio@kde.org&gt;</td>
	    </tr>
	    <tr>
	      <td>Date:</td>
	      <td>30 July 2020</td>
	    </tr>
	  </table>
	  <h3>Overview</h3>
	    <p>A maliciously crafted archive with "../" in the file paths
		would install files anywhere in the user's home directory upon extraction.</p>

	  <h3>Proof of concept</h3>
	  <p>For testing, an example of malicious archive can be found at
	      https://github.com/jwilk/traversal-archives/releases/download/0/relative2.zip</p>

	  <h3>Impact</h3>
	  <p>Users can unwillingly install files like a modified .bashrc, or a malicious
	      script placed in ~/.config/autostart</p>

	  <h3>Workaround</h3>
	  <p>Users should not use the 'Extract' context menu from the Dolphin file manager.
	    Before extracting a downloaded archive using the Ark GUI, users should inspect it
	      to make sure it doesn't contain entries with "../" in the file path.</p>

	  <h3>Solution</h3>
	  <p>Ark 20.08.0 prevents loading of malicious archives and shows a warning message
	    to the users.</p>

	  <p>Alternatively,
	    https://invent.kde.org/utilities/ark/-/commit/0df592524fed305d6fbe74ddf8a196bc9ffdb92f
	      can be applied to previous releases.</p>

	  <h3>Credits</h3>
	  <p>Thanks to Dominik Penner for finding and reporting this issue and thanks to
	    Elvis Angelaccio and Albert Astals Cid for fixing it.</p>
      </blockquote>
    </body>
    </description>
    <references>
      <cvename>CVE-2020-16116</cvename>
      <url>https://kde.org/info/security/advisory-20200730-1.txt</url>
    </references>
    <dates>
      <discovery>2020-07-30</discovery>
      <entry>2020-07-30</entry>
    </dates>
  </vuln>

  <vuln vid="9a447f78-d0f8-11ea-9837-e09467587c17">
    <topic>chromium -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>chromium</name>
	<range><lt>84.0.4147.105</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Chrome Releases reports:</p>
	<blockquote cite="https://chromereleases.googleblog.com/2020/07/stable-channel-update-for-desktop_27.html">
	  <p>This update contains 8 security fixes, including:</p>
	  <ul>
	    <li>[1105318] High CVE-2020-6537: Type Confusion in V8. Reported by
	      Alphalaab on 2020-07-14</li>
	    <li>[1096677] High CVE-2020-6538: Inappropriate implementation in
	      WebView. Reported by Yongke Wang(@Rudykewang) and Aryb1n(@aryb1n)
	      of Tencent Security Xuanwu Lab on 2020-06-18</li>
	    <li>[1104061] High CVE-2020-6532: Use after free in SCTP. Reported
	      by Anonymous on 2020-07-09</li>
	    <li>[1105635] High CVE-2020-6539: Use after free in CSS. Reported
	      by Oriol Brufau on 2020-07-14</li>
	    <li>[1105720] High CVE-2020-6540: Heap buffer overflow in Skia.
	      Reported by Zhen Zhou of NSFOCUS Security Team on 2020-07-15</li>
	    <li>[1106773] High CVE-2020-6541: Use after free in WebUSB. Reported
	      by Sergei Glazunov of Google Project Zero on 2020-07-17</li>
	  </ul>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2020-6532</cvename>
      <cvename>CVE-2020-6537</cvename>
      <cvename>CVE-2020-6538</cvename>
      <cvename>CVE-2020-6539</cvename>
      <cvename>CVE-2020-6540</cvename>
      <cvename>CVE-2020-6541</cvename>
      <url>https://chromereleases.googleblog.com/2020/07/stable-channel-update-for-desktop_27.html</url>
    </references>
    <dates>
      <discovery>2020-07-27</discovery>
      <entry>2020-07-28</entry>
    </dates>
  </vuln>

  <vuln vid="086c96cd-d0cb-11ea-b922-5404a68ad561">
    <topic>libsndfile -- out-of-bounds read memory access</topic>
    <affects>
      <package>
	<name>libsndfile</name>
	<range><lt>1.0.29.p.20200620</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>RedHat reports:</p>
	  <blockquote cite="https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2019-3832">
	    <p>It was discovered the fix for CVE-2018-19758 was not complete and
	      still allows a read beyond the limits of a buffer in
	      wav_write_header() function in wav.c. A local attacker may use
	      this flaw to make the application crash.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2019-3832</url>
    </references>
    <dates>
      <discovery>2019-02-14</discovery>
      <entry>2020-07-28</entry>
    </dates>
  </vuln>

  <vuln vid="a955cdb7-d089-11ea-8c6f-080027eedc6a">
    <topic>FreeRDP -- Integer overflow in RDPEGFX channel</topic>
    <affects>
      <package>
	<name>freerdp</name>
	<range><lt>2.2.0</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Bernhard Miklautz reports:</p>
	<blockquote cite="https://github.com/FreeRDP/FreeRDP/security/advisories/GHSA-4r38-6hq7-j3j9">
      <ul>
	    <li>
	  Integer overflow due to missing input sanitation in rdpegfx channel
	</li>
	<li>All FreeRDP clients are affected</li>
	<li>
	  The input rectangles from the server are not checked against local
	  surface coordinates and blindly accepted. A malicious server can send
	  data that will crash the client later on (invalid length arguments to
	  a memcpy)
	</li>
      </ul>
    </blockquote>
      </body>
    </description>
    <references>
      <url>https://www.freerdp.com/2020/07/20/2_2_0-released</url>
      <url>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-15103</url>
      <cvename>CVE-2020-15103</cvename>
    </references>
    <dates>
      <discovery>2020-06-25</discovery>
      <entry>2020-07-28</entry>
    </dates>
  </vuln>

  <vuln vid="e333084c-9588-4eee-8bdc-323e02cb4fe0">
    <topic>zeek -- Various vulnerabilities</topic>
    <affects>
      <package>
	<name>zeek</name>
	<range><lt>3.0.8</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Jon Siwek of Corelight reports:</p>
	<blockquote cite="https://github.com/zeek/zeek/releases/tag/v3.0.8">
	  <p>This release fixes the following security issues:</p>
	  <ul>
	  <li>Fix potential DNS analyzer stack overflow</li>
	  <li>Fix potential NetbiosSSN analyzer stack overflow</li>
	  </ul>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://github.com/zeek/zeek/releases/tag/v3.0.8</url>
    </references>
    <dates>
      <discovery>2020-07-28</discovery>
      <entry>2020-07-28</entry>
    </dates>
  </vuln>

  <vuln vid="cd2dc126-cfe4-11ea-9172-4c72b94353b5">
    <topic>Cacti -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>cacti</name>
	<range><lt>1.2.13</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Cacti developers reports:</p>
	<blockquote cite="https://www.cacti.net/release_notes.php?version=1.2.13">
	  <p>Multiple fixes for bundled jQuery to prevent
	    code exec (CVE-2020-11022, CVE-2020-11023).</p>
	  <p>PHPMail contains a escaping bug
	    (CVE-2020-13625).</p>
	  <p>SQL Injection via color.php in Cacti
	    (CVE-2020-14295).</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://www.cacti.net/release_notes.php?version=1.2.13</url>
      <url>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-11022</url>
      <url>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-11023</url>
      <url>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-13625</url>
      <url>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-14295</url>
      <cvename>CVE-2020-11022</cvename>
      <cvename>CVE-2020-11023</cvename>
      <cvename>CVE-2020-13625</cvename>
      <cvename>CVE-2020-14295</cvename>
    </references>
    <dates>
      <discovery>2020-07-15</discovery>
      <entry>2020-07-27</entry>
    </dates>
  </vuln>

  <vuln vid="e1d3a580-cd8b-11ea-bad0-08002728f74c">
    <topic>Wagtail -- XSS vulnerability</topic>
    <affects>
      <package>
	<name>py36-wagtail</name>
	<name>py37-wagtail</name>
	<name>py38-wagtail</name>
	<range><ge>2.8.0</ge><lt>2.9.3</lt></range>
	<range><lt>2.7.4</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>GitHub Advisory Database:</p>
	<blockquote cite="https://github.com/advisories/GHSA-2473-9hgq-j7xw">
	  <p>When a form page type is made available to Wagtail editors through the
	    wagtail.contrib.forms app, and the page template is built using
	    Django's standard form rendering helpers such as form.as_p (as directed
	    in the documentation), any HTML tags used within a form field's help
	    text will be rendered unescaped in the page. Allowing HTML within help
	    text is an intentional design decision by Django; however, as a matter
	    of policy Wagtail does not allow editors to insert arbitrary HTML by
	    default, as this could potentially be used to carry out cross-site
	    scripting attacks, including privilege escalation. This functionality
	    should therefore not have been made available to editor-level users.</p>
	  <p>The vulnerability is not exploitable by an ordinary site visitor
	    without access to the Wagtail admin.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://github.com/advisories/GHSA-2473-9hgq-j7xw</url>
      <cvename>CVE-2020-15118</cvename>
    </references>
    <dates>
      <discovery>2020-07-20</discovery>
      <entry>2020-07-24</entry>
    </dates>
  </vuln>

  <vuln vid="456375e1-cd09-11ea-9172-4c72b94353b5">
    <topic>pango -- buffer overflow</topic>
    <affects>
      <package>
	<name>pango</name>
	<range><lt>1.42.4_5</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<blockquote cite="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-1010238">
	  <p>Gnome Pango 1.42 and later is affected by: Buffer Overflow. The impact is:
	    The heap based buffer overflow can be used to get code execution. The component is:
	    function name: pango_log2vis_get_embedding_levels, assignment of nchars and the loop
	    condition. The attack vector is: Bug can be used when application pass invalid utf-8
	    strings to functions like pango_itemize.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-1010238</url>
      <url>https://nvd.nist.gov/vuln/detail/CVE-2019-1010238</url>
      <cvename>CVE-2019-1010238</cvename>
    </references>
    <dates>
      <discovery>2019-07-19</discovery>
      <entry>2020-07-23</entry>
      <modified>2020-09-26</modified>
    </dates>
  </vuln>

  <vuln vid="6a72eff7-ccd6-11ea-9172-4c72b94353b5">
    <topic>Apache Tomcat -- Multiple Vulnerabilities</topic>
    <affects>
      <package>
	<name>tomcat7</name>
	<range><lt>7.0.105</lt></range>
      </package>
      <package>
	<name>tomcat85</name>
	<range><lt>8.5.57</lt></range>
      </package>
      <package>
	<name>tomcat9</name>
	<range><lt>9.0.37</lt></range>
      </package>
      <package>
	<name>tomcat-devel</name>
	<range><lt>10.0.0.M7</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The Apache Software Foundation reports:</p>
	  <p>An h2c direct connection did not release the HTTP/1.1 processor after
	    the upgrade to HTTP/2. If a sufficient number of such requests were
	    made, an OutOfMemoryException could occur leading to a denial of service.</p>
	  <p>The payload length in a WebSocket frame was not correctly validated.
	    Invalid payload lengths could trigger an infinite loop. Multiple
	    requests with invalid payload lengths could lead to a denial of service.</p>
	  <p>A specially crafted sequence of HTTP/2 requests could trigger high CPU
	    usage for several seconds. If a sufficient number of such requests were
	    made on concurrent HTTP/2 connections, the server could become unresponsive.</p>
	</body>
    </description>
    <references>
      <url>https://tomcat.apache.org/security-7.html</url>
      <url>https://tomcat.apache.org/security-8.html</url>
      <url>https://tomcat.apache.org/security-9.html</url>
      <url>https://tomcat.apache.org/security-10.html</url>
      <cvename>CVE-2020-11996</cvename>
      <cvename>CVE-2020-13934</cvename>
      <cvename>CVE-2020-13935</cvename>
    </references>
    <dates>
      <discovery>2020-07-05</discovery>
      <entry>2020-07-23</entry>
      <modified>2020-07-23</modified>
    </dates>
  </vuln>

  <vuln vid="a9eeb3a3-ca5e-11ea-930b-080027846a02">
    <topic>Python -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>python38</name>
	<range><lt>3.8.4</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Python reports:</p>
	<blockquote cite="https://docs.python.org/3/whatsnew/changelog.html#python-3-8-4-final">
	  <p>bpo-41162:Audit hooks are now cleared later during finalization to avoid missing
	    events.</p>
	  <p>bpo-29778:Ensure python3.dll is loaded from correct locations when Python is
	    embedded.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://docs.python.org/3/whatsnew/changelog.html#python-3-8-4-final</url>
      <cvename>CVE-2020-15523</cvename>
    </references>
    <dates>
      <discovery>2020-06-29</discovery>
      <entry>2020-07-20</entry>
    </dates>
  </vuln>

  <vuln vid="1e7b316b-c6a8-11ea-a7d5-001999f8d30b">
    <topic>VirtualBox -- Multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>virtualbox-ose</name>
	<range><ge>5.2</ge><lt>5.2.44</lt></range>
	<range><ge>6.0</ge><lt>6.0.24</lt></range>
	<range><ge>6.1</ge><lt>6.1.12</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Oracle reports:</p>
	<blockquote cite="https://www.oracle.com/security-alerts/cpujul2020.html">
	  <p>Vulnerabilities in VirtualBox core can allow users
	  with logon access to the infrastructure where Oracle VM
	  VirtualBox executes to compromise Oracle VM VirtualBox.
	  Successful attacks of these vulnerabilities can result
	  in unauthorized access to critical data, access to all
	  Oracle VM VirtualBox accessible data, unauthorized ability
	  to cause a hang or frequently repeatable crash (complete
	  DOS) or takeover of Oracle VM VirtualBox.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://www.oracle.com/security-alerts/cpujul2020.html</url>
      <cvename>CVE-2020-14628</cvename>
      <cvename>CVE-2020-14629</cvename>
      <cvename>CVE-2020-14646</cvename>
      <cvename>CVE-2020-14647</cvename>
      <cvename>CVE-2020-14648</cvename>
      <cvename>CVE-2020-14649</cvename>
      <cvename>CVE-2020-14650</cvename>
      <cvename>CVE-2020-14673</cvename>
      <cvename>CVE-2020-14674</cvename>
      <cvename>CVE-2020-14675</cvename>
      <cvename>CVE-2020-14676</cvename>
      <cvename>CVE-2020-14677</cvename>
      <cvename>CVE-2020-14694</cvename>
      <cvename>CVE-2020-14695</cvename>
      <cvename>CVE-2020-14698</cvename>
      <cvename>CVE-2020-14699</cvename>
      <cvename>CVE-2020-14700</cvename>
      <cvename>CVE-2020-14703</cvename>
      <cvename>CVE-2020-14704</cvename>
      <cvename>CVE-2020-14707</cvename>
      <cvename>CVE-2020-14711</cvename>
      <cvename>CVE-2020-14712</cvename>
      <cvename>CVE-2020-14713</cvename>
      <cvename>CVE-2020-14714</cvename>
      <cvename>CVE-2020-14715</cvename>
    </references>
    <dates>
      <discovery>2020-07-14</discovery>
      <entry>2020-07-19</entry>
    </dates>
  </vuln>

  <vuln vid="f7a02651-c798-11ea-81d6-6805cabe6ebb">
    <topic>clamav -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>clamav</name>
	<range><lt>0.102.4,1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Micah Snyder reports:</p>
	<blockquote cite="https://blog.clamav.net/2020/07/clamav-01024-security-patch-released.html">
	  <dl>
	    <dt>CVE-2020-3350</dt>
	    <dd>
	      Fixed a vulnerability a malicious user could exploit to replace
	      a scan target's directory with a symlink to another path to trick
	      clamscan, clamdscan, or clamonacc into removing or moving a different
	      file (such as a critical system file). The issue would affect users
	      that use the --move or --remove options for clamscan, clamdscan and
	      clamonacc.
	    </dd>
	    <dt>CVE-2020-3327</dt>
	    <dd>
	      Fixed a vulnerability in the ARJ archive-parsing module in ClamAV
	      0.102.3 that could cause a denial-of-service (DoS) condition.
	      Improper bounds checking resulted in an out-of-bounds read that could
	      cause a crash. The previous fix for this CVE in version 0.102.3 was
	      incomplete. This fix correctly resolves the issue.
	    </dd>
	    <dt>CVE-2020-3481</dt>
	    <dd>
	      Fixed a vulnerability in the EGG archive module in ClamAV 0.102.0
	      - 0.102.3 that could cause a denial-of-service (DoS) condition.
	      Improper error handling could cause a crash due to a NULL pointer
	      dereference. This vulnerability is mitigated for those using the
	      official ClamAV signature databases because the file type signatures
	      in daily.cvd will not enable the EGG archive parser in affected
	      versions.
	    </dd>
	  </dl>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://blog.clamav.net/2020/07/clamav-01024-security-patch-released.html</url>
      <cvename>CVE-2020-3350</cvename>
      <cvename>CVE-2020-3327</cvename>
      <cvename>CVE-2020-3481</cvename>
    </references>
    <dates>
      <discovery>2020-07-16</discovery>
      <entry>2020-07-16</entry>
    </dates>
  </vuln>

  <vuln vid="714e6c35-c75b-11ea-aa29-d74973d1f9f3">
    <topic>OpenEXR/ilmbase 2.5.2 -- patch release with various bug/security fixes</topic>
     <affects>
      <package>
	<name>ilmbase</name>
	<range><lt>2.5.2</lt></range>
      </package>
      <package>
	<name>openexr</name>
	<range><lt>2.5.2</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Cary Phillips reports:</p>
	<blockquote cite="https://github.com/AcademySoftwareFoundation/openexr/releases/tag/v2.5.2">
	  <p>openexr 2.5.2 [is a p]atch release with various bug/security and build/install fixes:</p>
	  <ul>
	    <li>Invalid input could cause a heap-use-after-free error in DeepScanLineInputFile::DeepScanLineInputFile()</li>
	    <li>Invalid chunkCount attributes could cause heap buffer overflow in getChunkOffsetTableSize()</li>
	    <li>Invalid tiled input file could cause invalid memory access TiledInputFile::TiledInputFile()</li>
	  </ul>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://github.com/AcademySoftwareFoundation/openexr/releases/tag/v2.5.2</url>
    </references>
    <dates>
      <discovery>2020-05-18</discovery>
      <entry>2020-07-16</entry>
    </dates>
  </vuln>

  <vuln vid="870d59b0-c6c4-11ea-8015-e09467587c17">
    <topic>chromium -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>chromium</name>
	<range><lt>84.0.4147.89</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Chrome Releases reports:</p>
	<blockquote cite="https://chromereleases.googleblog.com/2020/07/stable-channel-update-for-desktop.html">
	  <p>This update contains 38 security fixes, including:</p>
	  <ul>
	    <li>[1103195] Critical CVE-2020-6510: Heap buffer overflow in
	      background fetch. Reported by Leecraso and Guang Gong of 360
	      Alpha Lab working with 360 BugCloud on 2020-07-08</li>
	    <li>[1074317] High CVE-2020-6511: Side-channel information leakage
	      in content security policy. Reported by Mikhail Oblozhikhin on
	      2020-04-24</li>
	    <li>[1084820] High CVE-2020-6512: Type Confusion in V8. Reported by
	      nocma, leogan, cheneyxu of WeChat Open Platform Security Team on
	      2020-05-20</li>
	    <li>[1091404] High CVE-2020-6513: Heap buffer overflow in PDFium.
	      Reported by Aleksandar Nikolic of Cisco Talos on 2020-06-04</li>
	    <li>[1076703] High CVE-2020-6514: Inappropriate implementation in
	      WebRTC. Reported by Natalie Silvanovich of Google Project Zero on
	      2020-04-30</li>
	    <li>[1082755] High CVE-2020-6515: Use after free in tab strip.
	      Reported by DDV_UA on 2020-05-14</li>
	    <li>[1092449] High CVE-2020-6516: Policy bypass in CORS. Reported by
	      Yongke Wang(@Rudykewang) and Aryb1n(@aryb1n) of Tencent Security
	      Xuanwu Lab on 2020-06-08</li>
	    <li>[1095560] High CVE-2020-6517: Heap buffer overflow in history.
	      Reported by ZeKai Wu (@hellowuzekai) of Tencent Security Xuanwu
	      Lab on 2020-06-16</li>
	    <li>[986051] Medium CVE-2020-6518: Use after free in developer
	      tools. Reported by David Erceg on 2019-07-20</li>
	    <li>[1064676] Medium CVE-2020-6519: Policy bypass in CSP. Reported
	      by Gal Weizman (@WeizmanGal) of PerimeterX on 2020-03-25</li>
	    <li>[1092274] Medium CVE-2020-6520: Heap buffer overflow in Skia.
	     Reported by Zhen Zhou of NSFOCUS Security Team on 2020-06-08</li>
	    <li>[1075734] Medium CVE-2020-6521: Side-channel information leakage
	      in autofill. Reported by Xu Lin (University of Illinois at
	      Chicago), Panagiotis Ilia (University of Illinois at Chicago),
	      Jason Polakis (University of Illinois at Chicago) on
	      2020-04-27</li>
	    <li>[1052093] Medium CVE-2020-6522: Inappropriate implementation in
	      external protocol handlers. Reported by Eric Lawrence of Microsoft
	      on 2020-02-13</li>
	    <li>[1080481] Medium CVE-2020-6523: Out of bounds write in Skia.
	      Reported by Liu Wei and Wu Zekai of Tencent Security Xuanwu Lab on
	      2020-05-08</li>
	    <li>[1081722] Medium CVE-2020-6524: Heap buffer overflow in
	      WebAudio. Reported by Sung Ta (@Mipu94) of SEFCOM Lab, Arizona
	      State University on 2020-05-12</li>
	    <li>[1091670] Medium CVE-2020-6525: Heap buffer overflow in Skia.
	      Reported by Zhen Zhou of NSFOCUS Security Team on 2020-06-05</li>
	    <li>[1074340] Low CVE-2020-6526: Inappropriate implementation in
	      iframe sandbox. Reported by Jonathan Kingston on 2020-04-24</li>
	    <li>[992698] Low CVE-2020-6527: Insufficient policy enforcement in
	      CSP. Reported by Zhong Zhaochen of andsecurity.cn on
	      2019-08-10</li>
	    <li>[1063690] Low CVE-2020-6528: Incorrect security UI in basic
	      auth. Reported by Rayyan Bijoora on 2020-03-22</li>
	    <li>[978779] Low CVE-2020-6529: Inappropriate implementation in
	      WebRTC. Reported by kaustubhvats7 on 2019-06-26</li>
	    <li>[1016278] Low CVE-2020-6530: Out of bounds memory access in
	      developer tools. Reported by myvyang on 2019-10-21</li>
	    <li>[1042986] Low CVE-2020-6531: Side-channel information leakage in
	      scroll to text. Reported by Jun Kokatsu, Microsoft Browser
	      Vulnerability Research on 2020-01-17</li>
	    <li>[1069964] Low CVE-2020-6533: Type Confusion in V8. Reported by
	      Avihay Cohen @ SeraphicAlgorithms on 2020-04-11</li>
	    <li>[1072412] Low CVE-2020-6534: Heap buffer overflow in WebRTC.
	      Reported by Anonymous on 2020-04-20</li>
	    <li>[1073409] Low CVE-2020-6535: Insufficient data validation in
	      WebUI. Reported by Jun Kokatsu, Microsoft Browser Vulnerability
	      Research on 2020-04-22</li>
	    <li>[1080934] Low CVE-2020-6536: Incorrect security UI in PWAs.
	      Reported by Zhiyang Zeng of Tencent security platform department
	      on 2020-05-09</li>
	  </ul>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2020-6510</cvename>
      <cvename>CVE-2020-6511</cvename>
      <cvename>CVE-2020-6512</cvename>
      <cvename>CVE-2020-6513</cvename>
      <cvename>CVE-2020-6514</cvename>
      <cvename>CVE-2020-6515</cvename>
      <cvename>CVE-2020-6516</cvename>
      <cvename>CVE-2020-6517</cvename>
      <cvename>CVE-2020-6518</cvename>
      <cvename>CVE-2020-6519</cvename>
      <cvename>CVE-2020-6520</cvename>
      <cvename>CVE-2020-6521</cvename>
      <cvename>CVE-2020-6522</cvename>
      <cvename>CVE-2020-6523</cvename>
      <cvename>CVE-2020-6524</cvename>
      <cvename>CVE-2020-6525</cvename>
      <cvename>CVE-2020-6526</cvename>
      <cvename>CVE-2020-6527</cvename>
      <cvename>CVE-2020-6528</cvename>
      <cvename>CVE-2020-6529</cvename>
      <cvename>CVE-2020-6530</cvename>
      <cvename>CVE-2020-6531</cvename>
      <cvename>CVE-2020-6533</cvename>
      <cvename>CVE-2020-6534</cvename>
      <cvename>CVE-2020-6535</cvename>
      <cvename>CVE-2020-6536</cvename>
      <url>https://chromereleases.googleblog.com/2020/07/stable-channel-update-for-desktop.html</url>
    </references>
    <dates>
      <discovery>2020-07-14</discovery>
      <entry>2020-07-15</entry>
    </dates>
  </vuln>

  <vuln vid="1ddab5cb-14c9-4632-959f-802c412a9593">
    <topic>jenkins -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>jenkins</name>
	<range><lt>2.245</lt></range>
      </package>
      <package>
	<name>jenkins-lts</name>
	<range><lt>2.235.2</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Jenkins Security Advisory:</p>
	<blockquote cite="https://www.jenkins.io/security/advisory/2020-07-15/">
	  <h1>Description</h1>
	  <h5>(High) SECURITY-1868 / CVE-2020-2220</h5>
	  <p>Stored XSS vulnerability in job build time trend</p>
	  <h5>(High) SECURITY-1901 / CVE-2020-2221</h5>
	  <p>Stored XSS vulnerability in upstream cause</p>
	  <h5>(High) SECURITY-1902 / CVE-2020-2222</h5>
	  <p>Stored XSS vulnerability in 'keep forever' badge icons</p>
	  <h5>(High) SECURITY-1945 / CVE-2020-2223</h5>
	  <p>Stored XSS vulnerability in console links</p>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2020-2220</cvename>
      <cvename>CVE-2020-2221</cvename>
      <cvename>CVE-2020-2222</cvename>
      <cvename>CVE-2020-2223</cvename>
      <url>https://www.jenkins.io/security/advisory/2020-07-15/</url>
    </references>
    <dates>
      <discovery>2020-07-15</discovery>
      <entry>2020-07-15</entry>
    </dates>
  </vuln>

  <vuln vid="0ed71663-c369-11ea-b53c-d4c9ef517024">
    <topic>MySQL -- Multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>mysql56-client</name>
	<range><lt>5.6.49</lt></range>
      </package>
      <package>
	<name>mysql56-server</name>
	<range><lt>5.6.49</lt></range>
      </package>
      <package>
	<name>mysql57-client</name>
	<range><lt>5.7.31</lt></range>
      </package>
      <package>
	<name>mysql57-server</name>
	<range><lt>5.7.31</lt></range>
      </package>
      <package>
	<name>mysql80-client</name>
	<range><lt>8.0.21</lt></range>
      </package>
      <package>
	<name>mysql80-server</name>
	<range><lt>8.0.21</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Oracle reports:</p>
	<blockquote cite="https://www.oracle.com/security-alerts/cpujul2020.html">
	  <p>This Critical Patch Update contains 40 new security patches for
	    Oracle MySQL.  6 of these vulnerabilities may be remotely exploitable
	    without authentication, i.e., may be exploited over a network without
	    requiring user credentials.</p>
	  <p>The highest CVSS v3.1 Base Score of vulnerabilities affecting Oracle
	    MySQL is 9.8.</p>
	  <p>This Pre-Release Announcement provides advance information about the
	    Oracle Critical Patch Update for July 2020, which will be released on
	    Tuesday, July 14, 2020.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://www.oracle.com/security-alerts/cpujul2020.html</url>
    </references>
    <dates>
      <discovery>2020-07-07</discovery>
      <entry>2020-07-11</entry>
    </dates>
  </vuln>

  <vuln vid="c11ee146-c266-11ea-8659-901b0ef719ab">
    <topic>FreeBSD -- IPv6 socket option race condition and use after free</topic>
    <affects>
      <package>
	<name>FreeBSD-kernel</name>
	<range><ge>12.1</ge><lt>12.1_7</lt></range>
	<range><ge>11.4</ge><lt>11.4_1</lt></range>
	<range><ge>11.3</ge><lt>11.3_11</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<h1>Problem Description:</h1>
	<p>The IPV6_2292PKTOPTIONS set handler was missing synchronization,
	so racing accesses could modify freed memory.</p>
	<h1>Impact:</h1>
	<p>A malicious user application could trigger memory corruption, leading
	to privilege escalation.</p>
      </body>
    </description>
    <references>
      <cvename>CVE-2020-7457</cvename>
      <freebsdsa>SA-20:20.ipv6</freebsdsa>
    </references>
    <dates>
      <discovery>2020-07-09</discovery>
      <entry>2020-07-10</entry>
    </dates>
  </vuln>

  <vuln vid="f8b46415-c264-11ea-8659-901b0ef719ab">
    <topic>FreeBSD -- posix_spawnp(3) buffer overflow</topic>
    <affects>
      <package>
	<name>FreeBSD</name>
	<range><ge>11.4</ge><lt>11.4_1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<h1>Problem Description:</h1>
	<p>posix_spawnp spawns a new thread with a limited stack allocated on the heap
	before delegating to execvp for the final execution within that thread.</p>
	<p>execvp would previously make unbounded allocations on the stack, directly
	proportional to the length of the user-controlled PATH environment variable.</p>
	<h1>Impact:</h1>
	<p>Long values in the user-controlled PATH environment variable cause
	posix_spawnp to write beyond the end of stack that was allocated, ultimately
	overflowing the heap-allocated stack with a direct copy of the value stored
	in PATH.</p>
      </body>
    </description>
    <references>
      <cvename>CVE-2020-7458</cvename>
      <freebsdsa>SA-20:18.posix_spawnp</freebsdsa>
    </references>
    <dates>
      <discovery>2020-07-09</discovery>
      <entry>2020-07-10</entry>
    </dates>
  </vuln>

  <vuln vid="198a120d-c22d-11ea-9172-4c72b94353b5">
    <topic>mybb -- multible vulnerabilities</topic>
    <affects>
      <package>
	<name>mybb</name>
	<range><lt>1.8.22</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>mybb Team reports:</p>
	<blockquote cite="https://blog.mybb.com/2019/12/30/mybb-1-8-22-released-security-maintenance-release/">
	  <p>High risk: Installer RCE on settings file write</p>
	  <p>Medium risk: Arbitrary upload paths and Local File Inclusion RCE</p>
	  <p>Medium risk: XSS via insufficient HTML sanitization of Blog feed and Extend data</p>
	  <p>Low risk: Open redirect on login</p>
	  <p>Low risk: SCEditor reflected XSS</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://blog.mybb.com/2019/12/30/mybb-1-8-22-released-security-maintenance-release/</url>
    </references>
    <dates>
      <discovery>2019-12-30</discovery>
      <entry>2020-07-09</entry>
    </dates>
  </vuln>

  <vuln vid="20b46222-c12b-11ea-abe8-08002728f74c">
    <topic>kramdown -- template option vulnerability</topic>
    <affects>
      <package>
	<name>rubygem-kramdown</name>
	<range><lt>2.3.0</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>kramdown news:</p>
	<blockquote cite="https://kramdown.gettalong.org/news.html">
	  <p>CVE-2020-14001 is addressed to avoid problems when using the
	    {::options /} extension together with the 'template' option.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://kramdown.gettalong.org/news.html</url>
      <cvename>CVE-2020-14001</cvename>
    </references>
    <dates>
      <discovery>2020-06-28</discovery>
      <entry>2020-07-08</entry>
    </dates>
  </vuln>

  <vuln vid="c685edd9-c045-11ea-8898-001cc0382b2f">
    <topic>Mbed TLS -- Side-channel attack on ECC key import and validation</topic>
    <affects>
      <package>
	<name>mbedtls</name>
	<range><lt>2.16.7</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Manuel Pégourié-Gonnard reports:</p>
	<blockquote cite="https://tls.mbed.org/tech-updates/security-advisories/mbedtls-security-advisory-2020-07">
	  <p>The scalar multiplication function in Mbed TLS accepts a random
	    number generator (RNG) as an optional argument and, if provided,
	    uses it to protect against some attacks.</p>
	  <p>It is the caller's responsibility to provide a RNG if protection
	    against side-channel attacks is desired; however two groups of
	    functions in Mbed TLS itself fail to pass a RNG:</p>
	  <ol>
	    <li>mbedtls_pk_parse_key() and mbedtls_pk_parse_keyfile()</li>
	    <li>mbedtls_ecp_check_pub_priv() and mbedtls_pk_check_pair()</li>
	  </ol>
	  <p>When those functions are called, scalar multiplication is computed
	    without randomisation, a number of old and new attacks apply,
	    allowing a powerful local attacker to fully recover the private
	    key.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://tls.mbed.org/tech-updates/security-advisories/mbedtls-security-advisory-2020-07</url>
    </references>
    <dates>
      <discovery>2020-07-01</discovery>
      <entry>2020-07-07</entry>
    </dates>
  </vuln>

  <vuln vid="f7a97d43-c039-11ea-a051-001b217b3468">
    <topic>Gitlab -- Multiple Vulnerabilities</topic>
    <affects>
      <package>
	<name>gitlab-ce</name>
	<range><ge>13.1.0</ge><lt>13.1.3</lt></range>
	<range><ge>13.0.0</ge><lt>13.0.9</lt></range>
	<range><ge>0</ge><lt>12.10.14</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Gitlab reports:</p>
	<blockquote cite="https://about.gitlab.com/releases/2020/07/06/critical-security-release-gitlab-13-1-3-released/">
	  <p>Workhorse bypass allows files in /tmp to be read via Maven Repository APIs</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://about.gitlab.com/releases/2020/07/06/critical-security-release-gitlab-13-1-3-released/</url>
      <cvename>CVE-2020-15525</cvename>
    </references>
    <dates>
      <discovery>2020-07-06</discovery>
      <entry>2020-07-07</entry>
    </dates>
  </vuln>

  <vuln vid="33c05d57-bf6e-11ea-ba1e-0800273f78d3">
    <topic>Python -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>python37</name>
	<range><lt>3.7.8</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Python reports:</p>
	<blockquote cite="https://docs.python.org/3.7/whatsnew/changelog.html#changelog">
	  <p>The AbstractBasicAuthHandler class of the urllib.request module uses an inefficient
	    regular expression which can be exploited by an attacker to cause a denial of service.
	    Fix the regex to prevent the catastrophic backtracking. Vulnerability reported by Ben
	    Caller and Matt Schwager.</p>
	  <p>Disallow control characters in hostnames in http.client, addressing CVE-2019-18348.
	    Such potentially malicious header injection URLs now cause a InvalidURL to be raised.</p>
	  <p>Disallow CR or LF in email.headerregistry.Address arguments to guard against header
	    injection attacks.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://docs.python.org/3.7/whatsnew/changelog.html#changelog</url>
      <cvename>CVE-2019-18348</cvename>
      <cvename>CVE-2020-8492</cvename>
    </references>
    <dates>
      <discovery>2019-10-24</discovery>
      <entry>2020-07-06</entry>
    </dates>
  </vuln>

  <vuln vid="ae599263-bca2-11ea-b78f-b42e99a1b9c3">
    <topic>samba -- Multiple Vulnerabilities</topic>
    <affects>
      <package>
	<name>samba410</name>
	<range><lt>4.10.17</lt></range>
      </package>
      <package>
	<name>samba411</name>
	<range><lt>4.11.11</lt></range>
      </package>
      <package>
	<name>samba412</name>
	<range><lt>4.12.4</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The Samba Team reports:</p>
	<blockquote cite="https://www.samba.org/samba/history/security.html">
	  <p>Four vulnerabilities were fixed in samba:</p>
	  <ul>
	  <li>CVE-2020-10730: NULL pointer de-reference and use-after-free in Samba AD DC LDAP Server with ASQ, VLV and paged_results</li>
	  <li>CVE-2020-10745: Parsing and packing of NBT and DNS packets can consume excessive CPU in the AD DC (only)</li>
	  <li>CVE-2020-10760: LDAP Use-after-free in Samba AD DC Global Catalog with paged_results and VLV</li>
	  <li>CVE-2020-14303: Empty UDP packet DoS in Samba AD DC nbtd</li>
	  </ul>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://www.samba.org/samba/security/CVE-2020-10730.html</url>
      <url>https://www.samba.org/samba/security/CVE-2020-10745.html</url>
      <url>https://www.samba.org/samba/security/CVE-2020-10760.html</url>
      <url>https://www.samba.org/samba/security/CVE-2020-14303.html</url>
      <cvename>CVE-2020-10730</cvename>
      <cvename>CVE-2020-10745</cvename>
      <cvename>CVE-2020-10760</cvename>
      <cvename>CVE-2020-14303</cvename>
    </references>
    <dates>
      <discovery>2020-07-02</discovery>
      <entry>2020-07-02</entry>
    </dates>
  </vuln>

  <vuln vid="4344861a-be0b-11ea-9172-4c72b94353b5">
    <topic>Anydesk -- Multiple Vulnerabilities</topic>
    <affects>
      <package>
	<name>anydesk</name>
	<range><lt>5.5.5</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Anydesk reports:</p>
	<blockquote cite="https://download.anydesk.com/changelog.txt">
	  <p>AnyDesk before 5.5.3 on Linux and FreeBSD has a format string
	    vulnerability that can be exploited for remote code execution.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-13160</url>
      <cvename>CVE-2020-13160</cvename>
    </references>
    <dates>
      <discovery>2020-06-10</discovery>
      <entry>2020-07-04</entry>
    </dates>
  </vuln>

  <vuln vid="d9f686f3-fde0-48dc-ab0a-01c2fe3e0529">
    <topic>py-matrix-synapse -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>py36-matrix-synapse</name>
	<name>py37-matrix-synapse</name>
	<name>py38-matrix-synapse</name>
	<range><lt>1.15.2</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Matrix developers report:</p>
	<blockquote cite="https://github.com/matrix-org/synapse/releases/tag/v1.15.2">
	  <p>Due to the two security issues highlighted below, server administrators are encouraged to update Synapse. We are not aware of these vulnerabilities being exploited in the wild.</p>
	  <ul>
	    <li>A malicious homeserver could force Synapse to reset the state in a room to a small subset of the correct state. This affects all Synapse deployments which federate with untrusted servers.</li>
	    <li>HTML pages served via Synapse were vulnerable to clickjacking attacks. This predominantly affects homeservers with single-sign-on enabled, but all server administrators are encouraged to upgrade.</li>
	  </ul>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://github.com/matrix-org/synapse/releases/tag/v1.15.2</url>
    </references>
    <dates>
      <discovery>2020-07-02</discovery>
      <entry>2020-07-03</entry>
    </dates>
  </vuln>

  <vuln vid="27616957-b084-11ea-937b-b42e99a1b9c3">
    <topic>dbus file descriptor leak</topic>
    <affects>
	<package>
    <name>dbus</name>
    <range><lt>1.12.18</lt></range>
	</package>
    </affects>
    <description>
	<body xmlns="http://www.w3.org/1999/xhtml">
    <p>GitHub Security Lab reports:</p>
    <blockquote cite="https://gitlab.freedesktop.org/dbus/dbus/-/issues/294">
	<p>D-Bus has a file descriptor leak, which can lead to denial of service when the dbus-daemon runs out of file descriptors.
	An unprivileged local attacker can use this to attack the system dbus-daemon, leading to denial of service for all users of the machine.</p>
    </blockquote>
	</body>
    </description>
    <references>
	<url>https://gitlab.freedesktop.org/dbus/dbus/-/issues/294</url>
	<url>https://www.openwall.com/lists/oss-security/2020/06/04/3</url>
	<cvename>CVE-2020-12049</cvename>
    </references>
    <dates>
	<discovery>2020-04-09</discovery>
	<entry>2020-07-03</entry>
    </dates>
  </vuln>

  <vuln vid="0a305431-bc98-11ea-a051-001b217b3468">
    <topic>Gitlab -- Multiple Vulnerabilities</topic>
    <affects>
      <package>
	<name>gitlab-ce</name>
	<range><ge>13.1.0</ge><lt>13.1.2</lt></range>
	<range><ge>13.0.0</ge><lt>13.0.8</lt></range>
	<range><ge>0</ge><lt>12.10.13</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Gitlab reports:</p>
	<blockquote cite="https://about.gitlab.com/releases/2020/07/01/security-release-13-1-2-release/">
	  <p>Missing Permission Check on Time Tracking</p>
	  <p>Cross-Site Scripting in PyPi Files API</p>
	  <p>Insecure Authorization Check on Private Project Security Dashboard</p>
	  <p>Cross-Site Scripting in References</p>
	  <p>Cross-Site Scripting in Group Names</p>
	  <p>Cross-Site Scripting in Blob Viewer</p>
	  <p>Cross-Site Scripting in Error Tracking</p>
	  <p>Insecure Authorisation Check on Creation and Deletion of Deploy Tokens</p>
	  <p>User Name Format Restiction Bypass</p>
	  <p>Denial of Service in Issue Comments</p>
	  <p>Cross-Site Scripting in Wiki Pages</p>
	  <p>Private Merge Request Updates Leaked via Todos</p>
	  <p>Private User Activity Leaked via API</p>
	  <p>Cross-Site Scripting in Bitbucket Import Feature</p>
	  <p>Github Project Restriction Bypass</p>
	  <p>Update PCRE Dependency</p>
	  <p>Update Kaminari Gem</p>
	  <p>Cross-Site Scripting in User Profile</p>
	  <p>Update Xterm.js</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://about.gitlab.com/releases/2020/07/01/security-release-13-1-2-release/</url>
      <cvename>CVE-2020-14155</cvename>
      <cvename>CVE-2020-11082</cvename>
      <cvename>CVE-2019-0542</cvename>
    </references>
    <dates>
      <discovery>2020-07-01</discovery>
      <entry>2020-07-02</entry>
    </dates>
  </vuln>

  <vuln vid="fce7a6e7-bc5d-11ea-b38d-f0def1d0c3ea">
    <topic>coturn -- information leakage</topic>
    <affects>
      <package>
	<name>coturn</name>
	<range><lt>4.5.1.3</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Felix Dörre reports:</p>
	<blockquote cite="https://github.com/coturn/coturn/security/advisories/GHSA-c8r8-8vp5-6gcm">
	  <p>The issue is that STUN/TURN response buffer is not initialized properly. (CWE 665)
	     This is a leak of information between different client connections. One client (an attacker)
	     could use their connection to intelligently query coturn to get interesting bytes in the
	     padding bytes from the connection of another client.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://github.com/coturn/coturn/commit/fdf7065d0f8e676feaf6734e86370f6dadfb8eec</url>
      <cvename>CVE-2020-4067</cvename>
    </references>
    <dates>
      <discovery>2020-06-30</discovery>
      <entry>2020-07-02</entry>
    </dates>
  </vuln>

  <vuln vid="641cd669-bc37-11ea-babf-6805ca2fa271">
    <topic>powerdns-recursor -- access restriction bypass</topic>
    <affects>
      <package>
	<name>powerdns-recursor</name>
	<range><ge>4.3.0</ge><lt>4.3.2</lt></range>
	<range><ge>4.2.0</ge><lt>4.2.3</lt></range>
	<range><ge>4.1.0</ge><lt>4.1.17</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>PowerDNS Team reports:</p>
	<blockquote cite="https://doc.powerdns.com/recursor/changelog/4.3.html#change-4.3.2">
	  <p>CVE-2020-14196: An issue has been found in PowerDNS Recursor where the ACL applied to the internal
	     web server via webserver-allow-from is not properly enforced, allowing a remote attacker to send
	     HTTP queries to the internal web server, bypassing the restriction.

	     In the default configuration the API webserver is not enabled. Only installations using a
	     non-default value for webserver and webserver-address are affected.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://doc.powerdns.com/recursor/security-advisories/index.html</url>
      <cvename>CVE-2020-14196</cvename>
    </references>
    <dates>
      <discovery>2020-07-01</discovery>
      <entry>2020-07-02</entry>
    </dates>
  </vuln>

  <vuln vid="b51d5391-bb76-11ea-9172-4c72b94353b5">
    <topic>drupal -- Multiple Vulnerabilities</topic>
    <affects>
      <package>
	<name>drupal7</name>
	<range><lt>7.72</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Drupal Security Team reports:</p>
	<blockquote cite="https://www.drupal.org/project/drupal/releases/7.72">
	  <p>The Drupal core Form API does not properly handle certain form input
	    from cross-site requests, which can lead to other vulnerabilities.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://www.drupal.org/sa-core-2020-004</url>
    </references>
    <dates>
      <discovery>2020-06-17</discovery>
      <entry>2020-07-01</entry>
    </dates>
  </vuln>

  <vuln vid="2675f0db-baa5-11ea-aa12-80ee73419af3">
    <topic>xrdp -- Local users can perform a buffer overflow attack against the xrdp-sesman service and then inpersonate it</topic>
    <affects>
      <package>
	<name>xrdp</name>
	<range><lt>0.9.13.1,1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Ashley Newson reports:</p>
	<blockquote cite="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-4044">
	  <p>The xrdp-sesman service can be crashed by connecting over port 3350 and supplying a malicious payload.  Once the xrdp-sesman process is dead, an unprivileged attacker on the server could then proceed to start their own imposter sesman service listening on port 3350.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://github.com/neutrinolabs/xrdp/security/advisories/GHSA-j9fv-6fwf-p3g4</url>
      <url>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-4044</url>
      <cvename>CVE-2020-4044</cvename>
    </references>
    <dates>
      <discovery>2020-06-02</discovery>
      <entry>2020-06-30</entry>
    </dates>
  </vuln>

  <vuln vid="d0be8e1f-b19a-11ea-94aa-b827eb2f57d4">
    <topic>MongoDB -- Ensure RoleGraph can serialize authentication restrictions to BSON</topic>
    <affects>
      <package>
	<name>mongodb36</name>
	<range><lt>3.6.18</lt></range>
      </package>
      <package>
	<name>mongodb40</name>
	<range><lt>4.0.15</lt></range>
      </package>
      <package>
	<name>mongodb42</name>
	<range><lt>4.2.3</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p> reports:</p>
	<blockquote cite="https://jira.mongodb.org/browse/SERVER-45472">
	  <p>Improper serialization of MongoDB Server's internal authorization state permits a user with valid credentials to bypass IP source address protection mechanisms following administrative action.</p>
	  <p>Credit<br/>
Discovered by Tony Yesudas.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2020-7921</cvename>
    </references>
    <dates>
      <discovery>2020-01-10</discovery>
      <entry>2020-06-29</entry>
    </dates>
  </vuln>

  <vuln vid="4200d5f5-b985-11ea-b08a-f8b156b6dcc8">
    <topic>libvorbis -- two vulnerabilities</topic>
    <affects>
      <package>
	<name>libvorbis</name>
	<range><lt>1.3.6_1,3</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Two vulnerabilities were fixed in the upstream repository:</p>
	<ul>
	  <li>The bark_noise_hybridmp function allows remote attackers
	    to cause a denial of service (out-of-bounds access and
	    application crash) or possibly have unspecified other
	    impact via a crafted file.</li>
	  <li>mapping0_forward does not validate the number of
	    channels, which allows remote attackers to cause a denial
	    of service (heap-based buffer overflow or over-read) or
	    possibly have unspecified other impact via a crafted
	    file.</li>
	</ul>
      </body>
    </description>
    <references>
      <url>https://www.openwall.com/lists/oss-security/2017/09/21/2</url>
      <cvename>CVE-2017-14160</cvename>
      <url>https://gitlab.xiph.org/xiph/vorbis/-/issues/2335</url>
      <cvename>CVE-2018-10392</cvename>
    </references>
    <dates>
      <discovery>2017-09-21</discovery>
      <entry>2020-06-28</entry>
    </dates>
  </vuln>

  <vuln vid="6190c0cd-b945-11ea-9401-2dcf562daa69">
    <topic>PuTTY -- Release 0.74 fixes two security vulnerabilities</topic>
    <affects>
      <package>
	<name>putty</name>
	<range><lt>0.74</lt></range>
      </package>
      <package>
	<name>putty-gtk2</name>
	<range><lt>0.74</lt></range>
      </package>
      <package>
	<name>putty-nogtk</name>
	<range><lt>0.74</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Simon Tatham reports:</p>
	<blockquote cite="https://lists.tartarus.org/pipermail/putty-announce/2020/000030.html">
	  <p>[Release 0.74] fixes the following security issues:</p>
	  <ul><li>New configuration option to disable PuTTY's default policy of
	    changing its host key algorithm preferences to prefer keys it
	    already knows. (There is a theoretical information leak in this
	    policy.) [CVE-2020-14002]</li>
	  <li>In some situations an SSH server could cause PuTTY to access freed
	    mdmory by pretending to accept an SSH key and then refusing the
	    actual signature. It can only happen if you're using an SSH agent.</li>
	</ul>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://lists.tartarus.org/pipermail/putty-announce/2020/000030.html</url>
      <url>https://www.chiark.greenend.org.uk/~sgtatham/putty/wishlist/vuln-dynamic-hostkey-info-leak.html</url>
      <url>https://www.fzi.de/en/news/news/detail-en/artikel/fsa-2020-2-ausnutzung-eines-informationslecks-fuer-gezielte-mitm-angriffe-auf-ssh-clients/</url>
      <cvename>CVE-2020-14002</cvename>
      <url>https://www.chiark.greenend.org.uk/~sgtatham/putty/wishlist/vuln-agent-keylist-used-after-free.html</url>
    </references>
    <dates>
      <discovery>2020-06-27</discovery>
      <entry>2020-06-28</entry>
    </dates>
  </vuln>

  <vuln vid="6a5d15b6-b661-11ea-8015-e09467587c17">
    <topic>chromium -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>chromium</name>
	<range><lt>83.0.4103.116</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Chrome Releases reports:</p>
	<blockquote cite="https://chromereleases.googleblog.com/2020/06/stable-channel-update-for-desktop_22.html">
	  <p>This update includes 2 security fixes, including:</p>
	  <ul>
	    <li>[1092308] High CVE-2020-6509: Use after free in extensions.
	      Reported by Anonymous on 2020-06-08</li>
	  </ul>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2020-6509</cvename>
      <url>https://chromereleases.googleblog.com/2020/06/stable-channel-update-for-desktop_22.html</url>
    </references>
    <dates>
      <discovery>2020-06-22</discovery>
      <entry>2020-06-24</entry>
    </dates>
  </vuln>

  <vuln vid="29b13a34-b1d2-11ea-a11c-4437e6ad11c4">
    <topic>Machine-in-the-middle response injection attack when using STARTTLS with IMAP, POP3, and SMTP</topic>
    <affects>
      <package>
	<name>mutt</name>
	<range><le>1.14.3</le></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>mutt 1.14.4 updates:</p>
	<blockquote cite="https://gitlab.com/muttmua/mutt/-/commit/c547433cdf2e79191b15c6932c57f1472bfb5ff4">
	<p>CVE-2020-14954 - Machine-in-the-middle response injection attack when using STARTTLS with IMAP, POP3, and SMTP</p>
	</blockquote>
      </body>
    </description>
    <references>
    <cvename>CVE-2020-14954</cvename>
    <url>https://gitlab.com/muttmua/mutt/-/commit/c547433cdf2e79191b15c6932c57f1472bfb5ff4</url>
    </references>
    <dates>
      <discovery>2020-06-16</discovery>
      <entry>2020-06-24</entry>
    </dates>
  </vuln>

  <vuln vid="5b397852-b1d0-11ea-a11c-4437e6ad11c4">
    <topic>IMAP fcc/postpone machine-in-the-middle attack</topic>
    <affects>
      <package>
	<name>mutt</name>
	<range><le>1.14.2</le></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>mutt 1.14.3 updates:</p>
	<blockquote cite="https://github.com/muttmua/mutt/commit/3e88866dc60b5fa6aaba6fd7c1710c12c1c3cd01">
	<p>CVE-2020-14093 - IMAP fcc/postpone man-in-the-middle attack via a PREAUTH response.</p>
	</blockquote>
      </body>
    </description>
    <references>
    <url>https://github.com/muttmua/mutt/commit/3e88866dc60b5fa6aaba6fd7c1710c12c1c3cd01</url>
    <cvename>CVE-2020-14093</cvename>
    </references>
    <dates>
      <discovery>2020-06-14</discovery>
      <entry>2020-06-24</entry>
    </dates>
  </vuln>

  <vuln vid="6bff5ca6-b61a-11ea-aef4-08002728f74c">
    <topic>curl -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>curl</name>
	<range><ge>7.20.0</ge><lt>7.71.0</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>curl security problems:</p>
	<blockquote cite="https://curl.haxx.se/docs/security.html">
	  <p>CVE-2020-8169: Partial password leak over DNS on HTTP redirect</p>
	  <p>libcurl can be tricked to prepend a part of the password to the
	    host name before it resolves it, potentially leaking the partial
	    password over the network and to the DNS server(s).</p>
	  <p>libcurl can be given a username and password for HTTP
	    authentication when requesting an HTTP resource - used for HTTP
	    Authentication such as Basic, Digest, NTLM and similar. The
	    credentials are set, either together with CURLOPT_USERPWD or
	    separately with CURLOPT_USERNAME and CURLOPT_PASSWORD. Important
	    detail: these strings are given to libcurl as plain C strings and
	    they are not supposed to be URL encoded.</p>
	  <p>In addition, libcurl also allows the credentials to be set in the
	    URL, using the standard RFC 3986 format:
	    http://user:password@host/path. In this case, the name and password
	    are URL encoded as that's how they appear in URLs.</p>
	  <p>If the options are set, they override the credentials set in the
	    URL.</p>
	  <p>Internally, this is handled by storing the credentials in the "URL
	    object" so that there is only a single set of credentials stored
	    associated with this single URL.</p>
	  <p>When libcurl handles a relative redirect (as opposed to an
	    absolute URL redirect) for an HTTP transfer, the server is only
	    sending a new path to the client and that path is applied on to the
	    existing URL. That "applying" of the relative path on top of an
	    absolute URL is done by libcurl first generating a full absolute
	    URL out of all the components it has, then it applies the redirect
	    and finally it deconstructs the URL again into its separate
	    components.</p>
	  <p>This security vulnerability originates in the fact that curl did
	    not correctly URL encode the credential data when set using one of
	    the curl_easy_setopt options described above. This made curl
	    generate a badly formatted full URL when it would do a redirect and
	    the final re-parsing of the URL would then go bad and wrongly
	    consider a part of the password field to belong to the host name.</p>
	  <p>The wrong host name would then be used in a name resolve lookup,
	    potentially leaking the host name + partial password in clear text
	    over the network (if plain DNS was used) and in particular to the
	    used DNS server(s).</p>
	  <p>CVE-2020-8177: curl overwrite local file with -J</p>
	  <p>curl can be tricked by a malicious server to overwrite a local
	    file when using -J (--remote-header-name) and -i (--include) in the
	    same command line.</p>
	  <p>The command line tool offers the -J option that saves a remote
	    file using the file name present in the Content-Disposition:
	    response header. curl then refuses to overwrite an existing local
	    file using the same name, if one already exists in the current
	    directory.</p>
	  <p>The -J flag is designed to save a response body, and so it doesn't
	    work together with -i and there's logic that forbids it. However,
	    the check is flawed and doesn't properly check for when the options
	    are used in the reversed order: first using -J and then -i were
	    mistakenly accepted.</p>
	  <p>The result of this mistake was that incoming HTTP headers could
	    overwrite a local file if one existed, as the check to avoid the
	    local file was done first when body data was received, and due to
	    the mistake mentioned above, it could already have received and
	    saved headers by that time.</p>
	  <p>The saved file would only get response headers added to it, as it
	    would abort the saving when the first body byte arrives. A
	    malicious server could however still be made to send back virtually
	    anything as headers and curl would save them like this, until the
	    first CRLF-CRLF sequence appears.</p>
	  <p>(Also note that -J needs to be used in combination with -O to have
	    any effect.)</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://curl.haxx.se/docs/security.html</url>
      <url>https://curl.haxx.se/docs/CVE-2020-8169.html</url>
      <url>https://curl.haxx.se/docs/CVE-2020-8177.html</url>
      <cvename>CVE-2020-8169</cvename>
      <cvename>CVE-2020-8177</cvename>
    </references>
    <dates>
      <discovery>2020-06-24</discovery>
      <entry>2020-06-24</entry>
    </dates>
  </vuln>

  <vuln vid="ce0c8590-b628-11ea-9d28-3c970ee9157c">
    <topic>CUPS -- memory corruption</topic>
    <affects>
      <package>
	<name>cups</name>
	<range><lt>2.3.3_1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Apple reports:</p>
	<blockquote cite="https://github.com/apple/cups/releases/tag/v2.3.3">
	  <ul>
	    <li>CVE-2019-8842: The ippReadIO function may under-read an
	      extension.</li>
	    <li>CVE-2020-3898: The ppdOpen function did not handle invalid UI
	      constraint. ppdcSource::get_resolution function did not handle
	      invalid resolution strings. An application may be able to gain
	      elevated privileges.</li>
	  </ul>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://github.com/apple/cups/releases/tag/v2.3.3</url>
      <url>https://support.apple.com/en-us/HT211100</url>
      <cvename>CVE-2019-8842</cvename>
      <cvename>CVE-2020-3898</cvename>
    </references>
    <dates>
      <discovery>2020-04-28</discovery>
      <entry>2020-06-24</entry>
    </dates>
  </vuln>

  <vuln vid="feb8afdc-b3e5-11ea-9df5-08002728f74c">
    <topic>Rails -- permission vulnerability</topic>
    <affects>
      <package>
	<name>rubygem-actionpack60</name>
	<range><lt>6.0.3.2</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Ruby on Rails blog:</p>
	<blockquote cite="https://weblog.rubyonrails.org/2020/6/17/Rails-6-0-3-2-has-been-released/">
	  <p>Rails 6.0.3.2 has been released! This version of Rails contains an
	    important security patch, and you should upgrade! The release contains
	    only one patch that addresses CVE-2020-8185.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://weblog.rubyonrails.org/2020/6/17/Rails-6-0-3-2-has-been-released/</url>
      <url>https://github.com/rails/rails/blob/6-0-stable/actionpack/CHANGELOG.md</url>
      <url>https://groups.google.com/forum/#!topic/rubyonrails-security/pAe9EV8gbM0</url>
      <cvename>CVE-2020-8185</cvename>
    </references>
    <dates>
      <discovery>2020-06-17</discovery>
      <entry>2020-06-22</entry>
    </dates>
  </vuln>

  <vuln vid="77896891-b08a-11ea-937b-b42e99a1b9c3">
    <topic>vlc heap-based buffer overflow</topic>
    <affects>
      <package>
	<name>vlc</name>
	<range><lt>3.0.11,4</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Thomas Guillem reports:</p>
	<blockquote cite="http://git.videolan.org/?p=vlc/vlc-3.0.git;a=commit;h=d5c43c21c747ff30ed19fcca745dea3481c733e0">
	  <p>A heap-based buffer overflow in the hxxx_AnnexB_to_xVC function in modules/packetizer/hxxx_nal.c in VideoLAN VLC media player before 3.0.11
      allows remote attackers to cause a denial of service (application crash) or execute arbitrary code via a crafted H.264 Annex-B video (.avi for example) file.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://nvd.nist.gov/vuln/detail/CVE-2020-13428</url>
      <cvename>CVE-2020-13428</cvename>
   </references>
    <dates>
      <discovery>2020-05-27</discovery>
      <entry>2020-06-17</entry>
    </dates>
  </vuln>

  <vuln vid="f28476f7-b166-11ea-8775-507b9d01076a">
    <topic>Several issues in Lynis</topic>
    <affects>
      <package>
	<name>lynis</name>
	<range><ge>2.0.0</ge><le>2.7.5</le></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>lynis update:</p>
	<p>This release resolves two security issues</p>
	<ul>
	  <li>CVE-2020-13882 - Discovered by Sander Bos, code submission by Katarina Durechova</li>
	  <li>CVE-2019-13033 - Discovered by Sander Bos</li>
	</ul>
      </body>
    </description>
    <references>
      <url>https://github.com/CISOfy/lynis/blob/master/CHANGELOG.md#security-issues</url>
    </references>
    <dates>
      <discovery>2020-06-18</discovery>
      <entry>2020-06-18</entry>
    </dates>
  </vuln>

  <vuln vid="f00d1873-b138-11ea-8659-901b0ef719ab">
    <topic>BIND -- Remote Denial of Service vulnerability</topic>
    <affects>
      <package>
	<name>bind911</name>
	<range><ge>9.11.14</ge><lt>9.11.20</lt></range>
      </package>
      <package>
	<name>bind916</name>
	<range><ge>9.16.0</ge><lt>9.16.4</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>ISC reports:</p>
	<blockquote cite="https://kb.isc.org/docs/cve-2020-8619">
	  <p>The asterisk character ("*") is allowed in DNS zone files, where
	    it is most commonly present as a wildcard at a terminal node of
	    the Domain Name System graph. However, the RFCs do not require
	    and BIND does not enforce that an asterisk character be present
	    only at a terminal node.</p>
	  <p>A problem can occur when an asterisk is present in an empty
	    non-terminal location within the DNS graph. If such a node exists,
	    after a series of queries, named can reach an inconsistent state
	    that results in the failure of an assertion check in rbtdb.c,
	    followed by the program exiting due to the assertion failure.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2020-8619</cvename>
      <url>https://kb.isc.org/docs/cve-2020-8619</url>
    </references>
    <dates>
      <discovery>2020-06-17</discovery>
      <entry>2020-06-18</entry>
    </dates>
  </vuln>

  <vuln vid="75d72e03-b137-11ea-8659-901b0ef719ab">
    <topic>BIND -- Remote Denial of Service vulnerability</topic>
    <affects>
      <package>
	<name>bind916</name>
	<range><ge>9.16.0</ge><lt>9.16.4</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>ISC reports:</p>
	<blockquote cite="https://kb.isc.org/docs/cve-2020-8618">
	  <p>An assertion check in BIND (that is meant to prevent going beyond
	    the end of a buffer when processing incoming data) can be
	    incorrectly triggered by a large response during zone transfer.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2020-8618</cvename>
      <url>https://kb.isc.org/docs/cve-2020-8618</url>
    </references>
    <dates>
      <discovery>2020-06-17</discovery>
      <entry>2020-06-18</entry>
    </dates>
  </vuln>

  <vuln vid="96fb446d-ac7b-11ea-8b5e-b42e99a1b9c3">
    <topic>LibreOffice Security Advisory</topic>
    <affects>
      <package>
	<name>libreoffice</name>
	<range><lt>6.4.4</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>LibreOffice reports:</p>
	<blockquote cite="https://www.libreoffice.org/about-us/security/advisories/">
	  <p>Two flaws were found in LibreOffice:</p>
      <ul>
      <li>CVE-2020-12802: remote graphics contained in docx format retrieved in 'stealth mode'</li>
      <li>CVE-2020-12803: XForms submissions could overwrite local files</li>
    </ul>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://www.libreoffice.org/about-us/security/advisories/CVE-2020-12802</url>
      <url>https://www.libreoffice.org/about-us/security/advisories/cve-2020-12803</url>
      <cvename>CVE-2020-12802</cvename>
      <cvename>CVE-2020-12803</cvename>
   </references>
    <dates>
      <discovery>2020-06-08</discovery>
      <entry>2020-06-12</entry>
    </dates>
  </vuln>

  <vuln vid="c4ac9c79-ab37-11ea-8b5e-b42e99a1b9c3">
    <topic>several security issues in sqlite3</topic>
    <affects>
      <package>
	<name>sqlite3</name>
	<range><lt>3.32.2,1</lt></range>
      </package>
      <package>
	<name>FreeBSD</name>
	<range><ge>12.1</ge><lt>12.1_8</lt></range>
	<range><ge>11.4</ge><lt>11.4_2</lt></range>
	<range><ge>11.3</ge><lt>11.3_12</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>sqlite3 update:</p>
	<p>Various security issues could be used by an attacker to cause SQLite to crash, resulting in a denial of service, or possibly execute arbitrary code.</p>
	<ul>
	  <li>CVE-2020-11655: SQLite through 3.31.1 allows attackers to cause a denial of service (segmentation fault) via a malformed window-function query because the AggInfo object's initialization is mishandled.</li>
	  <li>CVE-2020-13434: SQLite through 3.32.0 has an integer overflow in sqlite3_str_vappendf in printf.c.</li>
	  <li>CVE-2020-13435: SQLite through 3.32.0 has a segmentation fault in sqlite3ExprCodeTarget in expr.c.</li>
	  <li>CVE-2020-13630: ext/fts3/fts3.c in SQLite before 3.32.0 has a use-after-free in fts3EvalNextRow, related to the snippet feature.</li>
	  <li>CVE-2020-13631: SQLite before 3.32.0 allows a virtual table to be renamed to the name of one of its shadow tables, related to alter.c and build.c.</li>
	  <li>CVE-2020-13632: ext/fts3/fts3_snippet.c in SQLite before 3.32.0 has a NULL pointer dereference via a crafted matchinfo() query.</li>
	</ul>
      </body>
    </description>
    <references>
      <url>https://nvd.nist.gov/vuln/detail/CVE-2020-11655</url>
      <cvename>CVE-2020-11655</cvename>
      <url>https://nvd.nist.gov/vuln/detail/CVE-2020-13434</url>
      <cvename>CVE-2020-13434</cvename>
      <url>https://nvd.nist.gov/vuln/detail/CVE-2020-13435</url>
      <cvename>CVE-2020-13435</cvename>
      <url>https://nvd.nist.gov/vuln/detail/CVE-2020-13630</url>
      <cvename>CVE-2020-13630</cvename>
      <url>https://nvd.nist.gov/vuln/detail/CVE-2020-13631</url>
      <cvename>CVE-2020-13631</cvename>
      <url>https://nvd.nist.gov/vuln/detail/CVE-2020-13632</url>
      <cvename>CVE-2020-13632</cvename>
      <freebsdsa>SA-20:22.sqlite</freebsdsa>
    </references>
    <dates>
      <discovery>2020-05-25</discovery>
      <entry>2020-06-10</entry>
      <modified>2020-08-06</modified>
    </dates>
  </vuln>

  <vuln vid="11fcfa8f-ac64-11ea-9dab-000d3ab229d6">
    <topic>Node.js -- June 2020 Security Releases</topic>
    <affects>
      <package>
	<name>node</name>
	<range><lt>14.4.0</lt></range>
      </package>
      <package>
	<name>node12</name>
	<range><lt>12.18.0</lt></range>
      </package>
      <package>
	<name>node10</name>
	<range><lt>10.21.0</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Node.js reports:</p>
	<blockquote cite="https://nodejs.org/en/blog/vulnerability/june-2020-security-releases/">
	  <p>Updates are now available for all supported Node.js release lines for the following issues.</p>
    <h1>TLS session reuse can lead to host certificate verification bypass (High) (CVE-2020-8172)</h1>
    <p>The 'session' event could be emitted before the 'secureConnect' event. It should not be, because the
      connection may fail to be authorized. If it was saved an authorized connection could be established
      later with the session ticket. Note that the https agent caches sessions, so is vulnerable to this.</p>
    <p>The 'session' event will now only be emitted after the 'secureConnect' event, and only for authorized
      connections.</p>
    <h1>HTTP/2 Large Settings Frame DoS (Low) (CVE-2020-11080)</h1>
    <p>Receiving unreasonably large HTTP/2 SETTINGS frames can consume 100% CPU to process all the settings,
      blocking all other activities until complete.</p>
    <p>The HTTP/2 session frame is limited to 32 settings by default. This can be configured if necessary
      using the maxSettings option.</p>
    <h1>napi_get_value_string_*() allows various kinds of memory corruption (High) (CVE-2020-8174)</h1>
    <p>Calling napi_get_value_string_latin1(), napi_get_value_string_utf8(), or napi_get_value_string_utf16()
      with a non-NULL buf, and a bufsize of 0 will cause the entire string value to be written to buf,
      probably overrunning the length of the buffer.</p>
    <p>A exploit has not been reported and it may be difficult but the following is suggested:</p>
    <ul>
      <li>All users of LTS Node.js versions should update to the versions announced in this security post.
	This will address the issue for any non pre-built add-on.</li>
      <li>Maintainers who support EOL Node.js versions and/or build against a version of Node.js that did not
	support N-API internally should update to use the new versions of node-addon-api 1.x and 2.x that
	will be released soon after this announcement.</li>
    </ul>
    <h1>ICU-20958 Prevent SEGV_MAPERR in append (High) (CVE-2020-10531)</h1>
    <p>An issue was discovered in International Components for Unicode (ICU) for C/C++ through 66.1. An
      integer overflow, leading to a heap-based buffer overflow, exists in the UnicodeString::doAppend()
      function in common/unistr.cpp.</p>
    <p>Fix was applied to 10.x in an abundance of caution, even though there is no known way to trigger the
      overflow in 10.x.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://nodejs.org/en/blog/vulnerability/june-2020-security-releases/</url>
      <cvename>CVE-2020-8174</cvename>
      <cvename>CVE-2020-8172</cvename>
      <cvename>CVE-2020-10531</cvename>
      <cvename>CVE-2020-11080</cvename>
    </references>
    <dates>
      <discovery>2020-06-02</discovery>
      <entry>2020-06-12</entry>
    </dates>
  </vuln>

  <vuln vid="045e46e8-abe6-11ea-99cb-10bf48e1088e">
    <topic>tcpreplay -- Multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>tcpreplay</name>
	<range><lt>4.3.2</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>fklassen on Github reports:</p>
	<blockquote cite="https://github.com/appneta/tcpreplay/releases/tag/v4.3.2">
	  <p>This release fixes the following security issues:</p>
	  <ul>
	    <li>memory access in do_checksum()</li>
	    <li>NULL pointer dereference get_layer4_v6()</li>
	    <li>NULL pointer dereference get_ipv6_l4proto()</li>
	  </ul>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://github.com/appneta/tcpreplay/releases/tag/v4.3.2</url>
      <cvename>CVE-2019-8381</cvename>
      <cvename>CVE-2019-8376</cvename>
      <cvename>CVE-2019-8377</cvename>
    </references>
    <dates>
      <discovery>2019-03-12</discovery>
      <entry>2020-06-11</entry>
    </dates>
  </vuln>

  <vuln vid="10a24ce0-ab68-11ea-b9b8-641c67a117d8">
    <topic>znc -- Authenticated users can trigger an application crash</topic>
    <affects>
      <package>
	<name>znc</name>
	<range><ge>1.8.0</ge><lt>1.8.1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Mitre reports:</p>
	<blockquote cite="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-13775">
	  <p>ZNC 1.8.0 up to 1.8.1-rc1 allows attackers to trigger an application
	    crash (with a NULL pointer dereference) if echo-message is not enabled
	    and there is no network.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2020-13775</cvename>
      <url>https://wiki.znc.in/ChangeLog/1.8.1</url>
    </references>
    <dates>
      <discovery>2020-06-02</discovery>
      <entry>2020-06-10</entry>
    </dates>
  </vuln>

  <vuln vid="2a3588b4-ab12-11ea-a051-001b217b3468">
    <topic>NPM -- Multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>npm</name>
	<range><lt>6.13.4</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>NPM reports:</p>
	<blockquote cite="https://nodejs.org/en/blog/vulnerability/december-2019-security-releases/">
	  <p>Global node_modules Binary Overwrite</p>
	  <p>Symlink reference outside of node_modules</p>
	  <p>Arbitrary File Write</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://nodejs.org/en/blog/vulnerability/december-2019-security-releases/</url>
      <cvename>CVE-2019-16775</cvename>
      <cvename>CVE-2019-16776</cvename>
      <cvename>CVE-2019-16777</cvename>
    </references>
    <dates>
      <discovery>2019-12-18</discovery>
      <entry>2020-06-10</entry>
    </dates>
  </vuln>

  <vuln vid="329ecd60-aaf7-11ea-8659-10bf48e1088e">
    <topic>libadplug -- Various vulnerabilities</topic>
    <affects>
      <package>
	<name>libadplug</name>
	<range><lt>2.3.3</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Malvineous on Github reports:</p>
	<blockquote cite="https://github.com/adplug/adplug/releases/tag/adplug-2.3.3">
	  <p>This release fixes the following security issues:</p>
	  <ul>
	    <li>buffer overflow in .bmf</li>
	    <li>buffer overflow in .dtm</li>
	    <li>buffer overflow in .mkj</li>
	    <li>buffer overflow in .a2m</li>
	    <li>buffer overflow in .rad</li>
	    <li>buffer overflow in .mtk</li>
	    <li>double free and OOB reads in .u6m</li>
	  </ul>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://github.com/adplug/adplug/releases/tag/adplug-2.3.3</url>
      <cvename>CVE-2019-14690</cvename>
      <cvename>CVE-2019-14691</cvename>
      <cvename>CVE-2019-14692</cvename>
      <cvename>CVE-2019-14732</cvename>
      <cvename>CVE-2019-14733</cvename>
      <cvename>CVE-2019-14734</cvename>
      <cvename>CVE-2019-15151</cvename>
    </references>
    <dates>
      <discovery>2020-06-08</discovery>
      <entry>2020-06-10</entry>
    </dates>
  </vuln>

  <vuln vid="9f7ae7ea-da93-4f86-b257-ba76707f6d5d">
    <topic>zeek -- Various vulnerabilities</topic>
    <affects>
      <package>
	<name>zeek</name>
	<range><lt>3.0.7</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Jon Siwek of Corelight reports:</p>
	<blockquote cite="https://raw.githubusercontent.com/zeek/zeek/v3.0.7/NEWS">
	  <p>This release fixes the following security issues:</p>
	  <ul>
	  <li>
	  Fix potential stack overflow in NVT analyzer</li>
	  <li>
	  Fix NVT analyzer memory leak from multiple telnet authn name options</li>
	  <li>
	  Fix multiple content-transfer-encoding headers causing a memory leak</li>
	  <li>
	  Fix potential leak of Analyzers added to tree during Analyzer::Done</li>
	  <li>
	  Prevent IP fragment reassembly on packets without minimal IP header</li>
	  </ul>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://raw.githubusercontent.com/zeek/zeek/v3.0.7/NEWS</url>
    </references>
    <dates>
      <discovery>2020-05-04</discovery>
      <entry>2020-06-10</entry>
    </dates>
  </vuln>

  <vuln vid="196b31b8-aa9a-11ea-a59a-6451062f0f7a">
    <topic>Flash Player -- arbitrary code execution</topic>
    <affects>
      <package>
	<name>linux-flashplayer</name>
	<range><lt>32.0.0.387</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Adobe reports:</p>
	<blockquote cite="https://helpx.adobe.com/security/products/flash-player/apsb20-30.html">
	  <ul>
	    <li>This update resolves a use-after-free vulnerability that
	      could lead to arbitrary code execution (CVE-2020-9633).</li>
	  </ul>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2020-9633</cvename>
      <url>https://helpx.adobe.com/security/products/flash-player/apsb20-30.html</url>
    </references>
    <dates>
      <discovery>2020-06-09</discovery>
      <entry>2020-06-09</entry>
    </dates>
  </vuln>

  <vuln vid="32c92a75-aa71-11ea-92ab-00163e433440">
    <topic>FreeBSD -- USB HID descriptor parsing error</topic>
    <affects>
      <package>
	<name>FreeBSD-kernel</name>
	<range><ge>12.1</ge><lt>12.1_6</lt></range>
	<range><ge>11.3</ge><lt>11.3_10</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<h1>Problem Description:</h1>
	<p>If the push/pop level of the USB HID state is not restored within
	the processing of the same HID item, an invalid memory location may be
	used for subsequent HID item processing.</p>
	<h1>Impact:</h1>
	<p>An attacker with physical access to a USB port may be able to use a
	specially crafted USB device to gain kernel or user-space code execution.</p>
      </body>
    </description>
    <references>
      <cvename>CVE-2020-7456</cvename>
      <freebsdsa>SA-20:17.usb</freebsdsa>
    </references>
    <dates>
      <discovery>2020-06-03</discovery>
      <entry>2020-06-09</entry>
    </dates>
  </vuln>

  <vuln vid="669f3fe8-a07a-11ea-b83e-f0def1f5c5a2">
    <topic>FreeRDP -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>freerdp</name>
	<range><lt>2.1.1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The FreeRDP changelog reports 14 CVEs addressed after 2.0.0-rc4</p>
      </body>
    </description>
    <references>
      <url>https://github.com/FreeRDP/FreeRDP/blob/2.1.1/ChangeLog</url>
      <cvename>CVE-2020-11521</cvename>
      <cvename>CVE-2020-11522</cvename>
      <cvename>CVE-2020-11523</cvename>
      <cvename>CVE-2020-11524</cvename>
      <cvename>CVE-2020-11525</cvename>
      <cvename>CVE-2020-11526</cvename>
      <cvename>CVE-2020-11039</cvename>
      <cvename>CVE-2020-11038</cvename>
      <cvename>CVE-2020-11043</cvename>
      <cvename>CVE-2020-11040</cvename>
      <cvename>CVE-2020-11041</cvename>
      <cvename>CVE-2020-11019</cvename>
      <cvename>CVE-2020-11017</cvename>
      <cvename>CVE-2020-11018</cvename>
      </references>
    <dates>
      <discovery>2020-04-10</discovery>
      <entry>2020-05-28</entry>
    </dates>
  </vuln>

  <vuln vid="a2caf7bd-a719-11ea-a857-e09467587c17">
    <topic>chromium -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>chromium</name>
	<range><lt>83.0.4103.97</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Chrome Releases reports:</p>
	<blockquote cite="https://chromereleases.googleblog.com/2020/06/stable-channel-update-for-desktop.html">
	  <p>This update includes 5 security fixes. Below, we highlight fixes
	    that were contributed by external researchers.</p>
	  <ul>
	    <li>[1082105] High CVE-2020-6493: Use after free in
	      WebAuthentication. Reported by Anonymous on 2020-05-13</li>
	    <li>[1083972] High CVE-2020-6494: Incorrect security UI in payments.
	      Reported by Juho Nurminen on 2020-05-18</li>
	    <li>[1072116] High CVE-2020-6495: Insufficient policy enforcement in
	      developer tools. Reported by David Erceg on 2020-04-18</li>
	    <li>[1085990] High CVE-2020-6496: Use after free in payments.
	      Reported by Khalil Zhani on 2020-05-24</li>
	  </ul>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2020-6493</cvename>
      <cvename>CVE-2020-6494</cvename>
      <cvename>CVE-2020-6495</cvename>
      <cvename>CVE-2020-6496</cvename>
      <url>https://chromereleases.googleblog.com/2020/06/stable-channel-update-for-desktop.html</url>
    </references>
    <dates>
      <discovery>2020-06-03</discovery>
      <entry>2020-06-05</entry>
    </dates>
  </vuln>

  <vuln vid="40bfab16-a68b-11ea-9ea5-001b217b3468">
    <topic>Gitlab -- Multiple Vulnerabilities</topic>
    <affects>
      <package>
	<name>gitlab-ce</name>
	<range><ge>13.0.0</ge><lt>13.0.4</lt></range>
	<range><ge>12.10.0</ge><lt>12.10.9</lt></range>
	<range><ge>10.6.0</ge><lt>12.9.9</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Gitlab reports:</p>
	<blockquote cite="https://about.gitlab.com/releases/2020/06/03/critical-security-release-13-0-4-released/">
	  <p>CI Token Access Control</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://about.gitlab.com/releases/2020/06/03/critical-security-release-13-0-4-released/</url>
    </references>
    <dates>
      <discovery>2020-06-03</discovery>
      <entry>2020-06-04</entry>
    </dates>
  </vuln>

  <vuln vid="597d02ce-a66c-11ea-af32-080027846a02">
    <topic>Django -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>py36-django22</name>
	<name>py37-django22</name>
	<name>py38-django22</name>
	<range><lt>2.2.13</lt></range>
      </package>
      <package>
	<name>py36-django30</name>
	<name>py37-django30</name>
	<name>py38-django30</name>
	<range><lt>3.0.7</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Django security release reports:</p>
	<blockquote cite="https://www.djangoproject.com/weblog/2020/jun/03/security-releases/">
	  <p>CVE-2020-13254: Potential data leakage via malformed memcached keys</p>
	  <p>In cases where a memcached backend does not perform key validation, passing
	  malformed cache keys could result in a key collision, and potential data leakage.
	  In order to avoid this vulnerability, key validation is added to the memcached
	  cache backends.</p>
	  <p>CVE-2020-13596: Possible XSS via admin ForeignKeyRawIdWidget</p>
	  <p>Query parameters for the admin ForeignKeyRawIdWidget were not properly URL
	  encoded, posing an XSS attack vector. ForeignKeyRawIdWidget now ensures query
	  parameters are correctly URL encoded.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://www.djangoproject.com/weblog/2020/jun/03/security-releases/</url>
      <cvename>CVE-2020-13254</cvename>
      <cvename>CVE-2020-13596</cvename>
    </references>
    <dates>
      <discovery>2020-06-01</discovery>
      <entry>2020-06-04</entry>
    </dates>
  </vuln>

  <vuln vid="ced2d47e-8469-11ea-a283-b42e99a1b9c3">
    <topic>malicious URLs may present credentials to wrong server</topic>
    <affects>
      <package>
	<name>git</name>
	<range><ge>2.26.0</ge><lt>2.26.1</lt></range>
	<range><ge>2.25.0</ge><lt>2.25.3</lt></range>
	<range><ge>2.24.0</ge><lt>2.24.2</lt></range>
	<range><ge>2.23.0</ge><lt>2.23.2</lt></range>
	<range><ge>2.22.0</ge><lt>2.22.3</lt></range>
	<range><ge>2.21.0</ge><lt>2.21.2</lt></range>
	<range><ge>2.20.0</ge><lt>2.20.3</lt></range>
	<range><ge>2.19.0</ge><lt>2.19.4</lt></range>
	<range><ge>2.18.0</ge><lt>2.18.3</lt></range>
	<range><ge>0</ge><lt>2.17.4</lt></range>
      </package>
      <package>
	<name>git-lite</name>
	<range><ge>2.26.0</ge><lt>2.26.1</lt></range>
	<range><ge>2.25.0</ge><lt>2.25.3</lt></range>
	<range><ge>2.24.0</ge><lt>2.24.2</lt></range>
	<range><ge>2.23.0</ge><lt>2.23.2</lt></range>
	<range><ge>2.22.0</ge><lt>2.22.3</lt></range>
	<range><ge>2.21.0</ge><lt>2.21.2</lt></range>
	<range><ge>2.20.0</ge><lt>2.20.3</lt></range>
	<range><ge>2.19.0</ge><lt>2.19.4</lt></range>
	<range><ge>2.18.0</ge><lt>2.18.3</lt></range>
	<range><ge>0</ge><lt>2.17.4</lt></range>
      </package>
      <package>
	<name>git-gui</name>
	<range><ge>2.26.0</ge><lt>2.26.1</lt></range>
	<range><ge>2.25.0</ge><lt>2.25.3</lt></range>
	<range><ge>2.24.0</ge><lt>2.24.2</lt></range>
	<range><ge>2.23.0</ge><lt>2.23.2</lt></range>
	<range><ge>2.22.0</ge><lt>2.22.3</lt></range>
	<range><ge>2.21.0</ge><lt>2.21.2</lt></range>
	<range><ge>2.20.0</ge><lt>2.20.3</lt></range>
	<range><ge>2.19.0</ge><lt>2.19.4</lt></range>
	<range><ge>2.18.0</ge><lt>2.18.3</lt></range>
	<range><ge>0</ge><lt>2.17.4</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>git security advisory reports:</p>
	<blockquote cite="https://github.com/git/git/security/advisories/GHSA-qm7j-c969-7j4q">
	  <p>Git uses external "credential helper" programs to store and retrieve passwords or
	  other credentials from secure storage provided by the operating system.
	  Specially-crafted URLs that contain an encoded newline can inject unintended values
	  into the credential helper protocol stream, causing the credential helper to retrieve
	  the password for one server for an HTTP request being made to another
	  server, resulting in credentials for the former being sent to the
	  latter.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://github.com/git/git/security/advisories/GHSA-qm7j-c969-7j4q</url>
      <cvename>CVE-2020-5260</cvename>
    </references>
    <dates>
      <discovery>2020-04-14</discovery>
      <entry>2020-04-22</entry>
    </dates>
  </vuln>

  <vuln vid="67765237-8470-11ea-a283-b42e99a1b9c3">
    <topic>malicious URLs can cause git to send a stored credential to wrong server</topic>
    <affects>
      <package>
	<name>git</name>
	<range><ge>2.26.0</ge><lt>2.26.2</lt></range>
	<range><ge>2.25.0</ge><lt>2.25.4</lt></range>
	<range><ge>2.24.0</ge><lt>2.24.3</lt></range>
	<range><ge>2.23.0</ge><lt>2.23.3</lt></range>
	<range><ge>2.22.0</ge><lt>2.22.4</lt></range>
	<range><ge>2.21.0</ge><lt>2.21.3</lt></range>
	<range><ge>2.20.0</ge><lt>2.20.4</lt></range>
	<range><ge>2.19.0</ge><lt>2.19.5</lt></range>
	<range><ge>2.18.0</ge><lt>2.18.4</lt></range>
	<range><ge>0</ge><lt>2.17.5</lt></range>
      </package>
      <package>
	<name>git-lite</name>
	<range><ge>2.26.0</ge><lt>2.26.2</lt></range>
	<range><ge>2.25.0</ge><lt>2.25.4</lt></range>
	<range><ge>2.24.0</ge><lt>2.24.3</lt></range>
	<range><ge>2.23.0</ge><lt>2.23.3</lt></range>
	<range><ge>2.22.0</ge><lt>2.22.4</lt></range>
	<range><ge>2.21.0</ge><lt>2.21.3</lt></range>
	<range><ge>2.20.0</ge><lt>2.20.4</lt></range>
	<range><ge>2.19.0</ge><lt>2.19.5</lt></range>
	<range><ge>2.18.0</ge><lt>2.18.4</lt></range>
	<range><ge>0</ge><lt>2.17.5</lt></range>
      </package>
      <package>
	<name>git-gui</name>
	<range><ge>2.26.0</ge><lt>2.26.2</lt></range>
	<range><ge>2.25.0</ge><lt>2.25.4</lt></range>
	<range><ge>2.24.0</ge><lt>2.24.3</lt></range>
	<range><ge>2.23.0</ge><lt>2.23.3</lt></range>
	<range><ge>2.22.0</ge><lt>2.22.4</lt></range>
	<range><ge>2.21.0</ge><lt>2.21.3</lt></range>
	<range><ge>2.20.0</ge><lt>2.20.4</lt></range>
	<range><ge>2.19.0</ge><lt>2.19.5</lt></range>
	<range><ge>2.18.0</ge><lt>2.18.4</lt></range>
	<range><ge>0</ge><lt>2.17.5</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>git security advisory reports:</p>
	<blockquote cite="https://github.com/git/git/security/advisories/GHSA-hjc9-x69f-jqj7">
	  <p>Git uses external "credential helper" programs to store and retrieve passwords or
	  other credentials from secure storage provided by the operating system. Specially-crafted
	  URLs that are considered illegal as of the recently published Git versions can cause Git
	  to send a "blank" pattern to helpers, missing hostname and protocol fields. Many helpers
	  will interpret this as matching any URL, and will return some unspecified stored password,
	  leaking the password to an attacker's server.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://github.com/git/git/security/advisories/GHSA-hjc9-x69f-jqj7</url>
      <cvename>CVE-2020-11008</cvename>
    </references>
    <dates>
      <discovery>2020-04-20</discovery>
      <entry>2020-04-22</entry>
    </dates>
  </vuln>

  <vuln vid="ef5b4f5f-a658-11ea-80d7-001cc0382b2f">
    <topic>GnuTLS -- flaw in TLS session ticket key construction</topic>
    <affects>
      <package>
	<name>gnutls</name>
	<range><lt>3.6.14</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The GnuTLS project reports:</p>
	<blockquote cite="https://gnutls.org/security-new.html#GNUTLS-SA-2020-06-03">
	  <p>It was found that GnuTLS 3.6.4 introduced a regression in the TLS
	    protocol implementation. This caused the TLS server to not securely
	    construct a session ticket encryption key considering the
	    application supplied secret, allowing a MitM attacker to bypass
	    authentication in TLS 1.3 and recover previous conversations in TLS
	    1.2.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://gnutls.org/security-new.html#GNUTLS-SA-2020-06-03</url>
      <cvename>CVE-2020-13777</cvename>
    </references>
    <dates>
      <discovery>2020-06-03</discovery>
      <entry>2020-06-04</entry>
    </dates>
  </vuln>

  <vuln vid="ca8327f7-a5a5-11ea-a860-08002728f74c">
    <topic>websocket-extensions -- ReDoS vulnerability</topic>
    <affects>
      <package>
	<name>rubygem-websocket-extensions</name>
	<range><lt>0.1.5</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Changelog:</p>
	<blockquote cite="https://github.com/faye/websocket-extensions-ruby/blob/master/CHANGELOG.md#015--2020-06-02">
	  <p>Remove a ReDoS vulnerability in the header parser (CVE-2020-7663)</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://github.com/faye/websocket-extensions-ruby/blob/master/CHANGELOG.md</url>
      <url>https://github.com/faye/websocket-extensions-ruby/commit/aa156a439da681361ed6f53f1a8131892418838b</url>
      <cvename>CVE-2020-7663</cvename>
    </references>
    <dates>
      <discovery>2020-06-02</discovery>
      <entry>2020-06-03</entry>
    </dates>
  </vuln>

  <vuln vid="4bb56d2f-a5b0-11ea-a860-08002728f74c">
    <topic>nghttp2 -- DoS vulnerability</topic>
    <affects>
      <package>
	<name>nghttp2</name>
	<name>libnghttp2</name>
	<range><lt>1.41.0</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>nghttp2 security advisories:</p>
	<blockquote cite="https://github.com/nghttp2/nghttp2/security/advisories/GHSA-q5wr-xfw9-q7xr">
	  <p>The overly large HTTP/2 SETTINGS frame payload causes denial of service.</p>
	  <p>The proof of concept attack involves a malicious client constructing a
	    SETTINGS frame with a length of 14,400 bytes (2400 individual settings
	    entries) over and over again. The attack causes the CPU to spike at 100%.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://github.com/nghttp2/nghttp2/security/advisories/GHSA-q5wr-xfw9-q7xr</url>
      <cvename>CVE-2020-11080</cvename>
    </references>
    <dates>
      <discovery>2020-06-02</discovery>
      <entry>2020-06-03</entry>
    </dates>
  </vuln>

  <vuln vid="1650cee2-a320-11ea-a090-08002734b9ed">
    <topic>gitea -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>gitea</name>
	<range><lt>1.11.6</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The Gitea Team reports for release 1.11.6:</p>
	<blockquote cite="https://github.com/go-gitea/gitea/releases/tag/v1.11.6">
	  <ul>
	    <li>Fix missing authorization check on pull for public repos of private/limited org (#11656) (#11683)</li>
	    <li>Use session for retrieving org teams (#11438) (#11439)</li>
	  </ul>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://github.com/go-gitea/gitea/releases/tag/v1.11.6</url>
      <freebsdpr>ports/246892</freebsdpr>
    </references>
    <dates>
      <discovery>2020-03-01</discovery>
      <entry>2020-05-31</entry>
    </dates>
  </vuln>

  <vuln vid="4e6875a2-a126-11ea-b385-08002728f74c">
    <topic>kaminari -- potential XSS vulnerability</topic>
    <affects>
      <package>
	<name>rubygem-kaminari-core</name>
	<range><lt>1.2.1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Kaminari Security Advisories:</p>
	<blockquote cite="https://github.com/kaminari/kaminari/security/advisories/GHSA-r5jw-62xg-j433">
	  <p>There was a vulnerability in versions of Kaminari that would allow an
	    attacker to inject arbitrary code into pages with pagination links.</p>
	  <p>The 1.2.1 gem including the patch has already been released.</p>
	  <p>All past released versions are affected by this vulnerability.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://github.com/kaminari/kaminari/security/advisories/GHSA-r5jw-62xg-j433</url>
      <url>https://github.com/kaminari/kaminari/blob/master/CHANGELOG.md#121</url>
      <url>https://github.com/kaminari/kaminari/pull/1020</url>
      <cvename>CVE-2020-11082</cvename>
    </references>
    <dates>
      <discovery>2020-04-22</discovery>
      <entry>2020-05-28</entry>
    </dates>
  </vuln>

  <vuln vid="28481349-7e20-4f80-ae1e-e6bf48d4f17c">
    <topic>Sane -- Multiple Vulnerabilities</topic>
    <affects>
      <package>
	<name>sane-backends</name>
	<range><lt>1.0.30</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The Sane Project reports:</p>
	<blockquote cite="https://gitlab.com/sane-project/backends/-/releases/1.0.30">
	  <p>epson2: fixes CVE-2020-12867 (GHSL-2020-075) and several memory management issues found while addressing that CVE</p>
	  <p>epsonds: addresses out-of-bound memory access issues to fix CVE-2020-12862 (GHSL-2020-082) and CVE-2020-12863 (GHSL-2020-083), addresses a buffer overflow fixing CVE-2020-12865 (GHSL-2020-084) and disables network autodiscovery to mitigate CVE-2020-12866 (GHSL-2020-079), CVE-2020-12861 (GHSL-2020-080) and CVE-2020-12864 (GHSL-2020-081). Note that this backend does not support network scanners to begin with.</p>
	  <p>magicolor: fixes a floating point exception and uninitialized data read</p>
	  <p>fixes an overflow in sanei_tcp_read()</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://gitlab.com/sane-project/backends/-/releases/1.0.30</url>
      <cvename>CVE-2020-12861</cvename>
      <cvename>CVE-2020-12862</cvename>
      <cvename>CVE-2020-12863</cvename>
      <cvename>CVE-2020-12864</cvename>
      <cvename>CVE-2020-12865</cvename>
      <cvename>CVE-2020-12866</cvename>
      <cvename>CVE-2020-12867</cvename>
    </references>
    <dates>
      <discovery>2020-05-17</discovery>
      <entry>2020-05-28</entry>
    </dates>
  </vuln>

  <vuln vid="69cf62a8-a0aa-11ea-9ea5-001b217b3468">
    <topic>Gitlab -- Multiple Vulnerabilities</topic>
    <affects>
      <package>
	<name>gitlab-ce</name>
	<range><ge>13.0.0</ge><lt>13.0.1</lt></range>
	<range><ge>12.10.0</ge><lt>12.10.7</lt></range>
	<range><ge>12.9.0</ge><lt>12.9.8</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Gitlab reports:</p>
	<blockquote cite="https://about.gitlab.com/releases/2020/05/27/security-release-13-0-1-released/">
	  <p>User Email Verification Bypass</p>
	  <p>OAuth Flow Missing Email Verification Checks</p>
	  <p>Notification Email Verification Bypass</p>
	  <p>Undisclosed Vulnerability on a Third-Party Rendering Engine</p>
	  <p>Group Sign-Up Restriction Bypass</p>
	  <p>Mirror Project Owner Impersonation</p>
	  <p>Missing Permission Check on Fork Relation Creation</p>
	  <p>Cross-Site Scripting in Repository Files API</p>
	  <p>Kubernetes Cluster Token Disclosure</p>
	  <p>Object Storage File Enumeration</p>
	  <p>Insecure Authorization Check on Project Deploy Keys</p>
	  <p>Cross-Site Scripting on Metrics Dashboard</p>
	  <p>Denial of Service on Custom Dashboards</p>
	  <p>Client-Side Code Injection through Mermaid Markup</p>
	  <p>Cross-Site Scripting on Static Site Editor</p>
	  <p>Disclosure of Amazon EKS Credentials</p>
	  <p>Denial of Service on Workhorse</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://about.gitlab.com/releases/2020/05/27/security-release-13-0-1-released/</url>
    </references>
    <dates>
      <discovery>2020-05-27</discovery>
      <entry>2020-05-28</entry>
    </dates>
  </vuln>

  <vuln vid="9908a1cc-35ad-424d-be0b-7e56abd5931a">
    <topic>sympa -- Denial of service caused by malformed CSRF token</topic>
    <affects>
      <package>
	<name>sympa</name>
	<range><lt>6.2.54</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Javier Moreno discovered a vulnerability in Sympa web
	   interface that can cause denial of service (DoS) attack.</p>
	<p>By submitting requests with malformed parameters, this
	   flaw allows to create junk files in Sympa's directory
	   for temporary files. And particularly by tampering token
	   to prevent CSRF, it allows to originate exessive
	   notification messages to listmasters.</p>
      </body>
    </description>
    <references>
      <cvename>CVE-2020-9369</cvename>
      <url>https://sympa-community.github.io/security/2020-001.html</url>
    </references>
    <dates>
      <discovery>2020-02-24</discovery>
      <entry>2020-05-22</entry>
    </dates>
  </vuln>

  <vuln vid="61bc44ce-9f5a-11ea-aff3-f8b156c2bfe9">
    <topic>sympa - Security flaws in setuid wrappers</topic>
    <affects>
      <package>
	<name>sympa</name>
	<range><lt>6.2.56</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>A vulnerability has been discovered in Sympa web interface
	by which attacker can execute arbitrary code with root privileges.
	Sympa uses two sorts of setuid wrappers:</p>
	<ul>
	  <li>FastCGI wrappers</li>
	  <li>newaliases wrapper</li>
	</ul>
	<p>The FastCGI wrappers wwsympa-wrapper.fcgi and
	sympa_soap_server-wrapper.fcgi were used to make the web
	interface running under privileges of a dedicated user.</p>
	<p>The newaliases wrapper (sympa_newaliases-wrapper) allows
	Sympa to update the alias database with root privileges.</p>
	<p>Since these setuid wrappers did not clear environment variables,
	if environment variables like PERL5LIB were injected,
	forged code might be loaded and executed under privileges of setuid-ed
	users.</p>
      </body>
    </description>
    <references>
      <url>https://sympa-community.github.io/security/2020-002.html</url>
    </references>
    <dates>
      <discovery>2020-05-24</discovery>
      <entry>2020-05-26</entry>
    </dates>
  </vuln>

  <vuln vid="f9c5a410-9b4e-11ea-ac3f-6805ca2fa271">
    <topic>powerdns-recursor -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>powerdns-recursor</name>
	<range><ge>4.3.0</ge><lt>4.3.1</lt></range>
	<range><ge>4.2.0</ge><lt>4.2.2</lt></range>
	<range><ge>4.1.0</ge><lt>4.1.16</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>PowerDNS Team reports:</p>
	<blockquote cite="https://doc.powerdns.com/recursor/changelog/4.3.html#change-4.3.1">
	  <p>CVE-2020-10995: An issue in the DNS protocol has been found that allow malicious parties to use
	   recursive DNS services to attack third party authoritative name servers. The attack uses a crafted
	   reply by an authoritative name server to amplify the resulting traffic between the recursive and
	   other authoritative name servers. Both types of service can suffer degraded performance as an effect.</p>
	  <p>CVE-2020-12244: An issue has been found in PowerDNS Recursor 4.1.0 through 4.3.0 where records in
	   the answer section of a NXDOMAIN response lacking an SOA were not properly validated in
	   SyncRes::processAnswer. This would allow an attacker in position of man-in-the-middle to send a
	   NXDOMAIN answer for a name that does exist, bypassing DNSSEC validation.</p>
	  <p>CVE-2020-10030: An issue has been found in PowerDNS Authoritative Server allowing an attacker
	   with enough privileges to change the system's hostname to cause disclosure of uninitialized memory
	   content via a stack-based out-of-bounds read. It only occurs on systems where gethostname() does
	   not null-terminate the returned string if the hostname is larger than the supplied buffer. Linux
	   systems are not affected because the buffer is always large enough. OpenBSD systems are not affected
	   because the returned hostname is always null-terminated. Under some conditions this issue can lead
	   to the writing of one null-byte out-of-bounds on the stack, causing a denial of service or possibly
	   arbitrary code execution.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://doc.powerdns.com/recursor/security-advisories/index.html</url>
      <cvename>CVE-2020-10995</cvename>
      <cvename>CVE-2020-12244</cvename>
      <cvename>CVE-2020-10030</cvename>
    </references>
    <dates>
      <discovery>2020-05-19</discovery>
      <entry>2020-05-26</entry>
      <modified>2020-05-29</modified>
    </dates>
  </vuln>

  <vuln vid="38c676bd-9def-11ea-a94c-3065ec8fd3ec">
    <topic>chromium -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>chromium</name>
	<range><lt>83.0.4103.61</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Google Chrome Releases reports:</p>
	<blockquote cite="https://chromereleases.googleblog.com/2020/05/stable-channel-update-for-desktop_19.html">
	  <p>This release includes 38 security fixes, including CVEs
	    CVE-2020-6465 through CVE-2020-6491.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2020-6465</cvename>
      <cvename>CVE-2020-6466</cvename>
      <cvename>CVE-2020-6467</cvename>
      <cvename>CVE-2020-6468</cvename>
      <cvename>CVE-2020-6469</cvename>
      <cvename>CVE-2020-6470</cvename>
      <cvename>CVE-2020-6471</cvename>
      <cvename>CVE-2020-6472</cvename>
      <cvename>CVE-2020-6473</cvename>
      <cvename>CVE-2020-6474</cvename>
      <cvename>CVE-2020-6475</cvename>
      <cvename>CVE-2020-6476</cvename>
      <cvename>CVE-2020-6477</cvename>
      <cvename>CVE-2020-6478</cvename>
      <cvename>CVE-2020-6479</cvename>
      <cvename>CVE-2020-6480</cvename>
      <cvename>CVE-2020-6481</cvename>
      <cvename>CVE-2020-6482</cvename>
      <cvename>CVE-2020-6483</cvename>
      <cvename>CVE-2020-6484</cvename>
      <cvename>CVE-2020-6485</cvename>
      <cvename>CVE-2020-6486</cvename>
      <cvename>CVE-2020-6487</cvename>
      <cvename>CVE-2020-6488</cvename>
      <cvename>CVE-2020-6489</cvename>
      <cvename>CVE-2020-6490</cvename>
      <cvename>CVE-2020-6491</cvename>
      <url>https://chromereleases.googleblog.com/2020/05/stable-channel-update-for-desktop_19.html</url>
    </references>
    <dates>
      <discovery>2020-05-19</discovery>
      <entry>2020-05-24</entry>
    </dates>
  </vuln>

  <vuln vid="436d7f93-9cf0-11ea-82b8-4c72b94353b5">
    <topic>piwigo -- Multible Vulnerabilities</topic>
    <affects>
      <package>
	<name>piwigo</name>
	<range><lt>2.10.2</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Piwigo reports:</p>
	<blockquote cite="https://www.piwigo.org/release-2.10.2">
	  <p>Piwigo 2.10.1 is affected by stored XSS
	    via the Group Name Field to the group_list page.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>http://cve.mitre.org/cgi-bin/cvename.cgi?name=2020-8089</url>
      <cvename>CVE-2020-8089</cvename>
    </references>
    <dates>
      <discovery>2020-02-07</discovery>
      <entry>2020-05-23</entry>
    </dates>
  </vuln>

  <vuln vid="676ca486-9c1e-11ea-8b5e-b42e99a1b9c3">
    <topic>Apache Tomcat Remote Code Execution via session persistence</topic>
    <affects>
      <package>
	<name>tomcat7</name>
	<range><lt>7.0.104</lt></range>
      </package>
      <package>
	<name>tomcat85</name>
	<range><lt>8.5.55</lt></range>
      </package>
      <package>
	<name>tomcat9</name>
	<range><lt>9.0.35</lt></range>
      </package>
      <package>
	<name>tomcat-devel</name>
	<range><lt>10.0.0.M5</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The Apache Software Foundation reports:</p>
	  <p>Under certain circumstances an attacker will be able to trigger remote code execution via deserialization of the file under their control</p>
      </body>
    </description>
    <references>
      <url>http://tomcat.apache.org/security-7.html</url>
      <url>http://tomcat.apache.org/security-8.html</url>
      <url>http://tomcat.apache.org/security-9.html</url>
      <url>http://tomcat.apache.org/security-10.html</url>
      <cvename>CVE-2020-9484</cvename>
    </references>
    <dates>
      <discovery>2020-05-12</discovery>
      <entry>2020-05-22</entry>
    </dates>
  </vuln>

  <vuln vid="a2cb7c31-9c79-11ea-a9c2-d05099c0ae8c">
    <topic>unbound -- mutliple vulnerabilities</topic>
    <affects>
      <package>
	<name>unbound</name>
	<range><lt>1.10.1</lt></range>
      </package>
      <package>
	<name>FreeBSD</name>
	<range><ge>12.1</ge><lt>12.1_7</lt></range>
	<range><ge>11.4</ge><lt>11.4_1</lt></range>
	<range><ge>11.3</ge><lt>11.3_11</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>NLNetLabs reports:</p>
	<blockquote cite="https://lists.nlnetlabs.nl/pipermail/unbound-users/2020-May/006833.html">
	  <p>This release fixes CVE-2020-12662 and CVE-2020-12663.</p>
	  <p>Bug Fixes:</p>
	  <ul>
	    <li>CVE-2020-12662 Unbound can be tricked into
	      amplifying an incoming query into a large
	      number of queries directed to a target.</li>
	    <li>CVE-2020-12663 Malformed answers from
	      upstream name servers can be used to make
	      Unbound unresponsive.</li>
	  </ul>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://lists.nlnetlabs.nl/pipermail/unbound-users/2020-May/006833.html</url>
      <cvename>CVE-2020-12662</cvename>
      <cvename>CVE-2020-12663</cvename>
      <freebsdsa>SA-20:19.unbound</freebsdsa>
    </references>
    <dates>
      <discovery>2020-05-19</discovery>
      <entry>2020-05-22</entry>
      <modified>2020-07-10</modified>
    </dates>
  </vuln>

  <vuln vid="c5ec57a9-9c2b-11ea-82b8-4c72b94353b5">
    <topic>drupal -- Multiple Vulnerabilities</topic>
    <affects>
      <package>
	<name>drupal7</name>
	<range><lt>7.70</lt></range>
      </package>
      <package>
	<name>drupal8</name>
	<range><lt>8.8.6</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Drupal Security Team reports:</p>
	<blockquote cite="https://www.drupal.org/project/drupal/releases/7.70">
	  <p>The jQuery project released version 3.5.0, and as part of that,
	    disclosed two security vulnerabilities that affect all prior versions.
	    As mentioned in the jQuery blog, both are: ... Security issues in
	    jQuerys DOM manipulation methods, as in .html(), .append(), and the others.
	    Security advisories for both of these issues have been published on GitHub.</p>
	  <p>Drupal 7 has an Open Redirect vulnerability.
	    For example, a user could be tricked into visiting a specially crafted link
	    which would redirect them to an arbitrary external URL. The vulnerability is
	    caused by insufficient validation of the destination query parameter in the
	    drupal_goto() function.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://www.drupal.org/sa-core-2020-002</url>
      <url>https://www.drupal.org/sa-core-2020-003</url>
    </references>
    <dates>
      <discovery>2020-05-20</discovery>
      <entry>2020-05-22</entry>
    </dates>
  </vuln>

  <vuln vid="4d11d37e-9a8d-11ea-b9b8-641c67a117d8">
    <topic>Zabbix -- Remote code execution</topic>
    <affects>
      <package>
	<name>zabbix3-server</name>
	<name>zabbix3-proxy</name>
	<range><lt>3.0.31</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Zabbix reports:</p>
	<blockquote cite="https://www.zabbix.com/rn/rn3.0.31">
	  <p>Fixed security vulnerability cve-2020-11800 (remote code execution).
	    (ZBX-17600)</p>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2020-11800</cvename>
      <url>https://www.zabbix.com/rn/rn3.0.31</url>
      <url>https://support.zabbix.com/browse/ZBX-17600</url>
    </references>
    <dates>
      <discovery>2020-04-15</discovery>
      <entry>2020-05-20</entry>
    </dates>
  </vuln>

  <vuln vid="85fca718-99f6-11ea-bf1d-08002728f74c">
    <topic>Rails -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>rubygem-actionpack52</name>
	<name>rubygem-actionview52</name>
	<name>rubygem-activestorage52</name>
	<name>rubygem-activesupport52</name>
	<range><lt>5.2.4.3</lt></range>
      </package>
      <package>
	<name>rubygem-actionpack60</name>
	<name>rubygem-actionview60</name>
	<name>rubygem-activestorage60</name>
	<name>rubygem-activesupport60</name>
	<range><lt>6.0.3.1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Ruby on Rails blog:</p>
	<blockquote cite="https://weblog.rubyonrails.org/2020/5/18/Rails-5-2-4-3-and-6-0-3-1-have-been-released/">
	  <p>Hi everyone! Rails 5.2.4.3 and 6.0.3.1 have been released! These releases contain important security fixes, so please upgrade when you can.</p>
	  <p>Both releases contain the following fixes:</p>
	  <p>CVE-2020-8162: Circumvention of file size limits in ActiveStorage</p>
	  <p>CVE-2020-8164: Possible Strong Parameters Bypass in ActionPack</p>
	  <p>CVE-2020-8165: Potentially unintended unmarshalling of user-provided objects in MemCacheStore and RedisCacheStore</p>
	  <p>CVE-2020-8166: Ability to forge per-form CSRF tokens given a global CSRF token</p>
	  <p>CVE-2020-8167: CSRF Vulnerability in rails-ujs</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://weblog.rubyonrails.org/2020/5/18/Rails-5-2-4-3-and-6-0-3-1-have-been-released/</url>
      <url>https://groups.google.com/forum/#!topic/rubyonrails-security/PjU3946mreQ</url>
      <url>https://groups.google.com/forum/#!topic/rubyonrails-security/f6ioe4sdpbY</url>
      <url>https://groups.google.com/forum/#!topic/rubyonrails-security/bv6fW4S0Y1c</url>
      <url>https://groups.google.com/forum/#!topic/rubyonrails-security/NOjKiGeXUgw</url>
      <url>https://groups.google.com/forum/#!topic/rubyonrails-security/x9DixQDG9a0</url>
      <cvename>CVE-2020-8162</cvename>
      <cvename>CVE-2020-8164</cvename>
      <cvename>CVE-2020-8165</cvename>
      <cvename>CVE-2020-8166</cvename>
      <cvename>CVE-2020-8167</cvename>
    </references>
    <dates>
      <discovery>2020-05-18</discovery>
      <entry>2020-05-19</entry>
    </dates>
  </vuln>

  <vuln vid="37d106a8-15a4-483e-8247-fcb68b16eaf8">
    <topic>Dovecot -- Multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>dovecot</name>
	<range><lt>2.3.10.1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Aki Tuomi reports:</p>
	<blockquote cite="https://dovecot.org/pipermail/dovecot-news/2020-May/000438.html">
	  <p>Vulnerability Details:
	Sending malformed NOOP command causes crash in submission, submission-login or
	lmtp service.

Risk:
	Remote attacker can keep submission-login service down, causing denial of
	service attack. For lmtp the risk is neglible, as lmtp is usually behind a
	trusted MTA.

Steps to reproduce:
	Send ``NOOP EE"FY`` to submission port, or similarly malformed command.</p>
	  <p>Vulnerability Details:

	Sending command followed by sufficient number of newlines triggers a
	use-after-free bug that might crash submission-login, submission or
	lmtp service.

Risk:

	Remote attacker can keep submission-login service down, causing denial
	of service attack. For lmtp the risk is neglible, as lmtp is usually
	behind a trusted MTA.

Steps to reproduce:

	This can be currently reproduced with ASAN or Valgrind. Reliable way to
	crash has not yet been discovered.
	</p>
	<p>Vulnerability Details:
	Sending mail with empty quoted localpart causes submission or lmtp component
	to crash.

Risk:
	Malicious actor can cause denial of service to mail delivery by repeatedly
	sending mails with bad sender or recipient address.

Steps to reproduce:
	Send mail with envelope sender or recipient as &lt;""@example.org&gt;.

Workaround:
	For submission there is no workaround, but triggering the bug requires valid
	credentials.
	For lmtp, one can implement sufficient filtering on MTA level to prevent mails
	  with such addresses from ending up in LMTP delivery.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://dovecot.org/pipermail/dovecot-news/2020-May/000438.html</url>
      <cvename>CVE-2020-10957</cvename>
      <cvename>CVE-2020-10958</cvename>
      <cvename>CVE-2020-10967</cvename>
    </references>
    <dates>
      <discovery>2020-04-02</discovery>
      <entry>2020-05-18</entry>
    </dates>
  </vuln>

  <vuln vid="91ce95d5-cd15-4105-b942-af5ccc7144c1">
    <topic>clamav -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>clamav</name>
	<range><lt>0.102.3,1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Micah Snyder reports:</p>
	<blockquote cite="https://blog.clamav.net/2020/05/clamav-01023-security-patch-released.html">
	  <p>CVE-2020-3327: Fixed a vulnerability in the ARJ archive-parsing module
	     in ClamAV 0.102.2 that could cause a denial-of-service condition.
	     Improper bounds checking of an unsigned variable results in an
	     out-of-bounds read which causes a crash. Special thanks to Daehui Chang
	     and Fady Othman for helping identify the ARJ parsing vulnerability.
	  </p>
	  <p>CVE-2020-3341: Fixed a vulnerability in the PDF-parsing module in ClamAV
	     0.101 - 0.102.2 that could cause a denial-of-service condition. Improper
	     size checking of a buffer used to initialize AES decryption routines
	     results in an out-of-bounds read, which may cause a crash. OSS-Fuzz
	     discovered this vulnerability.
	  </p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://blog.clamav.net/2020/05/clamav-01023-security-patch-released.html</url>
      <cvename>CVE-2020-3327</cvename>
      <cvename>CVE-2020-3341</cvename>
    </references>
    <dates>
      <discovery>2020-05-12</discovery>
      <entry>2020-05-14</entry>
    </dates>
  </vuln>

  <vuln vid="ce6db19b-976e-11ea-93c4-08002728f74c">
    <topic>Rails -- remote code execution vulnerability</topic>
    <affects>
      <package>
	<name>rubygem-actionview4</name>
	<range><lt>4.2.11.2</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Ruby on Rails blog:</p>
	<blockquote cite="https://weblog.rubyonrails.org/2020/5/16/rails-4-2-11-3-has-been-released/">
	  <p>Due to an unfortunate oversight, Rails 4.2.11.2 has a missing constant
	    error. To address this Rails 4.2.11.3 has been released.</p>
	  <p>The original announcement for CVE-2020-8163 has a follow-up message
	    with an updated patch if you’re unable to use the gems.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://weblog.rubyonrails.org/2020/5/16/rails-4-2-11-3-has-been-released/</url>
      <url>https://groups.google.com/forum/#!topic/rubyonrails-security/hWuKcHyoKh0</url>
      <cvename>CVE-2020-8163</cvename>
    </references>
    <dates>
      <discovery>2020-05-15</discovery>
      <entry>2020-05-16</entry>
    </dates>
  </vuln>

  <vuln vid="6bf55af9-973b-11ea-9f2c-38d547003487">
    <topic>salt -- multiple vulnerabilities in salt-master process</topic>
    <affects>
      <package>
	<name>py27-salt</name>
	<name>py32-salt</name>
	<name>py33-salt</name>
	<name>py34-salt</name>
	<name>py35-salt</name>
	<name>py36-salt</name>
	<name>py37-salt</name>
	<name>py38-salt</name>
	<range><lt>2019.2.4</lt></range>
	<range><ge>3000</ge><lt>3000.2</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>F-Secure reports:</p>
	<blockquote cite="https://labs.f-secure.com/advisories/saltstack-authorization-bypass">
	  <h3>CVE-2020-11651 - Authentication bypass vulnerabilities</h3>
	  <p>The ClearFuncs class processes unauthenticated requests and
	    unintentionally exposes the _send_pub() method, which can be used to
	    queue messages directly on the master publish server. Such messages
	    can be used to trigger minions to run arbitrary commands as root.</p>
	  <p>The ClearFuncs class also exposes the method _prep_auth_info(),
	    which returns the "root key" used to authenticate commands from the
	    local root user on the master server. This "root key" can then be
	    used to remotely call administrative commands on the master server.
	    This unintentional exposure provides a remote un-authenticated
	    attacker with root-equivalent access to the salt master.</p>
	  <p/>
	  <h3>CVE-2020-11652 - Directory traversal vulnerabilities</h3>
	  <p>The wheel module contains commands used to read and write files
	    under specific directory paths. The inputs to these functions are
	    concatenated with the target directory and the resulting path is not
	    canonicalized, leading to an escape of the intended path restriction.</p>
	  <p>The get_token() method of the salt.tokens.localfs class (which is
	    exposed to unauthenticated requests by the ClearFuncs class) fails
	    to sanitize the token input parameter which is then used as a
	    filename, allowing insertion of ".." path elements and thus reading
	    of files outside of the intended directory. The only restriction is
	    that the file has to be deserializable by salt.payload.Serial.loads().</p>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2020-11651</cvename>
      <cvename>CVE-2020-11652</cvename>
      <url>https://nvd.nist.gov/vuln/detail/CVE-2020-11651</url>
      <url>https://nvd.nist.gov/vuln/detail/CVE-2020-11652</url>
      <url>https://docs.saltstack.com/en/latest/topics/releases/2019.2.4.html</url>
      <url>https://labs.f-secure.com/advisories/saltstack-authorization-bypass</url>
      <url>https://blog.f-secure.com/new-vulnerabilities-make-exposed-salt-hosts-easy-targets/</url>
      <url>https://www.tenable.com/blog/cve-2020-11651-cve-2020-11652-critical-salt-framework-vulnerabilities-exploited-in-the-wild</url>
    </references>
    <dates>
      <discovery>2020-04-30</discovery>
      <entry>2020-05-16</entry>
    </dates>
  </vuln>

  <vuln vid="abc3ef37-95d4-11ea-9004-25fadb81abf4">
    <topic>json-c -- integer overflow and out-of-bounds write via a large JSON file</topic>
    <affects>
      <package>
	<name>json-c</name>
	<range><lt>0.14</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Tobias Stöckmann reports:</p>
	<blockquote cite="https://github.com/json-c/json-c/pull/592">
	  <p>
	    I have discovered a way to trigger an out of boundary write while
	    parsing a huge json file through a malicious input source. It can be
	    triggered if an attacker has control over the input stream or if a
	    huge load during filesystem operations can be triggered.
	  </p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://github.com/json-c/json-c/pull/592</url>
      <url>https://github.com/json-c/json-c/pull/599</url>
      <cvename>CVE-2020-12762</cvename>
    </references>
    <dates>
      <discovery>2020-05-02</discovery>
      <entry>2020-05-14</entry>
      <modified>2020-05-17</modified>
    </dates>
  </vuln>

  <vuln vid="59fabdf2-9549-11ea-9448-08002728f74c">
    <topic>typo3 -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>typo3-9-php72</name>
	<name>typo3-9-php73</name>
	<name>typo3-9-php74</name>
	<range><lt>9.5.17</lt></range>
      </package>
      <package>
	<name>typo3-10-php72</name>
	<name>typo3-10-php73</name>
	<name>typo3-10-php74</name>
	<range><lt>10.4.2</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Typo3 News:</p>
	<blockquote cite="https://typo3.org/article/typo3-1042-and-9517-security-releases-published">
	  <p>CVE-2020-11063: TYPO3-CORE-SA-2020-001: Information Disclosure in
	    Password Reset</p>
	  <p>It has been discovered that time-based attacks can be used with the
	    password reset functionality for backend users. This allows an attacker
	    to verify whether a backend user account with a given email address
	    exists or not.</p>
	  <p/>
	  <p>CVE-2020-11064: TYPO3-CORE-SA-2020-002: Cross-Site Scripting in Form
	    Engine</p>
	  <p>It has been discovered that HTML placeholder attributes containing
	    data of other database records are vulnerable to cross-site scripting. A
	    valid backend user account is needed to exploit this vulnerability.</p>
	  <p/>
	  <p>CVE-2020-11065: TYPO3-CORE-SA-2020-003: Cross-Site Scripting in Link
	    Handling</p>
	  <p>It has been discovered that link tags generated by typolink
	    functionality are vulnerable to cross-site scripting - properties being
	    assigned as HTML attributes have not been parsed correctly.</p>
	  <p/>
	  <p>CVE-2020-11066: TYPO3-CORE-SA-2020-004: Class destructors causing
	    side-effects when being unserialized</p>
	  <p>Calling unserialize() on malicious user-submitted content can result
	    in the following scenarios:</p>
	  <p>- trigger deletion of arbitrary directory in file system (if writable
	    for web server)</p>
	  <p>- trigger message submission via email using identity of web site
	    (mail relay)</p>
	  <p>Another insecure deserialization vulnerability is required to actually
	    exploit mentioned aspects.</p>
	  <p/>
	  <p>CVE-2020-11067: TYPO3-CORE-SA-2020-005: Insecure Deserialization in
	    Backend User Settings</p>
	  <p>It has been discovered that backend user settings (in $BE_USER-&gt;uc) are
	    vulnerable to insecure deserialization. In combination with
	    vulnerabilities of 3rd party components this can lead to remote code
	    execution. A valid backend user account is needed to exploit this
	    vulnerability.</p>
	  <p/>
	  <p>CVE-2020-11069: TYPO3-CORE-SA-2020-006: Same-Site Request Forgery to
	    Backend User Interface</p>
	  <p>It has been discovered that the backend user interface and install tool
	    are vulnerable to same-site request forgery. A backend user can be
	    tricked into interacting with a malicious resource an attacker
	    previously managed to upload to the web server - scripts are then
	    executed with the privileges of the victims’ user session.</p>
	  <p>In a worst case scenario new admin users can be created which can
	    directly be used by an attacker. The vulnerability is basically a
	    cross-site request forgery (CSRF) triggered by a cross-site scripting
	    vulnerability (XSS) - but happens on the same target host - thus, it’
	    actually a same-site request forgery (SSRF).</p>
	  <p>Malicious payload such as HTML containing JavaScript might be provided
	    by either an authenticated backend user or by a non-authenticated user
	    using a 3rd party extension - e.g. file upload in a contact form with
	    knowing the target location.</p>
	  <p>The attacked victim requires an active and valid backend or install
	    tool user session at the time of the attack to be successful.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://typo3.org/article/typo3-1042-and-9517-security-releases-published</url>
      <url>https://get.typo3.org/release-notes/9.5.17</url>
      <url>https://get.typo3.org/release-notes/10.4.2</url>
      <url>https://typo3.org/security/advisory/typo3-core-sa-2020-001</url>
      <url>https://typo3.org/security/advisory/typo3-core-sa-2020-002</url>
      <url>https://typo3.org/security/advisory/typo3-core-sa-2020-003</url>
      <url>https://typo3.org/security/advisory/typo3-core-sa-2020-004</url>
      <url>https://typo3.org/security/advisory/typo3-core-sa-2020-005</url>
      <url>https://typo3.org/security/advisory/typo3-core-sa-2020-006</url>
      <cvename>CVE-2020-11063</cvename>
      <cvename>CVE-2020-11064</cvename>
      <cvename>CVE-2020-11065</cvename>
      <cvename>CVE-2020-11066</cvename>
      <cvename>CVE-2020-11067</cvename>
      <cvename>CVE-2020-11069</cvename>
    </references>
    <dates>
      <discovery>2020-05-12</discovery>
      <entry>2020-05-13</entry>
    </dates>
  </vuln>

  <vuln vid="0bfcae0b-947f-11ea-92ab-00163e433440">
    <topic>FreeBSD -- Insufficient cryptodev MAC key length check</topic>
    <affects>
      <package>
	<name>FreeBSD-kernel</name>
	<range><ge>12.1</ge><lt>12.1_5</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<h1>Problem Description:</h1>
	<p>Requests to create cryptography sessions using a MAC did not validate the
	user-supplied MAC key length.  The cryptodev module allocates a buffer whose
	size is this user-suppled length.</p>
	<h1>Impact:</h1>
	<p>An unprivileged process can trigger a kernel panic.</p>
      </body>
    </description>
    <references>
      <cvename>CVE-2019-15879</cvename>
      <freebsdsa>SA-20:15.cryptodev</freebsdsa>
    </references>
    <dates>
      <discovery>2020-01-20</discovery>
      <entry>2020-05-12</entry>
    </dates>
  </vuln>

  <vuln vid="9f15c2da-947e-11ea-92ab-00163e433440">
    <topic>FreeBSD -- Use after free in cryptodev module</topic>
    <affects>
      <package>
	<name>FreeBSD-kernel</name>
	<range><ge>12.1</ge><lt>12.1_5</lt></range>
	<range><ge>11.3</ge><lt>11.3_9</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<h1>Problem Description:</h1>
	<p>A race condition permitted a data structure in the kernel to be used
	after it was freed by the cryptodev module.</p>
	<h1>Impact:</h1>
	<p>An unprivileged process can overwrite arbitrary kernel memory.</p>
      </body>
    </description>
    <references>
      <cvename>CVE-2019-15879</cvename>
      <freebsdsa>SA-20:15.cryptodev</freebsdsa>
    </references>
    <dates>
      <discovery>2020-01-20</discovery>
      <entry>2020-05-12</entry>
    </dates>
  </vuln>

  <vuln vid="253486f5-947d-11ea-92ab-00163e433440">
    <topic>FreeBSD -- Improper checking in SCTP-AUTH shared key update</topic>
    <affects>
      <package>
	<name>FreeBSD-kernel</name>
	<range><ge>11.3</ge><lt>11.3_9</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<h1>Problem Description:</h1>
	<p>The SCTP layer does improper checking when an application tries to update
	a shared key.  Therefore an unprivileged local user can trigger a use-after-
	free situation, for example by specific sequences of updating shared keys and
	closing the SCTP association.</p>
	<h1>Impact:</h1>
	<p>Triggering the use-after-free situation may result in unintended kernel
	behaviour including a kernel panic.</p>
      </body>
    </description>
    <references>
      <cvename>CVE-2019-15878</cvename>
      <freebsdsa>SA-20:14.sctp</freebsdsa>
    </references>
    <dates>
      <discovery>2019-09-19</discovery>
      <entry>2020-05-12</entry>
    </dates>
  </vuln>

  <vuln vid="78992249-947c-11ea-92ab-00163e433440">
    <topic>FreeBSD -- Memory disclosure vulnerability in libalias</topic>
    <affects>
      <package>
	<name>FreeBSD-kernel</name>
	<range><ge>12.1</ge><lt>12.1_5</lt></range>
	<range><ge>11.4</ge><lt>11.4_1</lt></range>
	<range><ge>11.3</ge><lt>11.3_9</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<h1>Problem Description:</h1>
	<p>The FTP packet handler in libalias incorrectly calculates some packet
	lengths.  This may result in disclosing small amounts of memory from the
	kernel (for the in-kernel NAT implementation) or from the process space for
	natd (for the userspace implementation).</p>
	<h1>Impact:</h1>
	<p>A malicious attacker could send specially constructed packets that exploit the
	erroneous calculation allowing the attacker to disclose small amount of memory
	either from the kernel (for the in-kernel NAT implementation) or from the
	process space for natd (for the userspace implementation).</p>
      </body>
    </description>
    <references>
      <cvename>CVE-2020-7455</cvename>
      <freebsdsa>SA-20:13.libalias</freebsdsa>
    </references>
    <dates>
      <discovery>2020-05-12</discovery>
      <entry>2020-05-12</entry>
    </dates>
  </vuln>

  <vuln vid="30ce591c-947b-11ea-92ab-00163e433440">
    <topic>FreeBSD -- Insufficient packet length validation in libalias</topic>
    <affects>
      <package>
	<name>FreeBSD-kernel</name>
	<range><ge>12.1</ge><lt>12.1_5</lt></range>
	<range><ge>11.4</ge><lt>11.4_1</lt></range>
	<range><ge>11.3</ge><lt>11.3_9</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<h1>Problem Description:</h1>
	<p>libalias(3) packet handlers do not properly validate the packet length before
	accessing the protocol headers.  As a result, if a libalias(3) module does
	not properly validate the packet length before accessing the protocol header,
	it is possible for an out of bound read or write condition to occur.</p>
	<h1>Impact:</h1>
	<p>A malicious attacker could send specially constructed packets that exploit
	the lack of validation allowing the attacker to read or write memory either
	from the kernel (for the in-kernel NAT implementation) or from the process
	space for natd (for the userspace implementation).</p>
      </body>
    </description>
    <references>
      <cvename>CVE-2020-7454</cvename>
      <freebsdsa>SA-20:12.libalias</freebsdsa>
    </references>
    <dates>
      <discovery>2020-05-12</discovery>
      <entry>2020-05-12</entry>
    </dates>
  </vuln>

  <vuln vid="452d16bb-920d-11ea-9d20-18a6f7016652">
    <topic>qutebrowser -- Reloading page with certificate errors shows a green URL</topic>
    <affects>
      <package>
	<name>qutebrowser</name>
	<range><lt>1.11.1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Qutebrowser developers report:</p>
	<blockquote cite="https://github.com/qutebrowser/qutebrowser/security/advisories/GHSA-4rcq-jv2f-898j">
	  <p>After a certificate error was overridden by the user,
	    qutebrowser displays the URL as yellow (colors.statusbar.url.warn.fg).
	    However, when the affected website was subsequently loaded again,
	    the URL was mistakenly displayed as green (colors.statusbar.url.success_https).
	    While the user already has seen a certificate error prompt at this point
	    (or set content.ssl_strict to false which is not recommended),
	    this could still provide a false sense of security.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://github.com/qutebrowser/qutebrowser/security/advisories/GHSA-4rcq-jv2f-898j</url>
      <url>https://github.com/qutebrowser/qutebrowser/issues/5403</url>
      <cvename>CVE-2020-11054</cvename>
    </references>
    <dates>
      <discovery>2020-05-02</discovery>
      <entry>2020-05-09</entry>
    </dates>
  </vuln>

  <vuln vid="ca595a25-91d8-11ea-b470-080027846a02">
    <topic>Python -- CRLF injection via the host part of the url passed to urlopen()</topic>
    <affects>
      <package>
	<name>python27</name>
	<range><lt>2.7.18</lt></range>
      </package>
      <package>
	<name>python38</name>
	<range><lt>3.8.3</lt></range>
      </package>
      <package>
	<name>python37</name>
	<range><le>3.7.7</le></range>
      </package>
      <package>
	<name>python36</name>
	<range><lt>3.6.10</lt></range>
      </package>
      <package>
	<name>python35</name>
	<range><le>3.5.9_4</le></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Python reports:</p>
	<blockquote cite="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-18348">
	  <p>An issue was discovered in urllib2 in Python 2.x through 2.7.17 and urllib in Python 3.x
	    through 3.8.0. CRLF injection is possible if the attacker controls a url parameter, as
	    demonstrated by the first argument to urllib.request.urlopen with \r\n (specifically in
	    the host component of a URL) followed by an HTTP header.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-18348</url>
      <url>https://bugs.python.org/issue38576</url>
      <cvename>CVE-2019-18348</cvename>
    </references>
    <dates>
      <discovery>2019-10-24</discovery>
      <entry>2020-05-09</entry>
      <modified>2020-06-13</modified>
    </dates>
  </vuln>

  <vuln vid="d222241d-91cc-11ea-82b8-4c72b94353b5">
    <topic>glpi -- stored XSS</topic>
    <affects>
      <package>
	<name>glpi</name>
	<range><lt>9.4.3,1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>MITRE Corporation reports:</p>
	<blockquote cite="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-13239">
	  <p>inc/user.class.php in GLPI before 9.4.3 allows XSS via a user picture.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://github.com/glpi-project/glpi/commit/c2aa7a7cd6af28be3809acc7e7842d2d2008c0fb</url>
      <url>https://www.synacktiv.com/ressources/advisories/GLPI_9.4.0_stored_XSS.pdf</url>
      <url>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-13239</url>
      <cvename>CVE-2019-13239</cvename>
    </references>
    <dates>
      <discovery>2019-02-25</discovery>
      <entry>2020-05-09</entry>
      <modified>2024-04-25</modified>
    </dates>
  </vuln>

  <vuln vid="1a6b7641-aed2-4ba1-96f4-c282d5b09c37">
    <topic>zeek -- Various vulnerabilities</topic>
    <affects>
      <package>
	<name>zeek</name>
	<range><lt>3.0.6</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Jon Siwek of Corelight reports:</p>
	<blockquote cite="https://raw.githubusercontent.com/zeek/zeek/v3.0.6/NEWS">
	  <p>This release fixes the following security issues:</p>
	  <ul>
	  <li>
	  Fix buffer over-read in Ident analyzer </li>
	  <li>
	  Fix SSL scripting error leading to uninitialized field
	  access and memory leak </li>
	  <li>
	  Fix POP3 analyzer global buffer over-read </li>
	  <li>
	  Fix potential stack overflows due to use of
	  Variable-Length-Arrays </li>
	  </ul>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://raw.githubusercontent.com/zeek/zeek/v3.0.6/NEWS</url>
    </references>
    <dates>
      <discovery>2020-05-06</discovery>
      <entry>2020-05-06</entry>
    </dates>
  </vuln>

  <vuln vid="d5fead4f-8efa-11ea-a5c8-08002728f74c">
    <topic>Wagtail -- potential timing attack vulnerability</topic>
    <affects>
      <package>
	<name>py35-wagtail</name>
	<name>py36-wagtail</name>
	<name>py37-wagtail</name>
	<name>py38-wagtail</name>
	<range><lt>2.7.3</lt></range>
	<range><ge>2.8</ge><lt>2.8.2</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Wagtail release notes:</p>
	<blockquote cite="https://docs.wagtail.io/en/latest/releases/2.8.2.html">
	  <p>CVE-2020-11037: Potential timing attack on password-protected private pages</p>
	  <p>This release addresses a potential timing attack on pages or documents
	    that have been protected with a shared password through Wagtail's
	    "Privacy" controls. This password check is performed through a
	    character-by-character string comparison, and so an attacker who is
	    able to measure the time taken by this check to a high degree of
	    accuracy could potentially use timing differences to gain knowledge of
	    the password. (This is understood to be feasible on a local network, but
	    not on the public internet.)</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://docs.wagtail.io/en/latest/releases/2.8.2.html</url>
      <url>https://github.com/wagtail/wagtail/security/advisories/GHSA-jjjr-3jcw-f8v6</url>
      <cvename>CVE-2020-11037</cvename>
    </references>
    <dates>
      <discovery>2020-05-04</discovery>
      <entry>2020-05-05</entry>
    </dates>
  </vuln>

  <vuln vid="88760f4d-8ef7-11ea-a66d-4b2ef158be83">
    <topic>mailman -- arbitrary content injection vulnerability via options or private archive login pages</topic>
    <affects>
      <package>
	<name>mailman</name>
	<range><lt>2.1.30_4</lt></range>
	<range><ge>2.1.31</ge><lt>2.1.33</lt></range>
      </package>
      <package>
	<name>mailman-with-htdig</name>
	<range><lt>2.1.30_4</lt></range>
	<range><ge>2.1.31</ge><lt>2.1.33</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Mark Sapiro reports:</p>
	<blockquote cite="https://bazaar.launchpad.net/~mailman-coders/mailman/2.1/view/1845/NEWS#L8">
	  <p>A content injection vulnerability via the options login page has
	    been discovered and reported by Vishal Singh.
	  </p>
	</blockquote>
	<blockquote cite="https://bugs.launchpad.net/mailman/+bug/1873722">
	  <p>
	    An issue similar to CVE-2018-13796 exists at different endpoint &amp; param. It can lead to a phishing attack.
	  </p>
	</blockquote>
	<blockquote cite="https://bugs.launchpad.net/mailman/+bug/1877379">
	  <p>
	    (added 2020-05-07) This is essentially the same as
	    https://bugs.launchpad.net/mailman/+bug/1873722 except the vector is
	    the private archive login page and the attack only succeeds if the
	    list's roster visibility (private_roster) setting is 'Anyone'.
	  </p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://bazaar.launchpad.net/~mailman-coders/mailman/2.1/view/1845/NEWS#L8</url>
      <url>https://bugs.launchpad.net/mailman/+bug/1873722</url>
      <url>https://bugs.launchpad.net/mailman/+bug/1877379</url>
      <url>https://mail.python.org/archives/list/mailman-developers@python.org/thread/SYBIZ3MNSQZLKN6PVKO7ZKR7QMOBMS45/</url>
      <cvename>CVE-2018-13796</cvename>
    </references>
    <dates>
      <discovery>2020-04-20</discovery>
      <entry>2020-05-07</entry>
    </dates>
  </vuln>

  <vuln vid="cd864f1a-8e5a-11ea-b5b4-641c67a117d8">
    <topic>cacti -- XSS exposure</topic>
    <affects>
      <package>
	<name>cacti</name>
	<range><lt>1.2.12</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Cacti developer reports:</p>
	<blockquote cite="https://sourceforge.net/p/cacti/mailman/message/37000502/">
	  <p>Lack of escaping of color items can lead to XSS exposure.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://sourceforge.net/p/cacti/mailman/message/37000502/</url>
      <url>https://github.com/Cacti/cacti/blob/release/1.2.12/CHANGELOG</url>
      <cvename>CVE-2020-7106</cvename>
      <freebsdpr>ports/246164</freebsdpr>
    </references>
    <dates>
      <discovery>2020-04-16</discovery>
      <entry>2020-05-04</entry>
    </dates>
  </vuln>

  <vuln vid="57c1c2ee-7914-11ea-90bf-0800276545c1">
    <topic>Squid -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>squid</name>
	<range><lt>4.10</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The Squid developers reports:</p>
	<blockquote cite="http://lists.squid-cache.org/pipermail/squid-announce/2020-February/000107.html">
	  <p>Improper Input Validation issues in HTTP Request
	     processing (CVE-2020-8449, CVE-2020-8450).</p>
	  <p>Information Disclosure issue in FTP Gateway
	     (CVE-2019-12528).</p>
	  <p>Buffer Overflow issue in ext_lm_group_acl helper
	    (CVE-2020-8517).</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>http://lists.squid-cache.org/pipermail/squid-announce/2020-February/000107.html</url>
      <url>https://nvd.nist.gov/vuln/detail/CVE-2020-8449</url>
      <url>https://nvd.nist.gov/vuln/detail/CVE-2020-8450</url>
      <url>https://nvd.nist.gov/vuln/detail/CVE-2019-12528</url>
      <url>https://nvd.nist.gov/vuln/detail/CVE-2020-8517</url>
      <cvename>CVE-2020-8449</cvename>
      <cvename>CVE-2020-8450</cvename>
      <cvename>CVE-2019-12528</cvename>
      <cvename>CVE-2020-8517</cvename>
      <freebsdpr>ports/244026</freebsdpr>
    </references>
    <dates>
      <discovery>2020-02-10</discovery>
      <entry>2020-04-07</entry>
    </dates>
   </vuln>

  <vuln vid="d3f3e818-8d10-11ea-8668-e0d55e2a8bf9">
    <topic>taglib -- heap-based buffer over-read via a crafted audio file</topic>
    <affects>
      <package>
	<name>taglib</name>
	<range><lt>1.12.b.1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Webin security lab - dbapp security Ltd reports:</p>
	<blockquote cite="https://seclists.org/fulldisclosure/2018/May/49">
	  <p>The TagLib::Ogg::FLAC::File::scan function in oggflacfile.cpp in TagLib 1.11.1 allows remote attackers to cause information disclosure (heap-based buffer over-read) via a crafted audio file.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://seclists.org/fulldisclosure/2018/May/49</url>
      <cvename>CVE-2018-11439</cvename>
    </references>
    <dates>
      <discovery>2018-05-28</discovery>
      <entry>2020-05-03</entry>
    </dates>
  </vuln>

  <vuln vid="e8483115-8b8e-11ea-bdcf-001b217b3468">
    <topic>Gitlab -- Multiple Vulnerabilities</topic>
    <affects>
      <package>
	<name>gitlab-ce</name>
	<range><ge>12.10.0</ge><lt>12.10.2</lt></range>
	<range><ge>12.9.0</ge><lt>12.9.5</lt></range>
	<range><ge>8.4.0</ge><lt>12.8.10</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Gitlab reports:</p>
	<blockquote cite="https://about.gitlab.com/releases/2020/04/30/security-release-12-10-2-released/">
	  <p>Path Traversal in NuGet Package Registry</p>
	  <p>Workhorse Bypass Leads to File Disclosure</p>
	  <p>OAuth Application Client Secrets Revealed</p>
	  <p>Code Owners Approval Rules Are Not Updated for Existing Merge Requests When Source Branch Changes</p>
	  <p>Code Owners Protection Not Enforced from Web UI</p>
	  <p>Repository Mirror Passwords Exposed To Maintainers</p>
	  <p>Admin Audit Log Page Denial of Service</p>
	  <p>Private Project ID Revealed Through Group API</p>
	  <p>Elasticsearch Credentials Logged to ELK</p>
	  <p>GitHub Personal Access Token Exposed on Integrations Page</p>
	  <p>Update Nokogiri dependency</p>
	  <p>Update OpenSSL Dependency</p>
	  <p>Update git</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://about.gitlab.com/releases/2020/04/30/security-release-12-10-2-released/</url>
      <cvename>CVE-2020-12448</cvename>
      <cvename>CVE-2020-10187</cvename>
      <cvename>CVE-2020-7595</cvename>
      <cvename>CVE-2020-1967</cvename>
      <cvename>CVE-2020-11008</cvename>
    </references>
    <dates>
      <discovery>2020-04-30</discovery>
      <entry>2020-05-01</entry>
    </dates>
  </vuln>

  <vuln vid="4a10902f-8a48-11ea-8668-e0d55e2a8bf9">
    <topic>vlc -- Multiple vulnerabilities fixed in VLC media player</topic>
    <affects>
      <package>
	<name>vlc</name>
	<range><lt>3.0.10,4</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>VideoLAN reports:</p>
	<blockquote cite="https://www.videolan.org/security/sb-vlc309.html">
	  <h3>Details</h3>
	  <p>    A remote user could:</p>
	  <ul>
	    <li>  Create a specifically crafted image file that could trigger an out of bounds read </li>
	    <li> Send a specifically crafter request to the microdns service discovery, potentially triggering various memory management issues</li>
	    </ul>
	<h3>Impact</h3>
      <p>
If successful, a malicious third party could trigger either a crash of VLC or an arbitratry code execution with the privileges of the target user.
	</p><p>
	  While these issues in themselves are most likely to just crash the player, we can't exclude that they could be combined to leak user informations or remotely execute code. ASLR and DEP help reduce the likelyness of code execution, but may be bypassed.</p>
	<p>
	    We have not seen exploits performing code execution through these vulnerabilities</p>
	  <p>CVE-2019-19721 affects VLC 3.0.8 and earlier, and only reads 1 byte out of bound</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://www.videolan.org/security/sb-vlc309.html</url>
    </references>
    <dates>
      <discovery>2020-04-01</discovery>
      <entry>2020-04-29</entry>
    </dates>
  </vuln>

  <vuln vid="3c7911c9-8a29-11ea-8d8c-005056a311d1">
    <topic>samba -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>samba410</name>
	<range><lt>4.10.15</lt></range>
      </package>
      <package>
	<name>samba411</name>
	<range><lt>4.11.8</lt></range>
      </package>
      <package>
	<name>samba412</name>
	<range><lt>4.12.2</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The Samba Team reports:</p>
	<blockquote cite="https://www.samba.org/samba/history/samba-4.12.2.html">
	  <p>CVE-2020-10700</p>
	  <p>A client combining the 'ASQ' and 'Paged Results' LDAP controls can cause a
	     use-after-free in Samba's AD DC LDAP server.</p>
	  <p>CVE-2020-10704</p>
	  <p>A deeply nested filter in an un-authenticated LDAP search can exhaust the
	     LDAP server's stack memory causing a SIGSEGV.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://www.samba.org/samba/history/samba-4.12.2.html</url>
      <cvename>CVE-2020-10700</cvename>
      <cvename>CVE-2020-10704</cvename>
    </references>
    <dates>
      <discovery>2020-04-29</discovery>
      <entry>2020-04-29</entry>
    </dates>
  </vuln>

  <vuln vid="5b6bc863-89dc-11ea-af8b-00155d0a0200">
    <topic>ceph14 -- multiple security issues</topic>
    <affects>
      <package>
	<name>ceph14</name>
	<range><gt>14.1.1</gt><lt>14.2.9</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>RedHat reports:</p>
	<blockquote cite="https://access.redhat.com/security/cve/cve-2020-1759">
	  <p>ceph: secure mode of msgr2 breaks both confidentiality and integrity aspects for long-lived sessions.</p>
	</blockquote>
	<blockquote cite="https://access.redhat.com/security/cve/cve-2020-1760">
	  <p>ceph: header-splitting in RGW GetObject has a possible XSS.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2020-1759</cvename>
      <url>https://www.openwall.com/lists/oss-security/2020/04/07/2</url>
      <cvename>CVE-2020-1760</cvename>
      <url>https://www.openwall.com/lists/oss-security/2020/04/07/1</url>
    </references>
    <dates>
      <discovery>2020-04-07</discovery>
      <entry>2020-04-14</entry>
    </dates>
  </vuln>

  <vuln vid="c7617931-8985-11ea-93ef-b42e99a1b9c3">
    <topic>nested filters leads to stack overflow</topic>
    <affects>
      <package>
	<name>openldap24-server</name>
	<range><lt>2.4.50</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Howard Chu reports:</p>
	<blockquote cite="https://bugs.openldap.org/show_bug.cgi?id=9202">
	  <p>nested filters leads to stack overflow</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://bugs.openldap.org/show_bug.cgi?id=9202</url>
      <cvename>CVE-2020-12243</cvename>
    </references>
    <dates>
      <discovery>2020-04-28</discovery>
      <entry>2020-04-28</entry>
    </dates>
  </vuln>

  <vuln vid="aae8fecf-888e-11ea-9714-08002718de91">
    <topic>py-yaml -- FullLoader (still) exploitable for arbitrary command execution</topic>
    <affects>
      <package>
	<name>py27-yaml</name>
	<name>py35-yaml</name>
	<name>py36-yaml</name>
	<name>py37-yaml</name>
	<name>py38-yaml</name>
	<range><lt>5.3.1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Riccardo Schirone (https://github.com/ret2libc) reports:</p>
	<blockquote cite="https://bugzilla.redhat.com/show_bug.cgi?id=1807367">
	  <p>In FullLoader python/object/new constructor, implemented by
	    construct_python_object_apply, has support for setting the
	    state of a deserialized instance through the set_python_instance_state
	    method.  After setting the state, some operations are performed
	    on the instance to complete its initialization, however it is
	    possible for an attacker to set the instance' state in such a way
	    that arbitrary code is executed by the FullLoader.</p>
	  <p>This patch tries to block such attacks in FullLoader by
	    preventing set_python_instance_state from setting arbitrar
	    properties. It implements a blacklist that includes extend method
	    (called by construct_python_object_apply) and all special
	    methods (e.g. __set__, __setitem__, etc.).</p>
	  <p>Users who need special attributes being set in the state of a
	    deserialized object can still do it through the UnsafeLoader, which
	    however should not be used on untrusted input. Additionally, they can
	    subclass FullLoader and redefine state_blacklist_regexp to include the
	    additional attributes they need, passing the subclassed loader to
	    yaml.load.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://bugzilla.redhat.com/show_bug.cgi?id=1807367</url>
      <url>https://github.com/yaml/pyyaml/pull/386</url>
      <cvename>CVE-2020-1747</cvename>
      <freebsdpr>ports/245937</freebsdpr>
    </references>
    <dates>
      <discovery>2020-03-02</discovery>
      <entry>2020-04-27</entry>
      <modified>2020-04-29</modified>
    </dates>
  </vuln>

  <vuln vid="4c52ec3c-86f3-11ea-b5b4-641c67a117d8">
    <topic>py-bleach -- regular expression denial-of-service</topic>
    <affects>
      <package>
	<name>py27-bleach</name>
	<name>py35-bleach</name>
	<name>py36-bleach</name>
	<name>py37-bleach</name>
	<name>py38-bleach</name>
	<range><lt>3.1.4</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Bleach developers reports:</p>
	<blockquote cite="https://github.com/mozilla/bleach/security/advisories/GHSA-vqhp-cxgc-6wmm">
	  <p>bleach.clean behavior parsing style attributes could result in a
	    regular expression denial of service (ReDoS).</p>
	  <p>Calls to bleach.clean with an allowed tag with an allowed style
	    attribute are vulnerable to ReDoS. For example, bleach.clean(...,
	    attributes={'a': ['style']}).</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://github.com/mozilla/bleach/security/advisories/GHSA-vqhp-cxgc-6wmm</url>
      <url>https://bugzilla.mozilla.org/show_bug.cgi?id=1623633</url>
      <cvename>CVE-2020-6817</cvename>
      <freebsdpr>ports/245943</freebsdpr>
    </references>
    <dates>
      <discovery>2019-03-09</discovery>
      <entry>2020-04-26</entry>
    </dates>
  </vuln>

  <vuln vid="21d59ea3-8559-11ea-a5e2-d4c9ef517024">
    <topic>MySQL Server -- Multiple vulerabilities</topic>
    <affects>
      <package>
	<name>mariadb101-server</name>
	<range><lt>10.1.45</lt></range>
      </package>
      <package>
	<name>mariadb102-server</name>
	<range><lt>10.2.32</lt></range>
      </package>
      <package>
	<name>mariadb103-server</name>
	<range><lt>10.3.23</lt></range>
      </package>
      <package>
	<name>mariadb104-server</name>
	<range><lt>10.4.13</lt></range>
      </package>
      <package>
	<name>mysql56-server</name>
	<range><lt>5.6.48</lt></range>
      </package>
      <package>
	<name>mysql57-server</name>
	<range><lt>5.7.30</lt></range>
      </package>
      <package>
	<name>mysql80-server</name>
	<range><lt>8.0.20</lt></range>
      </package>
      <package>
	<name>percona55-server</name>
	<range><lt>5.5.68</lt></range>
      </package>
      <package>
	<name>percona56-server</name>
	<range><lt>5.6.48</lt></range>
      </package>
      <package>
	<name>percona57-server</name>
	<range><lt>5.7.30</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Oracle reports:</p>
	<blockquote cite="https://www.oracle.com/security-alerts/cpujan2020.html#AppendixMSQL">
	  <p>This Critical Patch Update contains 45 new security patches for
	    Oracle MySQL. 9 of these vulnerabilities may be remotely exploitable
	    without authentication, i.e., may be exploited over a network without
	    requiring user credentials.</p>
	  <p>MariaDB reports 4 of these vulnerabilities exist in their software</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://www.oracle.com/security-alerts/cpujan2020.html</url>
      <cvename>CVE-2019-5482</cvename>
      <cvename>CVE-2019-15601</cvename>
      <cvename>CVE-2020-2780</cvename>
      <cvename>CVE-2020-2790</cvename>
      <cvename>CVE-2020-2768</cvename>
      <cvename>CVE-2020-2804</cvename>
      <cvename>CVE-2020-2760</cvename>
      <cvename>CVE-2020-2806</cvename>
      <cvename>CVE-2020-2762</cvename>
      <cvename>CVE-2020-2814</cvename>
      <cvename>CVE-2020-2893</cvename>
      <cvename>CVE-2020-2895</cvename>
      <cvename>CVE-2020-2898</cvename>
      <cvename>CVE-2020-2903</cvename>
      <cvename>CVE-2020-2896</cvename>
      <cvename>CVE-2020-2770</cvename>
      <cvename>CVE-2020-2765</cvename>
      <cvename>CVE-2020-2892</cvename>
      <cvename>CVE-2020-2897</cvename>
      <cvename>CVE-2020-2923</cvename>
      <cvename>CVE-2020-2924</cvename>
      <cvename>CVE-2020-2901</cvename>
      <cvename>CVE-2020-2928</cvename>
      <cvename>CVE-2020-2904</cvename>
      <cvename>CVE-2020-2925</cvename>
      <cvename>CVE-2020-2759</cvename>
      <cvename>CVE-2020-2763</cvename>
      <cvename>CVE-2020-2761</cvename>
      <cvename>CVE-2020-2774</cvename>
      <cvename>CVE-2020-2853</cvename>
      <cvename>CVE-2020-2779</cvename>
      <cvename>CVE-2020-2812</cvename>
      <cvename>CVE-2019-1547</cvename>
      <cvename>CVE-2020-2926</cvename>
      <cvename>CVE-2020-2921</cvename>
      <cvename>CVE-2020-2930</cvename>
    </references>
    <dates>
      <discovery>2020-04-14</discovery>
      <entry>2020-04-23</entry>
      <modified>2020-05-16</modified>
    </dates>
  </vuln>

  <vuln vid="622b5c47-855b-11ea-a5e2-d4c9ef517024">
    <topic>MySQL Client -- Multiple vulerabilities</topic>
    <affects>
      <package>
	<name>mysql56-client</name>
	<range><lt>5.6.48</lt></range>
      </package>
      <package>
	<name>mysql57-client</name>
	<range><lt>5.7.30</lt></range>
      </package>
      <package>
	<name>mysql80-client</name>
	<range><lt>8.0.20</lt></range>
      </package>
      <package>
	<name>mysql-connector-c</name>
	<range><lt>8.0.20</lt></range>
      </package>
      <package>
	<name>mysql-connector-c++</name>
	<range><lt>8.0.20</lt></range>
      </package>
      <package>
	<name>mysql-connector-java</name>
	<range><lt>8.0.20</lt></range>
      </package>
      <package>
	<name>percona55-client</name>
	<range><lt>5.5.68</lt></range>
      </package>
      <package>
	<name>percona56-client</name>
	<range><lt>5.6.48</lt></range>
      </package>
      <package>
	<name>percona57-client</name>
	<range><lt>5.7.30</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Oracle reports:</p>
	<blockquote cite="https://www.oracle.com/security-alerts/cpujan2020.html#AppendixMSQL">
	  <p>This Critical Patch Update contains 45 new security patches for
	    Oracle MySQL. 9 of these vulnerabilities may be remotely exploitable
	    without authentication, i.e., may be exploited over a network without
	    requiring user credentials.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://www.oracle.com/security-alerts/cpujan2020.html</url>
      <cvename>CVE-2020-2752</cvename>
      <cvename>CVE-2020-2934</cvename>
      <cvename>CVE-2020-2875</cvename>
      <cvename>CVE-2020-2922</cvename>
      <cvename>CVE-2020-2933</cvename>
    </references>
    <dates>
      <discovery>2020-04-14</discovery>
      <entry>2020-04-23</entry>
    </dates>
  </vuln>

  <vuln vid="afa018d9-8557-11ea-a5e2-d4c9ef517024">
    <topic>Nextcloud -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>nextcloud</name>
	<range><lt>18.0.4</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Nextcloud reports:</p>
	<blockquote cite="https://nextcloud.com/security/advisories/">
	  <p>XSS in Files PDF viewer (NC-SA-2020-019)</p>
	  <p>Missing ownership check on remote wipe endpoint (NC-SA-2020-018)</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://nextcloud.com/security/advisories/</url>
      <url>https://nextcloud.com/security/advisory/?id=NC-SA-2020-018</url>
      <url>https://nextcloud.com/security/advisory/?id=NC-SA-2020-019</url>
    </references>
    <dates>
      <discovery>2020-03-18</discovery>
      <entry>2020-04-23</entry>
    </dates>
  </vuln>

  <vuln vid="a27b0bb6-84fc-11ea-b5b4-641c67a117d8">
    <topic>Python -- Regular Expression DoS attack against client</topic>
    <affects>
      <package>
	<name>python38</name>
	<range><lt>3.8.3</lt></range>
      </package>
      <package>
	<name>python37</name>
	<range><le>3.7.7</le></range>
      </package>
      <package>
	<name>python36</name>
	<range><lt>3.6.10</lt></range>
      </package>
      <package>
	<name>python35</name>
	<range><le>3.5.9_4</le></range>
      </package>
      <package>
	<name>python27</name>
	<range><lt>2.7.18</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Ben Caller and Matt Schwager reports:</p>
	<blockquote cite="https://python-security.readthedocs.io/vuln/urllib-basic-auth-regex.html">
	  <p>Python 2.7 through 2.7.17, 3.5 through 3.5.9, 3.6 through 3.6.10, 3.7
	    through 3.7.6, and 3.8 through 3.8.1 allows an HTTP server to conduct
	    Regular Expression Denial of Service (ReDoS) attacks against a client
	    because of urllib.request.AbstractBasicAuthHandler catastrophic
	    backtracking.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://python-security.readthedocs.io/vuln/urllib-basic-auth-regex.html</url>
      <url>https://bugs.python.org/issue39503</url>
      <cvename>CVE-2020-8492</cvename>
      <freebsdpr>ports/245819</freebsdpr>
    </references>
    <dates>
      <discovery>2019-11-17</discovery>
      <entry>2020-04-23</entry>
      <modified>2020-06-13</modified>
    </dates>
  </vuln>

  <vuln vid="8d85d600-84a9-11ea-97b9-08002728f74c">
    <topic>Wagtail -- XSS vulnerability</topic>
    <affects>
      <package>
	<name>py35-wagtail</name>
	<name>py36-wagtail</name>
	<name>py37-wagtail</name>
	<name>py38-wagtail</name>
	<range><lt>2.7.2</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Wagtail release notes:</p>
	<blockquote cite="https://docs.wagtail.io/en/latest/releases/2.7.2.html">
	  <p>CVE-2020-11001: Possible XSS attack via page revision comparison view</p>
	  <p>This release addresses a cross-site scripting (XSS) vulnerability on
	    the page revision comparison view within the Wagtail admin interface. A
	    user with a limited-permission editor account for the Wagtail admin
	    could potentially craft a page revision history that, when viewed by a
	    user with higher privileges, could perform actions with that user
	    credentials. The vulnerability is not exploitable by an ordinary site
	    visitor without access to the Wagtail admin.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://docs.wagtail.io/en/latest/releases/2.7.2.html</url>
      <url>https://github.com/advisories/GHSA-v2wc-pfq2-5cm6</url>
      <cvename>CVE-2020-11001</cvename>
    </references>
    <dates>
      <discovery>2020-04-03</discovery>
      <entry>2020-04-22</entry>
    </dates>
  </vuln>

  <vuln vid="0f798bd6-8325-11ea-9a78-08002728f74c">
    <topic>libntlm -- buffer overflow vulnerability</topic>
    <affects>
      <package>
	<name>libntlm</name>
	<range><lt>1.6</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>NVD reports:</p>
	<blockquote cite="https://nvd.nist.gov/vuln/detail/CVE-2019-17455">
	  <p>Libntlm through 1.5 relies on a fixed buffer size for
	    tSmbNtlmAuthRequest, tSmbNtlmAuthChallenge, and tSmbNtlmAuthResponse
	    read and write operations, as demonstrated by a stack-based buffer
	    over-read in buildSmbNtlmAuthRequest in smbutil.c for a crafted NTLM
	    request.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://gitlab.com/jas/libntlm/-/issues/2</url>
      <url>https://nvd.nist.gov/vuln/detail/CVE-2019-17455</url>
      <cvename>CVE-2019-17455</cvename>
    </references>
    <dates>
      <discovery>2019-10-08</discovery>
      <entry>2020-04-21</entry>
    </dates>
  </vuln>

  <vuln vid="012809ce-83f3-11ea-92ab-00163e433440">
    <topic>OpenSSL remote denial of service vulnerability</topic>
    <affects>
      <package>
	<name>FreeBSD</name>
	<range><ge>12.1</ge><lt>12.1_4</lt></range>
      </package>
      <package>
	<name>openssl</name>
	<range><ge>1.1.1,1</ge><lt>1.1.1g,1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<h1>Problem Description:</h1>
	<p>Server or client applications that call the SSL_check_chain()
	function during or after a TLS 1.3 handshake may crash due to a NULL
	pointer dereference as a result of incorrect handling of the
	"signature_algorithms_cert" TLS extension.  The crash occurs if an
	invalid or unrecognized signature algorithm is received from the
	peer.</p>
	<h1>Impact:</h1>
	<p>A malicious peer could exploit the NULL pointer dereference crash,
	causing a denial of service attack.</p>
      </body>
    </description>
    <references>
      <cvename>CVE-2020-1967</cvename>
      <freebsdsa>SA-20:11.openssl</freebsdsa>
      <url>https://www.openssl.org/news/secadv/20200421.txt</url>
    </references>
    <dates>
      <discovery>2020-04-21</discovery>
      <entry>2020-04-21</entry>
      <modified>2020-04-22</modified>
    </dates>
  </vuln>

  <vuln vid="33edcc56-83f2-11ea-92ab-00163e433440">
    <topic>FreeBSD -- ipfw invalid mbuf handling</topic>
    <affects>
      <package>
	<name>FreeBSD-kernel</name>
	<range><ge>12.1</ge><lt>12.1_4</lt></range>
	<range><ge>11.3</ge><lt>11.3_8</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<h1>Problem Description:</h1>
	<p>Incomplete packet data validation may result in accessing
	out-of-bounds memory (CVE-2019-5614) or may access memory after it has
	been freed (CVE-2019-15874).</p>
	<h1>Impact:</h1>
	<p>Access to out of bounds or freed mbuf data can lead to a kernel panic or
	other unpredictable results.</p>
      </body>
    </description>
    <references>
      <cvename>CVE-2019-5614</cvename>
      <cvename>CVE-2019-15874</cvename>
      <freebsdsa>SA-20:10.ipfw</freebsdsa>
    </references>
    <dates>
      <discovery>2020-04-21</discovery>
      <entry>2020-04-21</entry>
    </dates>
  </vuln>

  <vuln vid="9fbaefb3-837e-11ea-b5b4-641c67a117d8">
    <topic>py-twisted -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>py27-twisted</name>
	<name>py35-twisted</name>
	<name>py36-twisted</name>
	<name>py37-twisted</name>
	<name>py38-twisted</name>
	<range><lt>20.3.0</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Twisted developers reports:</p>
	<blockquote cite="https://github.com/twisted/twisted/blob/twisted-20.3.0/NEWS.rst">
	<p>All HTTP clients in twisted.web.client now raise a ValueError when
	called with a method and/or URL that contain invalid characters. This
	mitigates CVE-2019-12387. Thanks to Alex Brasetvik for reporting this
	vulnerability.</p>
	<p>The HTTP/2 server implementation now enforces TCP flow control on
	control frame messages and times out clients that send invalid data
	without reading responses. This closes CVE-2019-9512 (Ping Flood),
	CVE-2019-9514 (Reset Flood), and CVE-2019-9515 (Settings Flood). Thanks
	to Jonathan Looney and Piotr Sikora.</p>
	<p>twisted.web.http was subject to several request smuggling attacks.
	Requests with multiple Content-Length headers were allowed
	(CVE-2020-10108, thanks to Jake Miller from Bishop Fox and ZeddYu Lu
	for reporting this) and now fail with a 400; requests with a
	Content-Length header and a Transfer-Encoding header honored the first
	header (CVE-2020-10109, thanks to Jake Miller from Bishop Fox for
	reporting this) and now fail with a 400; requests whose
	Transfer-Encoding header had a value other than "chunked" and
	"identity" (thanks to ZeddYu Lu) were allowed and now fail with a 400.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://github.com/twisted/twisted/blob/twisted-20.3.0/NEWS.rst</url>
      <cvename>CVE-2019-12387</cvename>
      <cvename>CVE-2019-9512</cvename>
      <cvename>CVE-2019-9514</cvename>
      <cvename>CVE-2019-9515</cvename>
      <cvename>CVE-2020-10108</cvename>
      <cvename>CVE-2020-10109</cvename>
      <freebsdpr>ports/245252</freebsdpr>
    </references>
    <dates>
      <discovery>2019-03-01</discovery>
      <entry>2020-04-21</entry>
    </dates>
  </vuln>

  <vuln vid="3d7dfd63-823b-11ea-b3a8-240a644dd835">
    <topic>Client/server denial of service when handling AES-CTR ciphers</topic>
    <affects>
      <package>
	<name>libssh</name>
	<range><ge>0.8.0</ge><lt>0.8.9</lt></range>
	<range><ge>0.9.0</ge><lt>0.9.4</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The libssh team reports (originally reported by Yasheng Yang from
	Google):</p>
	<blockquote cite="https://www.libssh.org/security/advisories/CVE-2020-1730.txt">
	  <p>A malicious client or server could crash the counterpart implemented
	  with libssh AES-CTR ciphers are used and don't get fully initialized. It
	  will crash when it tries to cleanup the AES-CTR ciphers when closing the
	  connection.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://www.libssh.org/security/advisories/CVE-2020-1730.txt"</url>
      <cvename>CVE-2020-1730</cvename>
    </references>
    <dates>
      <discovery>2020-01-25</discovery>
      <entry>2020-04-19</entry>
    </dates>
  </vuln>

  <vuln vid="e418b8f0-9abb-420b-a7f1-1d8231b352e2">
    <topic>webkit2-gtk3 -- Denial of service</topic>
    <affects>
      <package>
	<name>webkit2-gtk3</name>
	<range><lt>2.28.1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The WebKitGTK project reports the following vulnerability.</p>
	<blockquote cite="https://webkitgtk.org/security/WSA-2020-0004.html">
	  <p>Processing maliciously crafted web content may lead to arbitrary code execution or application crash (denial of service). Description: A memory corruption issue (use-after-free) was addressed with improved memory handling.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://webkitgtk.org/security/WSA-2020-0004.html</url>
      <cvename>CVE-2020-11793</cvename>
    </references>
    <dates>
      <discovery>2020-04-16</discovery>
      <entry>2020-04-18</entry>
    </dates>
  </vuln>

  <vuln vid="e24fd421-8128-11ea-aa57-000ffec73f06">
    <topic>drupal -- Drupal Core - Moderately critical - Third-party library</topic>
    <affects>
      <package>
	<name>drupal8</name>
	<range><lt>8.8.4</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Drupal Security Team reports:</p>
	<blockquote cite="https://www.drupal.org/sa-core-2020-001">
	  <p>The Drupal project uses the third-party library CKEditor, which has
	    released a security improvement that is needed to protect some
	    Drupal configurations.</p>
	  <p>Vulnerabilities are possible if Drupal is configured to use the
	    WYSIWYG CKEditor for your site's users. An attacker that can createor
	    edit content may be able to exploit this Cross Site Scripting (XSS)
	    vulnerability to target users with access to the WYSIWYG CKEditor,
	    and this may include site admins with privileged access.</p>
	  <p>The latest versions of Drupal update CKEditor to 4.14 to mitigate
	    the vulnerabilities.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://www.drupal.org/sa-core-2020-001</url>
    </references>
    <dates>
      <discovery>2020-03-18</discovery>
      <entry>2020-04-17</entry>
    </dates>
  </vuln>

  <vuln vid="ae2e7871-80f6-11ea-bafd-815569f3852d">
    <topic>ansible - Vault password leak from temporary file</topic>
    <affects>
      <package>
	<name>ansible</name>
	<range><lt>2.8.9</lt></range>
      </package>
      <package>
	<name>ansible27</name>
	<range><lt>2.7.17</lt></range>
      </package>
      <package>
	<name>ansible26</name>
	<range><lt>2.7.17</lt></range>
      </package>
      <package>
	<name>ansible25</name>
	<range><lt>2.7.17</lt></range>
      </package>
      <package>
	<name>ansible24</name>
	<range><lt>2.7.17</lt></range>
      </package>
      <package>
	<name>ansible23</name>
	<range><lt>2.7.17</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Borja Tarraso reports:</p>
	<blockquote cite="https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2020-1740">
	<p>A flaw was found in Ansible Engine when using Ansible Vault for editing
	  encrypted files. When a user executes "ansible-vault edit", another user
	  on the same computer can read the old and new secret, as it is created in
	  a temporary file with mkstemp and the returned file descriptor is closed
	  and the method write_data is called to write the existing secret in the
	  file. This method will delete the file before recreating it insecurely.
	  All versions in 2.7.x, 2.8.x and 2.9.x branches are believed to be vulnerable.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2020-1740</url>
      <url>https://github.com/ansible/ansible/issues/67798</url>
      <cvename>CVE-2020-1740</cvename>
    </references>
    <dates>
      <discovery>2020-02-12</discovery>
      <entry>2020-04-17</entry>
    </dates>
  </vuln>

  <vuln vid="67dbeeb6-80f4-11ea-bafd-815569f3852d">
    <topic>ansible - subversion password leak from PID</topic>
    <affects>
      <package>
	<name>ansible</name>
	<range><lt>2.8.9</lt></range>
      </package>
      <package>
	<name>ansible27</name>
	<range><lt>2.7.17</lt></range>
      </package>
      <package>
	<name>ansible26</name>
	<range><lt>2.7.17</lt></range>
      </package>
      <package>
	<name>ansible25</name>
	<range><lt>2.7.17</lt></range>
      </package>
      <package>
	<name>ansible24</name>
	<range><lt>2.7.17</lt></range>
      </package>
      <package>
	<name>ansible23</name>
	<range><lt>2.7.17</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Borja Tarraso reports:</p>
	<blockquote cite="https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2020-1739">
	  <p>A flaw was found in Ansible 2.7.16 and prior, 2.8.8 and prior, and 2.9.5
	    and prior when a password is set with the argument "password" of svn module,
	    it is used on svn command line, disclosing to other users within the same
	    node. An attacker could take advantage by reading the cmdline file from that
	    particular PID on the procfs.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2020-1739</url>
      <url>https://github.com/ansible/ansible/issues/67797</url>
      <url>https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/FWDK3QUVBULS3Q3PQTGEKUQYPSNOU5M3/</url>
      <url>https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/QT27K5ZRGDPCH7GT3DRI3LO4IVDVQUB7/</url>
      <url>https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/U3IMV3XEIUXL6S4KPLYYM4TVJQ2VNEP2/</url>
      <cvename>CVE-2020-1739</cvename>
    </references>
    <dates>
      <discovery>2020-02-12</discovery>
      <entry>2020-04-17</entry>
    </dates>
  </vuln>

  <vuln vid="0899c0d3-80f2-11ea-bafd-815569f3852d">
    <topic>ansible - win_unzip path normalization</topic>
    <affects>
      <package>
	<name>ansible</name>
	<range><lt>2.8.9</lt></range>
      </package>
      <package>
	<name>ansible27</name>
	<range><lt>2.7.17</lt></range>
      </package>
      <package>
	<name>ansible26</name>
	<range><lt>2.7.17</lt></range>
      </package>
      <package>
	<name>ansible25</name>
	<range><lt>2.7.17</lt></range>
      </package>
      <package>
	<name>ansible24</name>
	<range><lt>2.7.17</lt></range>
      </package>
      <package>
	<name>ansible23</name>
	<range><lt>2.7.17</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Borja Tarraso reports:</p>
	<blockquote cite="https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2020-1737">
	  <p>A flaw was found in Ansible 2.7.17 and prior, 2.8.9 and prior, and 2.9.6 and
	    prior when using the Extract-Zip function from the win_unzip module as the
	    extracted file(s) are not checked if they belong to the destination folder. An
	    attacker could take advantage of this flaw by crafting an archive anywhere in
	    the file system, using a path traversal. This issue is fixed in 2.10.</p>
	</blockquote>
      </body>
    </description>
    <references>
	    <url>https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2020-1737</url>
	    <url>https://github.com/ansible/ansible/issues/67795</url>
	    <url>https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/FWDK3QUVBULS3Q3PQTGEKUQYPSNOU5M3/</url>
	    <url>https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/QT27K5ZRGDPCH7GT3DRI3LO4IVDVQUB7/</url>
	    <url>https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/U3IMV3XEIUXL6S4KPLYYM4TVJQ2VNEP2/</url>
	    <cvename>CVE-2020-1737</cvename>
    </references>
    <dates>
      <discovery>2020-02-12</discovery>
      <entry>2020-04-17</entry>
    </dates>
  </vuln>

  <vuln vid="25efe05c-7ffc-11ea-b594-3065ec8fd3ec">
    <topic>chromium -- use after free</topic>
    <affects>
      <package>
	<name>chromium</name>
	<range><lt>81.0.4044.113</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Google Chrome Releases reports:</p>
	<blockquote cite="https://chromereleases.googleblog.com/2020/04/stable-channel-update-for-desktop_15.html">
	  <p>[1067851] Critical CVE-2020-6457: Use after free in speech
	  recognizer. Reported by Leecraso and Guang Gong of Alpha Lab, Qihoo
	  360 on 2020-04-04</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://chromereleases.googleblog.com/2020/04/stable-channel-update-for-desktop_15.html</url>
      <cvename>CVE-2020-6457</cvename>
    </references>
    <dates>
      <discovery>2020-04-15</discovery>
      <entry>2020-04-16</entry>
    </dates>
  </vuln>

  <vuln vid="8604121c-7fc2-11ea-bcac-7781e90b0c8f">
    <topic>openvpn -- illegal client float can break VPN session for other users</topic>
    <affects>
      <package>
	<name>openvpn</name>
	<range><lt>2.4.8_3</lt></range>
      </package>
      <package>
	<name>openvpn-mbedtls</name>
	<range><lt>2.4.8_3</lt></range>
      </package>
      <package>
	<name>openvpn-devel</name>
	<range><lt>202016</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Lev Stipakov and Gert Doering report:</p>
	<blockquote cite="https://github.com/OpenVPN/openvpn/commit/f7b318f811bb43c0d3aa7f337ec6242ed2c33881">
	  <p>There is a time frame between allocating peer-id and initializing data
	    channel key (which is performed on receiving push request or on async
	    push-reply) in which the existing peer-id float checks do not work right.</p>
	  <p>If a "rogue" data channel packet arrives during that time frame from
	    another address and with same peer-id, this would cause client to float
	    to that new address.</p>
	  <p>The net effect of this behaviour is that the VPN session for the
	    "victim client" is broken. Since the "attacker client" does not have
	    suitable keys, it can not inject or steal VPN traffic from the other
	    session. The time window is small and it can not be used to attack
	    a specific client's session, unless some other way is found to make it
	    disconnect and reconnect first.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://github.com/OpenVPN/openvpn/commit/f7b318f811bb43c0d3aa7f337ec6242ed2c33881</url>
      <url>https://sourceforge.net/p/openvpn/openvpn/ci/f7b318f811bb43c0d3aa7f337ec6242ed2c33881/</url>
      <url>https://www.mail-archive.com/openvpn-devel@lists.sourceforge.net/msg19720.html</url>
      <url>https://community.openvpn.net/openvpn/ticket/1272</url>
      <url>https://patchwork.openvpn.net/patch/1077/</url>
      <cvename>CVE-2020-11810</cvename>
    </references>
    <dates>
      <discovery>2020-04-13</discovery>
      <entry>2020-04-16</entry>
    </dates>
  </vuln>

  <vuln vid="bf1f47c4-7f1b-11ea-bf94-001cc0382b2f">
    <topic>Mbed TLS -- Side channel attack on ECDSA</topic>
    <affects>
      <package>
	<name>mbedtls</name>
	<range><lt>2.16.6</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Manuel Pégourié-Gonnard reports:</p>
	<blockquote cite="https://tls.mbed.org/tech-updates/security-advisories/mbedtls-security-advisory-2020-04">
	  <p>An attacker with access to precise enough timing and memory access
	   information (typically an untrusted operating system attacking a
	   secure enclave such as SGX or the TrustZone secure world) can fully
	   recover an ECDSA private key after observing a number of signature
	   operations.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://tls.mbed.org/tech-updates/security-advisories/mbedtls-security-advisory-2020-04</url>
      <cvename>CVE-2020-10932</cvename>
    </references>
    <dates>
      <discovery>2020-04-14</discovery>
      <entry>2020-04-15</entry>
    </dates>
  </vuln>

  <vuln vid="570706ff-7ee0-11ea-bd0b-001b217b3468">
    <topic>Gitlab -- Multiple Vulnerabilities</topic>
    <affects>
      <package>
	<name>gitlab-ce</name>
	<range><ge>12.9.0</ge><lt>12.9.3</lt></range>
	<range><ge>12.8.0</ge><lt>12.8.9</lt></range>
	<range><ge>0</ge><lt>12.7.9</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Gitlab reports:</p>
	<blockquote cite="https://about.gitlab.com/releases/2020/04/14/critical-security-release-gitlab-12-dot-9-dot-3-released/">
	  <p>NuGet Package and File Disclosure through GitLab Workhorse</p>
	  <p>Job Artifact Uploads and File Disclosure through GitLab Workhorse</p>
	  <p>Incorrect membership following group removal</p>
	  <p>Logging of Praefect tokens</p>
	  <p>Update Rack dependency</p>
	  <p>Update OpenSSL dependency</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://about.gitlab.com/releases/2020/04/14/critical-security-release-gitlab-12-dot-9-dot-3-released/</url>
      <cvename>CVE-2020-11505</cvename>
      <cvename>CVE-2020-11506</cvename>
      <cvename>CVE-2020-11649</cvename>
      <cvename>CVE-2020-16782</cvename>
    </references>
    <dates>
      <discovery>2020-04-14</discovery>
      <entry>2020-04-15</entry>
    </dates>
  </vuln>

  <vuln vid="f59c4c53-c55f-43fe-9920-82b9d1ea9c3d">
    <topic>zeek -- Remote crash vulnerability</topic>
    <affects>
      <package>
	<name>zeek</name>
	<range><lt>3.0.4</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Jon Siwek of Corelight reports:</p>
	<blockquote cite="https://raw.githubusercontent.com/zeek/zeek/e059d4ec2e689b3c8942f4aa08b272f24ed3f612/NEWS">
	  <p>This release fixes the following security issue:</p>
	  <ul>
	  <li>
	  An attacker can crash Zeek remotely via crafted packet
	  sequence. </li>
	  </ul>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://raw.githubusercontent.com/zeek/zeek/e059d4ec2e689b3c8942f4aa08b272f24ed3f612/NEWS</url>
    </references>
    <dates>
      <discovery>2020-04-14</discovery>
      <entry>2020-04-14</entry>
    </dates>
  </vuln>

  <vuln vid="6e3b700a-7ca3-11ea-b594-3065ec8fd3ec">
    <topic>chromium -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>chromium</name>
	<range><lt>81.0.4044.92</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Google Chrome Releases reports:</p>
	<blockquote cite="https://chromereleases.googleblog.com/2020/04/stable-channel-update-for-desktop_7.html">
	  <p>This updates includes 32 security fixes, including:</p>
	  <ul>
	    <li>[1019161] High CVE-2020-6454: Use after free in extensions.
	    Reported by Leecraso and Guang Gong of Alpha Lab, Qihoo 360 on
	    2019-10-29</li>
	    <li>[1043446] High CVE-2020-6423: Use after free in audio.
	    Reported by Anonymous on 2020-01-18</li>
	    <li>[1059669] High CVE-2020-6455: Out of bounds read in WebSQL.
	    Reported by Nan Wang(@eternalsakura13) and Guang Gong of Alpha Lab,
	    Qihoo 360 on 2020-03-09</li>
	    <li>[1031479] Medium CVE-2020-6430: Type Confusion in V8.
	    Reported by Avihay Cohen @ SeraphicAlgorithms on 2019-12-06</li>
	    <li>[1040755] Medium CVE-2020-6456: Insufficient validation of
	    untrusted input in clipboard. Reported by Michał Bentkowski of
	    Securitum on 2020-01-10</li>
	    <li>[852645] Medium CVE-2020-6431: Insufficient policy
	    enforcement in full screen. Reported by Luan Herrera (@lbherrera_)
	    on 2018-06-14</li>
	    <li>[965611] Medium CVE-2020-6432: Insufficient policy
	    enforcement in navigations. Reported by David Erceg on
	    2019-05-21</li>
	    <li>[1043965] Medium CVE-2020-6433: Insufficient policy
	    enforcement in extensions. Reported by David Erceg on
	    2020-01-21</li>
	    <li>[1048555] Medium CVE-2020-6434: Use after free in devtools.
	    Reported by HyungSeok Han (DaramG) of Theori on 2020-02-04</li>
	    <li>[1032158] Medium CVE-2020-6435: Insufficient policy
	    enforcement in extensions. Reported by Sergei Glazunov of Google
	    Project Zero on 2019-12-09</li>
	    <li>[1034519] Medium CVE-2020-6436: Use after free in window
	    management. Reported by Igor Bukanov from Vivaldi on 2019-12-16</li>
	    <li>[639173] Low CVE-2020-6437: Inappropriate implementation in
	    WebView. Reported by Jann Horn on 2016-08-19</li>
	    <li>[714617] Low CVE-2020-6438: Insufficient policy enforcement in
	    extensions. Reported by Ng Yik Phang on 2017-04-24</li>
	    <li>[868145] Low CVE-2020-6439: Insufficient policy enforcement in
	    navigations. Reported by remkoboonstra on 2018-07-26</li>
	    <li>[894477] Low CVE-2020-6440: Inappropriate implementation in
	    extensions. Reported by David Erceg on 2018-10-11</li>
	    <li>[959571] Low CVE-2020-6441: Insufficient policy enforcement in
	    omnibox. Reported by David Erceg on 2019-05-04</li>
	    <li>[1013906] Low CVE-2020-6442: Inappropriate implementation in
	    cache. Reported by B@rMey on 2019-10-12</li>
	    <li>[1040080] Low CVE-2020-6443: Insufficient data validation in
	    developer tools. Reported by @lovasoa (Ophir LOJKINE) on
	    2020-01-08</li>
	    <li>[922882] Low CVE-2020-6444: Uninitialized Use in WebRTC.
	    Reported by mlfbrown on 2019-01-17</li>
	    <li>[933171] Low CVE-2020-6445: Insufficient policy enforcement in
	    trusted types. Reported by Jun Kokatsu, Microsoft Browser
	    Vulnerability Research on 2019-02-18</li>
	    <li>[933172] Low CVE-2020-6446: Insufficient policy enforcement in
	    trusted types. Reported by Jun Kokatsu, Microsoft Browser
	    Vulnerability Research on 2019-02-18</li>
	    <li>[991217] Low CVE-2020-6447: Inappropriate implementation in
	    developer tools. Reported by David Erceg on 2019-08-06</li>
	    <li>[1037872] Low CVE-2020-6448: Use after free in V8. Reported by
	    Guang Gong of Alpha Lab, Qihoo 360 on 2019-12-26</li>
	  </ul>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2020-6423</cvename>
      <cvename>CVE-2020-6430</cvename>
      <cvename>CVE-2020-6431</cvename>
      <cvename>CVE-2020-6432</cvename>
      <cvename>CVE-2020-6433</cvename>
      <cvename>CVE-2020-6434</cvename>
      <cvename>CVE-2020-6435</cvename>
      <cvename>CVE-2020-6436</cvename>
      <cvename>CVE-2020-6437</cvename>
      <cvename>CVE-2020-6438</cvename>
      <cvename>CVE-2020-6439</cvename>
      <cvename>CVE-2020-6440</cvename>
      <cvename>CVE-2020-6441</cvename>
      <cvename>CVE-2020-6442</cvename>
      <cvename>CVE-2020-6443</cvename>
      <cvename>CVE-2020-6444</cvename>
      <cvename>CVE-2020-6445</cvename>
      <cvename>CVE-2020-6446</cvename>
      <cvename>CVE-2020-6447</cvename>
      <cvename>CVE-2020-6448</cvename>
      <cvename>CVE-2020-6454</cvename>
      <cvename>CVE-2020-6455</cvename>
      <cvename>CVE-2020-6456</cvename>
      <url>https://chromereleases.googleblog.com/2020/04/stable-channel-update-for-desktop_7.html</url>
    </references>
    <dates>
      <discovery>2020-04-07</discovery>
      <entry>2020-04-12</entry>
    </dates>
  </vuln>

  <vuln vid="9cb57a06-7517-11ea-b594-3065ec8fd3ec">
    <topic>chromium -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>chromium</name>
	<range><lt>80.0.3987.162</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Google Chrome Releases reports:</p>
	<blockquote cite="https://chromereleases.googleblog.com/2020/03/stable-channel-update-for-desktop_31.html">
	  <p>This update contains 8 security fixes.</p>
	  <ul>
	    <li>[1062247] High CVE-2020-6450: Use after free in WebAudio.
	      Reported by Man Yue Mo of Semmle Security Research Team on
	      2020-03-17</li>
	    <li>[1061018] High CVE-2020-6451: Use after free in WebAudio.
	      Reported by Man Yue Mo of Semmle Security Research Team on
	      2020-03-12</li>
	    <li>[1059764] High CVE-2020-6452: Heap buffer overflow in media
	      Reported by asnine on 2020-03-09</li>
	    <li>[1066247] Various fixes from internal audits, fuzzing and other
	      initiatives.</li>
	  </ul>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://chromereleases.googleblog.com/2020/03/stable-channel-update-for-desktop_31.html</url>
      <cvename>CVE-2020-6450</cvename>
      <cvename>CVE-2020-6451</cvename>
      <cvename>CVE-2020-6452</cvename>
    </references>
    <dates>
      <discovery>2020-03-31</discovery>
      <entry>2020-04-02</entry>
    </dates>
  </vuln>

  <vuln vid="7f829d44-7509-11ea-b47c-589cfc0f81b0">
    <topic>HAproxy -- serious vulnerability affecting the HPACK decoder used for HTTP/2</topic>
    <affects>
      <package>
	<name>haproxy</name>
	<range><ge>2.0.0</ge><lt>2.0.14</lt></range>
      </package>
      <package>
	<name>haproxy18</name>
	<range><ge>1.8.0</ge><lt>1.8.25</lt></range>
      </package>
      <package>
	<name>haproxy19</name>
	<range><ge>1.9.0</ge><lt>1.9.15</lt></range>
      </package>
      <package>
	<name>haproxy21</name>
	<range><ge>2.1.0</ge><lt>2.1.4</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The HAproxy Project reports:</p>
	<blockquote cite="https://www.mail-archive.com/haproxy@formilux.org/msg36876.html">
	  <p>The main driver for this release is that it contains a fix for a serious
	    vulnerability that was responsibly reported last week by Felix Wilhelm
	    from Google Project Zero, affecting the HPACK decoder used for HTTP/2.
	    CVE-2020-11100 was assigned to this issue.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2020-11100</cvename>
      <url>https://www.mail-archive.com/haproxy@formilux.org/msg36876.html</url>
      <url>https://www.mail-archive.com/haproxy@formilux.org/msg36877.html</url>
      <url>https://www.mail-archive.com/haproxy@formilux.org/msg36878.html</url>
      <url>https://www.mail-archive.com/haproxy@formilux.org/msg36879.html</url>
    </references>
    <dates>
      <discovery>2020-04-02</discovery>
      <entry>2020-04-02</entry>
    </dates>
  </vuln>

  <vuln vid="b360b120-74b1-11ea-a84a-4c72b94353b5">
    <topic>Apache -- Multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>apache24</name>
	<range><lt>2.4.43</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Apache Team reports:</p>
	<blockquote cite="https://downloads.apache.org/httpd/CHANGES_2.4.43">
	  <h1>SECURITY: CVE-2020-1934</h1>
	  <p>mod_proxy_ftp: Use of uninitialized value with malicious backend FTP
	    server.</p>
	  <h1>SECURITY: CVE-2020-1927</h1>
	  <p>rewrite, core: Set PCRE_DOTALL flag by default to avoid unpredictable
	    matches and substitutions with encoded line break characters.
	    The fix for CVE-2019-10098 was not effective.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://downloads.apache.org/httpd/CHANGES_2.4.43</url>
    <cvename>CVE-2020-1934</cvename>
    <cvename>CVE-2020-1927</cvename>
    </references>
    <dates>
      <discovery>2020-04-01</discovery>
      <entry>2020-04-02</entry>
    </dates>
  </vuln>

  <vuln vid="e2b564fc-7462-11ea-af63-38d547003487">
    <topic>cacti -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>cacti</name>
	<range><lt>1.2.10</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The Cacti developers reports:</p>
	<blockquote cite="https://github.com/Cacti/cacti/releases/tag/release%2F1.2.10">
	  <p>When guest users have access to realtime graphs, remote code
	    could be executed (CVE-2020-8813).</p>
	  <p>Lack of escaping on some pages can lead to XSS exposure
	    (CVE-2020-7106).</p>
	  <p>Remote Code Execution due to input validation failure in
	    Performance Boost Debug Log (CVE-2020-7237).</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://github.com/Cacti/cacti/releases/tag/release%2F1.2.10</url>
      <url>https://nvd.nist.gov/vuln/detail/CVE-2020-8813</url>
      <url>https://nvd.nist.gov/vuln/detail/CVE-2020-7106</url>
      <url>https://nvd.nist.gov/vuln/detail/CVE-2020-7237</url>
      <cvename>CVE-2020-8813</cvename>
      <cvename>CVE-2020-7106</cvename>
      <cvename>CVE-2020-7237</cvename>
      <freebsdpr>ports/245198</freebsdpr>
    </references>
    <dates>
      <discovery>2020-02-04</discovery>
      <entry>2020-04-02</entry>
    </dates>
  </vuln>

  <vuln vid="d887b3d9-7366-11ea-b81a-001cc0382b2f">
    <topic>GnuTLS -- flaw in DTLS protocol implementation</topic>
    <affects>
      <package>
	<name>gnutls</name>
	<range><lt>3.6.13</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The GnuTLS project reports:</p>
	<blockquote cite="https://gnutls.org/security-new.html#GNUTLS-SA-2020-03-31">
	  <p>It was found that GnuTLS 3.6.3 introduced a regression in the DTLS
	    protocol implementation. This caused the DTLS client to not
	    contribute any randomness to the DTLS negotiation breaking the
	    security guarantees of the DTLS protocol.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://gnutls.org/security-new.html#GNUTLS-SA-2020-03-31</url>
      <cvename>CVE-2020-11501</cvename>
    </references>
    <dates>
      <discovery>2020-03-31</discovery>
      <entry>2020-03-31</entry>
    </dates>
  </vuln>

  <vuln vid="d331f691-71f4-11ea-8bb5-6cc21735f730">
    <topic>PostgresSQL -- ALTER ... DEPENDS ON EXTENSION is missing authorization checks</topic>
    <affects>
      <package>
	<name>postgresql12-server</name>
	<range><lt>12.2</lt></range>
      </package>
      <package>
	<name>postgresql11-server</name>
	<range><lt>11.7</lt></range>
      </package>
      <package>
	<name>postgresql10-server</name>
	<range><lt>10.12</lt></range>
      </package>
     <package>
	<name>postgresql96-server</name>
	<range><lt>9.6.17</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The PostgreSQL project reports:</p>
	<blockquote cite="https://www.postgresql.org/about/news/2011/">
	  <p>
	    Versions Affected: 9.6 - 12
	  </p>
	  <p>
	    The ALTER ... DEPENDS ON EXTENSION sub-commands do not perform
	    authorization checks, which can allow an unprivileged user to drop
	    any function, procedure, materialized view, index, or trigger under
	    certain conditions. This attack is possible if an administrator has
	    installed an extension and an unprivileged user can CREATE, or an
	    extension owner either executes DROP EXTENSION predictably or can be
	    convinced to execute DROP EXTENSION.
	  </p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://www.postgresql.org/about/news/1960/</url>
      <cvename>CVE-2020-1720</cvename>
    </references>
    <dates>
      <discovery>2020-02-13</discovery>
      <entry>2020-03-29</entry>
    </dates>
  </vuln>

  <vuln vid="090763f6-7030-11ea-93dd-080027846a02">
    <topic>mediawiki -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>mediawiki131</name>
	<range><lt>1.31.7</lt></range>
      </package>
      <package>
	<name>mediawiki133</name>
	<range><lt>1.33.3</lt></range>
      </package>
      <package>
	<name>mediawiki134</name>
	<range><lt>1.34.1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Mediawiki reports:</p>
	<blockquote cite="https://lists.wikimedia.org/pipermail/mediawiki-announce/2020-March/000247.html">
	  <p>Security fixes:
	    T246602:jquery.makeCollapsible allows applying event handler to any CSS
	    selector.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://lists.wikimedia.org/pipermail/mediawiki-announce/2020-March/000247.html</url>
    </references>
    <dates>
      <discovery>2020-03-02</discovery>
      <entry>2020-03-27</entry>
    </dates>
  </vuln>

  <vuln vid="08fba28b-6f9f-11ea-bd0b-001b217b3468">
    <topic>Gitlab -- Multiple Vulnerabilities</topic>
    <affects>
      <package>
	<name>gitlab-ce</name>
	<range><ge>12.9.0</ge><lt>12.9.1</lt></range>
	<range><ge>12.8.0</ge><lt>12.8.8</lt></range>
	<range><ge>0</ge><lt>12.7.8</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Gitlab reports:</p>
	<blockquote cite="https://about.gitlab.com/releases/2020/03/26/security-release-12-dot-9-dot-1-released/">
	  <p>Arbitrary File Read when Moving an Issue</p>
	  <p>Path Traversal in NPM Package Registry</p>
	  <p>SSRF on Project Import</p>
	  <p>External Users Can Create Personal Snippet</p>
	  <p>Triggers Decription Can be Updated by Other Maintainers in Project</p>
	  <p>Information Disclosure on Confidential Issues Moved to Private Programs</p>
	  <p>Potential DoS in Repository Archive Download</p>
	  <p>Blocked Users Can Still Pull/Push Docker Images</p>
	  <p>Repository Mirroring not Disabled when Feature not Activated</p>
	  <p>Vulnerability Feedback Page Was Leaking Information on Vulnerabilities</p>
	  <p>Stored XSS Vulnerability in Admin Feature</p>
	  <p>Upload Feature Allowed a User to Read Unauthorized Exported Files</p>
	  <p>Unauthorized Users Are Able to See CI Metrics</p>
	  <p>Last Pipeline Status of a Merge Request Leaked</p>
	  <p>Blind SSRF on FogBugz</p>
	  <p>Update Nokogiri dependency</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://about.gitlab.com/releases/2020/03/26/security-release-12-dot-9-dot-1-released/</url>
      <cvename>CVE-2020-10953</cvename>
      <cvename>CVE-2020-10956</cvename>
      <cvename>CVE-2020-10954</cvename>
      <cvename>CVE-2020-10952</cvename>
      <cvename>CVE-2020-10955</cvename>
      <cvename>CVE-2020-9795</cvename>
    </references>
    <dates>
      <discovery>2020-03-26</discovery>
      <entry>2020-03-26</entry>
    </dates>
  </vuln>

  <vuln vid="40194e1c-6d89-11ea-8082-80ee73419af3">
    <topic>rubygem-json -- Unsafe Objection Creation Vulnerability in JSON (Additional fix)</topic>
    <affects>
      <package>
	<name>rubygem-json</name>
	<range><lt>2.3.0</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<blockquote cite="https://www.ruby-lang.org/en/news/2020/03/19/json-dos-cve-2020-10663/">
	  <p>When parsing certain JSON documents, the json gem (including the
	    one bundled with Ruby) can be coerced into creating arbitrary objects
	    in the target system.</p>
	  <p>This is the same issue as CVE-2013-0269. The previous fix was incomplete,
	     which addressed JSON.parse(user_input), but didn’t address some other
	     styles of JSON parsing including JSON(user_input) and
	     JSON.parse(user_input, nil).</p>
	  <p>See CVE-2013-0269 in detail. Note that the issue was exploitable to
	    cause a Denial of Service by creating many garbage-uncollectable
	    Symbol objects, but this kind of attack is no longer valid because
	    Symbol objects are now garbage-collectable. However, creating arbitrary
	    bjects may cause severe security consequences depending upon the
	    application code.</p>
	  <p>Please update the json gem to version 2.3.0 or later. You can use
	     gem update json to update it. If you are using bundler, please add
	     gem "json", "&gt;= 2.3.0" to your Gemfile.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://www.ruby-lang.org/en/news/2020/03/19/json-dos-cve-2020-10663/</url>
      <cvename>CVE-2020-10663</cvename>
    </references>
    <dates>
      <discovery>2020-03-19</discovery>
      <entry>2020-03-26</entry>
      <modified>2020-04-02</modified>
    </dates>
  </vuln>

  <vuln vid="5bf6ed6d-9002-4f43-ad63-458f59e45384">
    <topic>jenkins -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>jenkins</name>
	<range><le>2.227</le></range>
      </package>
      <package>
	<name>jenkins-lts</name>
	<range><le>2.204.5</le></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Jenkins Security Advisory:</p>
	<blockquote cite="https://jenkins.io/security/advisory/2020-03-25/">
	  <h1>Description</h1>
	  <h5>(High) SECURITY-1774 / CVE-2020-2160</h5>
	  <p>CSRF protection for any URL could be bypassed</p>
	  <h5>(Medium) SECURITY-1781 / CVE-2020-2161</h5>
	  <p>Stored XSS vulnerability in label expression validation</p>
	  <h5>(Medium) SECURITY-1793 / CVE-2020-2162</h5>
	  <p>Stored XSS vulnerability in file parameters</p>
	  <h5>(Medium) SECURITY-1796 / CVE-2020-2163</h5>
	  <p>Stored XSS vulnerability in list view column headers</p>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2020-2160</cvename>
      <cvename>CVE-2020-2161</cvename>
      <cvename>CVE-2020-2162</cvename>
      <cvename>CVE-2020-2163</cvename>
      <url>https://jenkins.io/security/advisory/2020-03-25/</url>
    </references>
    <dates>
      <discovery>2020-03-25</discovery>
      <entry>2020-03-25</entry>
    </dates>
  </vuln>

  <vuln vid="97fcc60a-6ec0-11ea-a84a-4c72b94353b5">
    <topic>phpMyAdmin -- SQL injection</topic>
    <affects>
      <package>
	<name>phpMyAdmin</name>
	<name>phpMyAdmin-php72</name>
	<name>phpMyAdmin-php73</name>
	<name>phpMyAdmin-php74</name>
	<name>phpMyAdmin5</name>
	<name>phpMyAdmin5-php72</name>
	<name>phpMyAdmin5-php73</name>
	<name>phpMyAdmin5-php74</name>
	<range><lt>4.9.5</lt></range>
	<range><ge>5.0</ge><lt>5.0.2</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>phpMyAdmin Team reports:</p>
	<blockquote cite="https://www.phpmyadmin.net/news/2020/3/21/phpmyadmin-495-and-502-are-released/">
	  <p>PMASA-2020-2 SQL injection vulnerability in the user accounts page, particularly when changing a password</p>
	  <p>PMASA-2020-3 SQL injection vulnerability relating to the search feature</p>
	  <p>PMASA-2020-4 SQL injection and XSS having to do with displaying results</p>
	  <p>Removing of the "options" field for the external transformation</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://www.phpmyadmin.net/news/2020/3/21/phpmyadmin-495-and-502-are-released/</url>
    </references>
    <dates>
      <discovery>2020-03-21</discovery>
      <entry>2020-03-25</entry>
    </dates>
  </vuln>

  <vuln vid="36def7ba-6d2b-11ea-b115-643150d3111d">
    <topic>puppetserver and puppetdb -- Puppet Server and PuppetDB may leak sensitive information via metrics API</topic>
    <affects>
      <package>
	<name>puppetdb5</name>
	<range><lt>5.2.13</lt></range>
      </package>
      <package>
	<name>puppetdb6</name>
	<range><lt>6.9.1</lt></range>
      </package>
      <package>
	<name>puppetserver5</name>
	<range><lt>5.3.12</lt></range>
      </package>
      <package>
	<name>puppetserver6</name>
	<range><lt>6.9.2</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Puppetlabs reports:</p>
	<blockquote cite="https://puppet.com/security/cve/CVE-2020-7943/">
	  <p>Puppet Server and PuppetDB provide useful performance and debugging information via their metrics API endpoints. For PuppetDB this may contain things like hostnames. Puppet Server reports resource names and titles for defined types (which may contain sensitive information) as well as function names and class names. Previously, these endpoints were open to the local network.</p>
	  <p>PE 2018.1.13 &amp; 2019.4.0, Puppet Server 6.9.1 &amp; 5.3.12, and PuppetDB 6.9.1 &amp; 5.2.13 disable trapperkeeper-metrics /v1 metrics API and only allows /v2 access on localhost by default.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2020-7943</cvename>
      <url>https://puppet.com/security/cve/CVE-2020-7943/</url>
    </references>
    <dates>
      <discovery>2020-03-10</discovery>
      <entry>2020-03-23</entry>
    </dates>
  </vuln>

  <vuln vid="77687355-52aa-11ea-b115-643150d3111d">
    <topic>puppet6 -- Arbitrary Catalog Retrieval</topic>
    <affects>
      <package>
	<name>puppet6</name>
	<range><lt>6.13.0</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Puppetlabs reports:</p>
	<blockquote cite="https://puppet.com/security/cve/CVE-2020-7942/">
	  <p>Previously, Puppet operated on a model that a node with a valid certificate was entitled to all information in the system and that a compromised certificate allowed access to everything in the infrastructure. When a node's catalog falls back to the `default` node, the catalog can be retrieved for a different node by modifying facts for the Puppet run. This issue can be mitigated by setting `strict_hostname_checking = true` in `puppet.conf` on your Puppet master.</p>
	  <p>Puppet 6.13.0 changes the default behavior for strict_hostname_checking from false to true. It is recommended that Puppet Open Source and Puppet Enterprise users that are not upgrading still set strict_hostname_checking to true to ensure secure behavior.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2020-7942</cvename>
      <url>https://puppet.com/security/cve/CVE-2020-7942/</url>
    </references>
    <dates>
      <discovery>2020-02-18</discovery>
      <entry>2020-03-23</entry>
    </dates>
  </vuln>

  <vuln vid="6b90acba-6a0a-11ea-92ab-00163e433440">
    <topic>FreeBSD -- Kernel memory disclosure with nested jails</topic>
    <affects>
      <package>
	<name>FreeBSD-kernel</name>
	<range><ge>12.1</ge><lt>12.1_3</lt></range>
	<range><ge>11.3</ge><lt>11.3_7</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<h1>Problem Description:</h1>
	<p>A missing NUL-termination check for the jail_set(2) configration
	option "osrelease" may return more bytes when reading the jail
	configuration back with jail_get(2) than were originally set.</p>
	<h1>Impact:</h1>
	<p>For jails with a non-default setting of children.max &gt; 0 ("nested
	jails") a superuser inside a jail can create a jail and may be able to
	read and take advantage of exposed kernel memory.</p>
      </body>
    </description>
    <references>
      <cvename>CVE-2020-7453</cvename>
      <freebsdsa>SA-20:08.jail</freebsdsa>
    </references>
    <dates>
      <discovery>2020-03-19</discovery>
      <entry>2020-03-19</entry>
    </dates>
  </vuln>

  <vuln vid="0cc7e547-6a0a-11ea-92ab-00163e433440">
    <topic>FreeBSD -- Incorrect user-controlled pointer use in epair</topic>
    <affects>
      <package>
	<name>FreeBSD-kernel</name>
	<range><ge>12.1</ge><lt>12.1_3</lt></range>
	<range><ge>11.3</ge><lt>11.3_7</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<h1>Problem Description:</h1>
	<p>Incorrect use of a potentially user-controlled pointer in the kernel
	allowed vnet jailed users to panic the system and potentially execute
	aribitrary code in the kernel.</p>
	<h1>Impact:</h1>
	<p>Users with root level access (or the PRIV_NET_IFCREATE privilege)
	can panic the system, or potentially escape the jail or execute
	arbitrary code with kernel priviliges.</p>
      </body>
    </description>
    <references>
      <cvename>CVE-2020-7452</cvename>
      <freebsdsa>SA-20:07.epair</freebsdsa>
    </references>
    <dates>
      <discovery>2020-03-19</discovery>
      <entry>2020-03-19</entry>
    </dates>
  </vuln>

  <vuln vid="b2b83761-6a09-11ea-92ab-00163e433440">
    <topic>FreeBSD -- Insufficient ixl(4) ioctl(2) privilege checking</topic>
    <affects>
      <package>
	<name>FreeBSD-kernel</name>
	<range><ge>12.1</ge><lt>12.1_3</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<h1>Problem Description:</h1>
	<p>The driver-specific ioctl(2) command handlers in ixl(4) failed to
	check whether the caller has sufficient privileges to perform the
	corresponding operation.</p>
	<h1>Impact:</h1>
	<p>The ixl(4) handler permits unprivileged users to trigger updates to
	the device's non-volatile memory (NVM).</p>
      </body>
    </description>
    <references>
      <cvename>CVE-2019-15877</cvename>
      <freebsdsa>SA-20:06.if_ixl_ioctl</freebsdsa>
    </references>
    <dates>
      <discovery>2020-03-19</discovery>
      <entry>2020-03-19</entry>
    </dates>
  </vuln>

  <vuln vid="3c10ccdf-6a09-11ea-92ab-00163e433440">
    <topic>FreeBSD -- Insufficient oce(4) ioctl(2) privilege checking</topic>
    <affects>
      <package>
	<name>FreeBSD-kernel</name>
	<range><ge>12.1</ge><lt>12.1_3</lt></range>
	<range><ge>11.3</ge><lt>11.3_7</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<h1>Problem Description:</h1>
	<p>The driver-specific ioctl(2) command handlers in oce(4) failed to
	check whether the caller has sufficient privileges to perform the
	corresponding operation.</p>
	<h1>Impact:</h1>
	<p>The oce(4) handler permits unprivileged users to send passthrough
	commands to device firmware.</p>
      </body>
    </description>
    <references>
      <cvename>CVE-2019-15876</cvename>
      <freebsdsa>SA-20:05.if_oce_ioctl</freebsdsa>
    </references>
    <dates>
      <discovery>2020-03-19</discovery>
      <entry>2020-03-19</entry>
    </dates>
  </vuln>

  <vuln vid="0e06013e-6a06-11ea-92ab-00163e433440">
    <topic>FreeBSD -- TCP IPv6 SYN cache kernel information disclosure</topic>
    <affects>
      <package>
	<name>FreeBSD-kernel</name>
	<range><ge>12.1</ge><lt>12.1_3</lt></range>
	<range><ge>11.3</ge><lt>11.3_7</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<h1>Problem Description:</h1>
	<p>When a TCP server transmits or retransmits a TCP SYN-ACK segment
	over IPv6, the Traffic Class field is not initialized. This also
	applies to challenge ACK segments, which are sent in response to
	received RST segments during the TCP connection setup phase.</p>
	<h1>Impact:</h1>
	<p>For each TCP SYN-ACK (or challenge TCP-ACK) segment sent over IPv6,
	one byte of kernel memory is transmitted over the network.</p>
      </body>
    </description>
    <references>
      <cvename>CVE-2020-7451</cvename>
      <freebsdsa>SA-20:04.tcp</freebsdsa>
    </references>
    <dates>
      <discovery>2020-03-19</discovery>
      <entry>2020-03-19</entry>
    </dates>
  </vuln>

  <vuln vid="3d19c776-68e7-11ea-91db-0050562a4d7b">
    <topic>www/py-bleach -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>py27-bleach</name>
	<name>py35-bleach</name>
	<name>py36-bleach</name>
	<name>py37-bleach</name>
	<name>py38-bleach</name>
	<range><lt>3.1.2</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<blockquote>
	  <p>* ``bleach.clean`` behavior parsing embedded MathML and SVG content
		with RCDATA tags did not match browser behavior and could result in
		a mutation XSS.
	  </p>
	  <p>  Calls to ``bleach.clean`` with ``strip=False`` and ``math`` or
		``svg`` tags and one or more of the RCDATA tags ``script``,
		``noscript``, ``style``, ``noframes``, ``iframe``, ``noembed``, or
		``xmp`` in the allowed tags whitelist were vulnerable to a mutation
		XSS.
	  </p>
	  <p>* ``bleach.clean`` behavior parsing ``noscript`` tags did not match
		browser behavior.
	  </p>
	  <p>  Calls to ``bleach.clean`` allowing ``noscript`` and one or more of
		the raw text tags (``title``, ``textarea``, ``script``, ``style``,
		``noembed``, ``noframes``, ``iframe``, and ``xmp``) were vulnerable
		to a mutation XSS.
	  </p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://bugzilla.mozilla.org/show_bug.cgi?id=1615315</url>
      <url>https://bugzilla.mozilla.org/show_bug.cgi?id=1621692</url>
    </references>
    <dates>
      <discovery>2020-02-13</discovery>
      <entry>2020-03-18</entry>
    </dates>
  </vuln>

  <vuln vid="4ae135f7-85cd-4c32-ad94-358271b31f7f">
    <topic>zeek -- potential denial of service issues</topic>
    <affects>
      <package>
	<name>zeek</name>
	<range><lt>3.0.3</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Jon Siwek of Corelight reports:</p>
	<blockquote cite="https://raw.githubusercontent.com/zeek/zeek/9dda3602a760f00d9532c6314ea79108106033fa/NEWS">
	  <p>This release addresses the following security issues:</p>
	  <ul>
	  <li>
	  Potential Denial of Service due to memory leak in DNS
	  TSIG message parsing. </li>
	  <li>
	  Potential Denial of Service due to memory leak (or assertion
	  when compiling with assertions enabled) when receiving a
	  second SSH KEX message after a first. </li>
	  <li>
	  Potential Denial of Service due to buffer read overflow
	  and/or memory leaks in Kerberos analyzer.  The buffer
	  read overflow could occur when the Kerberos message
	  indicates it contains an IPv6 address, but does not send
	  enough data to parse out a full IPv6 address.  A memory
	  leak could occur when processing KRB_KDC_REQ KRB_KDC_REP
	  messages for message types that do not match a known/expected
	  type. </li>
	  <li>
	  Potential Denial of Service when sending many zero-length
	  SSL/TLS certificate data.  Such messages underwent the
	  full Zeek file analysis treatment which is expensive (and
	  meaninguless here) compared to how cheaply one can "create"
	  or otherwise indicate many zero-length contained in an
	  SSL message. </li>
	  <li>
	  Potential Denial of Service due to buffer read overflow
	  in SMB transaction data string handling.  The length of
	  strings being parsed from SMB messages was trusted to be
	  whatever the message claimed instead of the actual length
	  of data found in the message. </li>
	  <li>
	  Potential Denial of Service due to null pointer dereference
	  in FTP ADAT Base64 decoding. </li>
	  <li>
	  Potential Denial of Service due buffer read overflow in
	  FTP analyzer word/whitespace handling.  This typically
	  won't be a problem in most default deployments of Zeek
	  since the FTP analyzer receives data from a ContentLine
	  (NVT) support analyzer which first null-terminates the
	  buffer used for further FTP parsing. </li>
	  </ul>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://github.com/zeek/zeek/blob/9dda3602a760f00d9532c6314ea79108106033fa/NEWS</url>
    </references>
    <dates>
      <discovery>2020-02-25</discovery>
      <entry>2020-03-15</entry>
    </dates>
  </vuln>

  <vuln vid="c3600a64-64ea-11ea-bdff-e0d55e2a8bf9">
    <topic>Okular -- Local binary execution via action links</topic>
    <affects>
      <package>
	<name>okular</name>
	<range><lt>19.12.3_3</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Albert Astals Cid:</p>
	<blockquote cite="https://kde.org/info/security/advisory-20200312-1.txt">
	  <p>Okular can be tricked into executing local binaries via specially crafted
	    PDF files.</p>
	  <p>This binary execution can require almost no user interaction.</p>
	  <p>   No parameters can be passed to those local binaries.</p>
	  <p>We have not been able to identify any binary that will cause actual damage,
	    be it in the hardware or software level, when run without parameters.</p>

	  <p>We remain relatively confident that for this issue to do any actual damage,
it has to run a binary specially crafted. That binary must have been deployed
to the user system via another method, be it the user downloading it directly
as an email attachment, webpage download, etc. or by the system being already
compromised.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://kde.org/info/security/advisory-20200312-1.txt</url>
    </references>
    <dates>
      <discovery>2020-03-12</discovery>
      <entry>2020-03-13</entry>
    </dates>
  </vuln>

  <vuln vid="9a09eaa2-6448-11ea-abb7-001b217b3468">
    <topic>Gitlab -- Vulnerability</topic>
    <affects>
      <package>
	<name>gitlab-ce</name>
	<range><ge>12.8.0</ge><lt>12.8.6</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Gitlab reports:</p>
	<blockquote cite="https://about.gitlab.com/releases/2020/03/11/critical-security-release-gitlab-12-dot-8-dot-6-released/">
	  <p>Email Confirmation not Required on Sign-up</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://about.gitlab.com/releases/2020/03/11/critical-security-release-gitlab-12-dot-8-dot-6-released/</url>
    </references>
    <dates>
      <discovery>2020-03-11</discovery>
      <entry>2020-03-12</entry>
    </dates>
  </vuln>

  <vuln vid="1685144e-63ff-11ea-a93a-080027846a02">
    <topic>Django -- potential SQL injection vulnerability</topic>
    <affects>
      <package>
	<name>py27-django111</name>
	<name>py35-django111</name>
	<name>py36-django111</name>
	<name>py37-django111</name>
	<name>py38-django111</name>
	<range><lt>1.11.29</lt></range>
      </package>
      <package>
	<name>py35-django22</name>
	<name>py36-django22</name>
	<name>py37-django22</name>
	<name>py38-django22</name>
	<range><lt>2.2.11</lt></range>
      </package>
      <package>
	<name>py36-django30</name>
	<name>py37-django30</name>
	<name>py38-django30</name>
	<range><lt>3.0.4</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>MITRE CVE reports:</p>
	<blockquote cite="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-9402">
	  <p>Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4
	    allows SQL Injection if untrusted data is used as a tolerance parameter
	    in GIS functions and aggregates on Oracle. By passing a suitably crafted
	    tolerance to GIS functions and aggregates on Oracle, it was possible to
	    break escaping and inject malicious SQL.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-9402</url>
      <url>https://www.djangoproject.com/weblog/2020/mar/04/security-releases/</url>
      <cvename>CVE-2020-9402</cvename>
    </references>
    <dates>
      <discovery>2020-02-25</discovery>
      <entry>2020-03-12</entry>
    </dates>
  </vuln>

  <vuln vid="1afe9552-5ee3-11ea-9b6d-901b0e934d69">
    <topic>py-matrix-synapse -- users of single-sign-on are vulnerable to phishing</topic>
    <affects>
      <package>
	<name>py35-matrix-synapse</name>
	<name>py36-matrix-synapse</name>
	<name>py37-matrix-synapse</name>
	<range><lt>1.11.1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Matrix developers report:</p>
	<blockquote cite="https://github.com/matrix-org/synapse/releases/tag/v1.11.1">
	  <p>[The 1.11.1] release includes a security fix impacting installations using Single Sign-On (i.e. SAML2 or CAS) for authentication. Administrators of such installations are encouraged to upgrade as soon as possible.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://github.com/matrix-org/synapse/releases/tag/v1.11.1</url>
    </references>
    <dates>
      <discovery>2020-03-03</discovery>
      <entry>2020-03-11</entry>
    </dates>
  </vuln>

  <vuln vid="0032400f-624f-11ea-b495-000d3ab229d6">
    <topic>Node.js -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>node</name>
	<range><lt>13.8.0</lt></range>
      </package>
      <package>
	<name>node12</name>
	<range><lt>12.15.0</lt></range>
      </package>
      <package>
	<name>node10</name>
	<range><lt>10.19.0</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Node.js reports:</p>
	<blockquote cite="https://nodejs.org/en/blog/vulnerability/february-2020-security-releases/">
	  <p>Updates are now available for all active Node.js release lines for the following issues.</p>
	  <h1>HTTP request smuggling using malformed Transfer-Encoding header (Critical) (CVE-2019-15605)HTTP request smuggling using malformed Transfer-Encoding header (Critical) (CVE-2019-15605)</h1>
	  <p>Affected Node.js versions can be exploited to perform HTTP desync attacks and deliver malicious payloads to unsuspecting users. The payloads can be crafted by an attacker to hijack user sessions, poison cookies, perform clickjacking, and a multitude of other attacks depending on the architecture of the underlying system.</p>
	  <h1>HTTP header values do not have trailing OWS trimmed (High) (CVE-2019-15606)</h1>
	  <p>Optional whitespace should be trimmed from HTTP header values. Its presence may allow attackers to bypass security checks based on HTTP header values.</p>
	  <h1>Remotely trigger an assertion on a TLS server with a malformed certificate string (High) (CVE-2019-15604)</h1>
	  <p>Connecting to a NodeJS TLS server with a client certificate that has a type 19 string in its subjectAltName will crash the TLS server if it tries to read the peer certificate.</p>
	  <h1>Strict HTTP header parsing (None)</h1>
	  <p>Increase the strictness of HTTP header parsing. There are no known vulnerabilities addressed, but lax HTTP parsing has historically been a source of problems. Some commonly used sites are known to generate invalid HTTP headers, a --insecure-http-parser CLI option or insecureHTTPParser http option can be used if necessary for interoperability, but is not recommended.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://nodejs.org/en/blog/vulnerability/february-2020-security-releases/</url>
      <cvename>CVE-2019-15605</cvename>
      <cvename>CVE-2019-15606</cvename>
      <cvename>CVE-2019-15604</cvename>
    </references>
    <dates>
      <discovery>2020-02-06</discovery>
      <entry>2020-03-09</entry>
    </dates>
  </vuln>

  <vuln vid="be088777-6085-11ea-8609-08002731610e">
    <topic>gitea -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>gitea</name>
	<range><lt>1.11.2</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The Gitea Team reports for release 1.11.0:</p>
	<blockquote cite="https://github.com/go-gitea/gitea/releases/tag/v1.11.0">
	  <ul>
	    <li>Never allow an empty password to validate (#9682) (#9683)</li>
	    <li>Prevent redirect to Host (#9678) (#9679)</li>
	    <li>Swagger hide search field (#9554)</li>
	    <li>Add "search" to reserved usernames (#9063)</li>
	    <li>Switch to fomantic-ui (#9374)</li>
	    <li>Only serve attachments when linked to issue/release and if accessible by user (#9340)</li>
	  </ul>
	</blockquote>
	<p>The Gitea Team reports for release 1.11.2:</p>
	<blockquote cite="https://github.com/go-gitea/gitea/releases/tag/v1.11.2">
	  <ul>
	    <li>Ensure only own addresses are updated (#10397) (#10399)</li>
	    <li>Logout POST action (#10582) (#10585)</li>
	    <li>Org action fixes and form cleanup (#10512) (#10514)</li>
	    <li>Change action GETs to POST (#10462) (#10464)</li>
	    <li>Fix admin notices (#10480) (#10483)</li>
	    <li>Change admin dashboard to POST (#10465) (#10466)</li>
	    <li>Update markbates/goth (#10444) (#10445)</li>
	    <li>Update crypto vendors (#10385) (#10398)</li>
	  </ul>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://blog.gitea.io/2020/02/gitea-1.11.0-is-released/</url>
      <url>https://blog.gitea.io/2020/03/gitea-1.11.2-is-released/</url>
      <freebsdpr>ports/244025</freebsdpr>
    </references>
    <dates>
      <discovery>2019-11-18</discovery>
      <entry>2020-03-07</entry>
    </dates>
  </vuln>

  <vuln vid="8c98e643-6008-11ea-af63-38d547003487">
    <topic>salt -- salt-api vulnerability</topic>
    <affects>
      <package>
	<name>py27-salt</name>
	<name>py32-salt</name>
	<name>py33-salt</name>
	<name>py34-salt</name>
	<name>py35-salt</name>
	<name>py36-salt</name>
	<name>py37-salt</name>
	<name>py38-salt</name>
	<range><lt>2019.2.3</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>SaltStack reports:</p>
	<blockquote cite="https://docs.saltstack.com/en/latest/topics/releases/2019.2.3.html">
	  <p>With the Salt NetAPI enabled in addition to having a SSH roster
	    defined, unauthenticated access is possible when specifying the
	    client as SSH.</p>
	  <p>Additionally, when the raw_shell option is specified any arbitrary
	    command may be run on the Salt master when specifying SSH options.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2019-17361</cvename>
      <url>https://docs.saltstack.com/en/latest/topics/releases/2019.2.3.html</url>
      <url>https://nvd.nist.gov/vuln/detail/CVE-2019-17361</url>
    </references>
    <dates>
      <discovery>2020-01-15</discovery>
      <entry>2020-03-07</entry>
    </dates>
  </vuln>

  <vuln vid="62f2182c-5f7a-11ea-abb7-001b217b3468">
    <topic>Gitlab -- Multiple Vulnerabilities</topic>
    <affects>
      <package>
	<name>gitlab-ce</name>
	<range><ge>12.8.0</ge><lt>12.8.2</lt></range>
	<range><ge>12.7.0</ge><lt>12.7.7</lt></range>
	<range><ge>0</ge><lt>12.6.8</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Gitlab reports:</p>
	<blockquote cite="https://about.gitlab.com/releases/2020/03/04/gitlab-12-dot-8-dot-2-released/">
	  <p>Directory Traversal to Arbitrary File Read</p>
	  <p>Account Takeover Through Expired Link</p>
	  <p>Server Side Request Forgery Through Deprecated Service</p>
	  <p>Group Two-Factor Authentication Requirement Bypass</p>
	  <p>Stored XSS in Merge Request Pages</p>
	  <p>Stored XSS in Merge Request Submission Form</p>
	  <p>Stored XSS in File View</p>
	  <p>Stored XSS in Grafana Integration</p>
	  <p>Contribution Analytics Exposed to Non-members</p>
	  <p>Incorrect Access Control in Docker Registry via Deploy Tokens</p>
	  <p>Denial of Service via Permission Checks</p>
	  <p>Denial of Service in Design For Public Issue</p>
	  <p>Incorrect Access Control via LFS Import</p>
	  <p>Unescaped HTML in Header</p>
	  <p>Private Merge Request Titles Leaked via Widget</p>
	  <p>Project Namespace Exposed via Vulnerability Feedback Endpoint</p>
	  <p>Denial of Service Through Recursive Requests</p>
	  <p>Project Authorization Not Being Updated</p>
	  <p>Incorrect Permission Level For Group Invites</p>
	  <p>Disclosure of Private Group Epic Information</p>
	  <p>User IP Address Exposed via Badge images</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://about.gitlab.com/releases/2020/03/04/gitlab-12-dot-8-dot-2-released/</url>
      <cvename>CVE-2020-8113</cvename>
    </references>
    <dates>
      <discovery>2020-03-04</discovery>
      <entry>2020-03-06</entry>
    </dates>
  </vuln>

  <vuln vid="591a706b-5cdc-11ea-9a0a-206a8a720317">
    <topic>ntp -- Multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>FreeBSD</name>
	<range><ge>11.3</ge><lt>11.3_7</lt></range>
	<range><ge>12.1</ge><lt>12.1_3</lt></range>
      </package>
      <package>
	<name>ntp</name>
	<range><lt>4.2.8p14</lt></range>
      </package>
      <package>
	<name>ntp-devel</name>
	<range><le>4.3.99_6</le></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>nwtime.org reports:</p>
	<blockquote cite="https://support.ntp.org/bin/view/Main/SecurityNotice">
	  <p>Three ntp vulnerabilities, Depending on configuration, may have
	    little impact up to termination of the ntpd process.</p>
	  <p>NTP Bug 3610:  Process_control() should exit earlier on short
	    packets.  On systems that override the default and enable ntpdc
	    (mode 7) fuzz testing detected that  a short packet will cause
	    ntpd to read uninitialized data.</p>
	  <p>NTP Bug 3596:  An unauthenticated unmonitored ntpd is vulnerable
	    to attack on IPv4 with highly predictable transmit timestamps. An
	    off-path attacker who can query time from the victim's ntp which
	    receives time from an unauthenticated time source must be able to
	    send from a spoofed IPv4 address of upstream ntp server and and
	    the victim must be able to process a large number of packets with
	    the spoofed IPv4 address of the upstream server.  After eight or
	    more successful attacks in a row the attacker can either modify
	    the victim's clock by a small amount or cause ntpd to terminate.
	    The attack is especially effective when unusually short poll
	    intervals have been configured.</p>
	  <p>NTP Bug 3592:  The fix for https://bugs.ntp.org/3445 introduced
	    a bug such that a ntp can be prevented from initiating a time
	    volley to its peer resulting in a DoS.</p>
	  <p>All three NTP bugs may result in DoS or terimation of the ntp
	    daemon.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <freebsdsa>SA-20:09.ntp</freebsdsa>
    </references>
    <dates>
      <discovery>2019-05-30</discovery>
      <entry>2020-03-03</entry>
    </dates>
  </vuln>

  <vuln vid="b66583ae-5aee-4cd5-bb31-b2d397f8b6b3">
    <topic>librsvg2 -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>librsvg2</name>
	<range><lt>2.40.21</lt></range>
      </package>
      <package>
	<name>librsvg2-rust</name>
	<range><ge>2.41.0</ge><lt>2.46.3</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Librsvg2 developers reports:</p>
	<blockquote cite="https://mail.gnome.org/archives/ftp-release-list/2020-February/msg00133.htmlE">
	  <p>Backport the following fixes from 2.46.x:</p>
	  <p>Librsvg now has limits on the number of loaded XML elements,
	    and the number of referenced elements within an SVG document.  This
	    is to mitigate malicious SVGs which try to consume all memory, and
	    those which try to consume an exponential amount of CPU time.</p>
	  <p>Fix stack exhaustion with circular references in &lt;use&gt; elements.</p>
	  <p>Fix a denial-of-service condition from exponential explosion
	    of rendered elements, through nested use of SVG &lt;use&gt; elements in
	    malicious SVGs.  This is similar to the XML "billion laughs attack"
	    but for SVG instancing.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://mail.gnome.org/archives/ftp-release-list/2020-February/msg00133.html</url>
      <cvename>CVE-2019-20446</cvename>
    </references>
    <dates>
      <discovery>2020-02-26</discovery>
      <entry>2020-03-02</entry>
    </dates>
  </vuln>

  <vuln vid="d37407bd-5c5f-11ea-bb2a-8c164582fbac">
    <topic>TiMidity++ -- Multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>timidity++</name>
	<range><lt>2.15.0</lt></range>
      </package>
      <package>
	<name>timidity++-emacs</name>
	<range><lt>2.15.0</lt></range>
      </package>
      <package>
	<name>timidity++-gtk</name>
	<range><lt>2.15.0</lt></range>
      </package>
      <package>
	<name>timidity++-motif</name>
	<range><lt>2.15.0</lt></range>
      </package>
      <package>
	<name>timidity++-slang</name>
	<range><lt>2.15.0</lt></range>
      </package>
      <package>
	<name>timidity++-tcltk</name>
	<range><lt>2.15.0</lt></range>
      </package>
      <package>
	<name>timidity++-xaw</name>
	<range><lt>2.15.0</lt></range>
      </package>
      <package>
	<name>timidity++-xskin</name>
	<range><lt>2.15.0</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>qflb.wu of DBAPPSecurity reports:</p>
	<blockquote cite="https://seclists.org/fulldisclosure/2017/Jul/83">
	  <p>Ihe insert_note_steps function in readmidi.c in TiMidity++ 2.14.0
	  can cause a denial of service(divide-by-zero error and application
	  crash) via a crafted mid file.</p>
	  <p>The resample_gauss function in resample.c in TiMidity++ 2.14.0
	  can cause a denial of service(heap-buffer-overflow) via a crafted
	  mid file.</p>
	  <p>The play_midi function in playmidi.c in TiMidity++ 2.14.0 can
	  cause a denial of service(large loop and CPU consumption) via
	  a crafted mid file.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://seclists.org/fulldisclosure/2017/Jul/83</url>
      <cvename>CVE-2017-11546</cvename>
      <cvename>CVE-2017-11547</cvename>
      <cvename>CVE-2017-11549</cvename>
    </references>
    <dates>
      <discovery>2017-07-31</discovery>
      <entry>2020-03-02</entry>
    </dates>
  </vuln>

  <vuln vid="e59cb761-5ad8-11ea-abb7-001b217b3468">
    <topic>Solr -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>apache-solr</name>
	<range><lt>8.3.1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Community reports:</p>
	<blockquote cite="https://lucene.apache.org/solr/security.html">
	  <p>8.1.1 and 8.2.0 users check ENABLE_REMOTE_JMX_OPTS setting</p>
	  <p>Apache Solr RCE vulnerability due to bad config default</p>
	  <p>Apache Solr RCE through VelocityResponseWriter</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://lucene.apache.org/solr/security.html</url>
      <cvename>CVE-2019-17558</cvename>
    </references>
    <dates>
      <discovery>2019-12-30</discovery>
      <entry>2020-02-29</entry>
    </dates>
  </vuln>

  <vuln vid="f0683976-5779-11ea-8a77-1c872ccb1e42">
    <topic>OpenSMTPd -- LPE and RCE in OpenSMTPD's default install</topic>
    <affects>
      <package>
	<name>opensmtpd</name>
	<range><lt>6.6.4,1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>OpenSMTPD developers reports:</p>
	<blockquote cite="https://opensmtpd.org/security.html">
	  <p>An out of bounds read in smtpd allows an attacker to inject arbitrary
	    commands into the envelope file which are then executed as root.
	    Separately, missing privilege revocation in smtpctl allows arbitrary
	    commands to be run with the _smtpq group.</p>
	  <p>An unprivileged local attacker can read the first line of an arbitrary
	    file (for example, root's password hash in /etc/master.passwd) or the
	    entire contents of another user's file (if this file and
	    /var/spool/smtpd/ are on the same filesystem).</p>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2020-8793</cvename>
      <url>https://www.openwall.com/lists/oss-security/2020/02/24/4</url>
      <cvename>CVE-2020-8794</cvename>
      <url>https://www.openwall.com/lists/oss-security/2020/02/24/5</url>
    </references>
    <dates>
      <discovery>2020-02-22</discovery>
      <entry>2020-02-24</entry>
      <modified>2020-02-27</modified>
    </dates>
  </vuln>

  <vuln vid="056ea107-5729-11ea-a2f3-001cc0382b2f">
    <topic>Mbed TLS -- Cache attack against RSA key import in SGX</topic>
    <affects>
      <package>
	<name>mbedtls</name>
	<range><lt>2.16.5</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Janos Follath reports:</p>
	<blockquote cite="https://tls.mbed.org/tech-updates/security-advisories/mbedtls-security-advisory-2020-02">
	  <p>If Mbed TLS is running in an SGX enclave and the adversary has
	    control of the main operating system, they can launch a side
	    channel attack to recover the RSA private key when it is being
	    imported.</p>
	  <p>The attack only requires access to fine grained measurements to
	    cache usage. Therefore the attack might be applicable to a scenario
	    where Mbed TLS is running in TrustZone secure world and the
	    attacker controls the normal world or possibly when Mbed TLS is
	    part of a hypervisor and the adversary has full control of a guest
	    OS.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://tls.mbed.org/tech-updates/security-advisories/mbedtls-security-advisory-2020-02</url>
    </references>
    <dates>
      <discovery>2020-02-18</discovery>
      <entry>2020-02-24</entry>
    </dates>
  </vuln>

  <vuln vid="b70b880f-5727-11ea-a2f3-001cc0382b2f">
    <topic>Mbed TLS -- Side channel attack on ECDSA</topic>
    <affects>
      <package>
	<name>mbedtls</name>
	<range><lt>2.16.4</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Janos Follath reports:</p>
	<blockquote cite="https://tls.mbed.org/tech-updates/security-advisories/mbedtls-security-advisory-2019-12">
	  <p>Our bignum implementation is not constant time/constant trace, so
	    side channel attacks can retrieve the blinded value, factor it (as
	    it is smaller than RSA keys and not guaranteed to have only large
	    prime factors), and then, by brute force, recover the key.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://tls.mbed.org/tech-updates/security-advisories/mbedtls-security-advisory-2019-12</url>
      <cvename>CVE-2019-18222</cvename>
    </references>
    <dates>
      <discovery>2019-10-25</discovery>
      <entry>2020-02-24</entry>
    </dates>
  </vuln>

  <vuln vid="8e3f1812-54d9-11ea-8d49-d4c9ef517024">
    <topic>WeeChat -- Multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>weechat</name>
	<range><lt>2.7.1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The WeeChat project reports:</p>
	<blockquote cite="https://weechat.org/doc/security/">
	  <p>Buffer overflow when receiving a malformed IRC message 324 (channel
	    mode). (CVE-2020-8955)</p>
	  <p>Buffer overflow when a new IRC message 005 is received with longer
	    nick prefixes.</p>
	  <p>Crash when receiving a malformed IRC message 352 (WHO).</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://weechat.org/doc/security/</url>
      <cvename>CVE-2020-8955</cvename>
    </references>
    <dates>
      <discovery>2020-02-20</discovery>
      <entry>2020-02-21</entry>
    </dates>
  </vuln>

  <vuln vid="1cb0af4e-d641-4f99-9432-297a89447a97">
    <topic>webkit-gtk3 -- Multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>webkit2-gtk3</name>
	<range><lt>2.26.4</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The WebKitGTK project reports multiple vulnerabilities.</p>
      </body>
    </description>
    <references>
      <url>https://webkitgtk.org/security/WSA-2020-0002.html</url>
      <cvename>CVE-2020-3862</cvename>
      <cvename>CVE-2020-3864</cvename>
      <cvename>CVE-2020-3865</cvename>
      <cvename>CVE-2020-3867</cvename>
      <cvename>CVE-2020-3868</cvename>
    </references>
    <dates>
      <discovery>2020-02-14</discovery>
      <entry>2020-02-19</entry>
    </dates>
  </vuln>

  <vuln vid="6025d173-4279-11ea-b184-f8b156ac3ff9">
    <topic>FreeBSD -- kernel stack data disclosure</topic>
    <affects>
      <package>
	<name>FreeBSD-kernel</name>
	<range><ge>12.1</ge><lt>12.1_2</lt></range>
	<range><ge>12.0</ge><lt>12.0_13</lt></range>
	<range><ge>11.3</ge><lt>11.3_6</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<h1>Problem Description:</h1>
	<p>Due to incorrect initialization of a stack data structure, up to 20
	bytes of kernel data stored previously stored on the stack will be
	exposed to a crashing user process.</p>
	<h1>Impact:</h1>
	<p>Sensitive kernel data may be disclosed.</p>
      </body>
    </description>
    <references>
      <cvename>CVE-2019-15875</cvename>
      <freebsdsa>SA-20:03.thrmisc</freebsdsa>
    </references>
    <dates>
      <discovery>2020-01-28</discovery>
      <entry>2020-01-29</entry>
    </dates>
  </vuln>

  <vuln vid="5797c807-4279-11ea-b184-f8b156ac3ff9">
    <topic>FreeBSD -- Missing IPsec anti-replay window check</topic>
    <affects>
      <package>
	<name>FreeBSD-kernel</name>
	<range><ge>12.0</ge><lt>12.0_13</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<h1>Problem Description:</h1>
	<p>A missing check means that an attacker can reinject an old packet and
	it will be accepted and processed by the IPsec endpoint.</p>
	<h1>Impact:</h1>
	<p>The impact depends on the higher-level protocols in use over IPsec.
	For example, an attacker who can capture and inject packets could
	cause an action that was intentionally performed once to be repeated.</p>
      </body>
    </description>
    <references>
      <cvename>CVE-2019-5613</cvename>
      <freebsdsa>SA-20:02.ipsec</freebsdsa>
    </references>
    <dates>
      <discovery>2020-01-28</discovery>
      <entry>2020-01-29</entry>
    </dates>
  </vuln>

  <vuln vid="22b41bc5-4279-11ea-b184-f8b156ac3ff9">
    <topic>FreeBSD -- libfetch buffer overflow</topic>
    <affects>
      <package>
	<name>FreeBSD</name>
	<range><ge>12.1</ge><lt>12.1_2</lt></range>
	<range><ge>12.0</ge><lt>12.0_13</lt></range>
	<range><ge>11.3</ge><lt>11.3_6</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<h1>Problem Description:</h1>
	<p>A programming error allows an attacker who can specify a URL with a
	username and/or password components to overflow libfetch(3) buffers.</p>
	<h1>Impact:</h1>
	<p>An attacker in control of the URL to be fetched (possibly via HTTP
	redirect) may cause a heap buffer overflow, resulting in program
	misbehavior or malicious code execution.</p>
      </body>
    </description>
    <references>
      <cvename>CVE-2020-7450</cvename>
      <freebsdsa>SA-20:01.libfetch</freebsdsa>
    </references>
    <dates>
      <discovery>2020-01-28</discovery>
      <entry>2020-01-29</entry>
    </dates>
  </vuln>

  <vuln vid="1ece5591-4ea9-11ea-86f0-001b217b3468">
    <topic>Gitlab -- Vulnerability</topic>
    <affects>
      <package>
	<name>gitlab-ce</name>
	<range><ge>12.7.0</ge><lt>12.7.6</lt></range>
	<range><ge>12.6.0</ge><lt>12.6.7</lt></range>
	<range><ge>12.5.0</ge><lt>12.5.10</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Gitlab reports:</p>
	<blockquote cite="https://about.gitlab.com/releases/2020/02/13/critical-security-release-gitlab-12-dot-7-dot-6-released/">
	  <p>Incorrect membership handling of group sharing feature</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://about.gitlab.com/releases/2020/02/13/critical-security-release-gitlab-12-dot-7-dot-6-released/</url>
      <cvename>CVE-2020-8795</cvename>
    </references>
    <dates>
      <discovery>2020-02-13</discovery>
      <entry>2020-02-13</entry>
    </dates>
  </vuln>

  <vuln vid="74db0d02-b140-4c32-aac6-1f1e81e1ad30">
    <topic>dovecot -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>dovecot</name>
	<range><lt>2.3.9.3</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Aki Tuomi reports:</p>
	<blockquote cite="https://dovecot.org/pipermail/dovecot-news/2020-February/000431.html">
	  <p>lib-smtp doesn't handle truncated command parameters properly, resulting
in infinite loop taking 100% CPU for the process. This happens for LMTP
(where it doesn't matter so much) and also for submission-login where
unauthenticated users can trigger it. </p>
	</blockquote>
	<p>Aki also  reports:</p>
	<blockquote cite="https://dovecot.org/pipermail/dovecot-news/2020-February/000430.html">
	  <p>Snippet generation crashes if:

     message is large enough that message-parser returns multiple body
blocks
    The first block(s) don't contain the full snippet (e.g. full of
whitespace)
    input ends with '&gt;'
	</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://dovecot.org/pipermail/dovecot-news/2020-February/000430.html</url>
      <url>https://dovecot.org/pipermail/dovecot-news/2020-February/000431.html</url>
      <cvename>CVE-2020-7046</cvename>
      <cvename>CVE-2020-7967</cvename>
    </references>
    <dates>
      <discovery>2020-01-14</discovery>
      <entry>2020-02-13</entry>
    </dates>
  </vuln>

  <vuln vid="9d6a48a7-4dad-11ea-8a1d-7085c25400ea">
    <topic>grub2-bhyve -- multiple privilege escalations</topic>
    <affects>
      <package>
	<name>grub2-bhyve</name>
	<range><lt>0.40_8</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Reno Robert reports:</p>
	<!-- No public blog entry yet but I'm sure he'll publish one soon. -->
	<blockquote cite="https://www.voidsecurity.in/">
	  <p>FreeBSD uses a two-process model for running a VM. For booting non-FreeBSD
	  guests, a modified grub-emu is used (grub-bhyve). Grub-bhyve executes command
	  from guest grub.cfg file. This is a security problem because grub was never
	  written to handle inputs from OS as untrusted. In the current design, grub
	  and guest OS works across trust boundaries. This exposes a grub to untrusted
	  inputs from guest.
	  </p>
	  <p>grub-bhyve (emu) is built without SDL graphics support which reduces lot of
	  gfx attack surface, however font loading code is still accessible. Guest can
	  provide arbitrary font file, which is parsed by grub-bhyve running as root.
	  </p>
	  <p>In grub-core/font/font.c, <code>read_section_as_string()</code> allocates
	  <code>section-&gt;length + 1</code> bytes of memory.  However, untrusted
	  <code>section-&gt;length</code> is an unsigned 32-bit number, and the result can
	  overflow to <code>malloc(0)</code>.  This can result in a controlled buffer
	  overflow via the 'loadfont' command in a guest VM grub2.cfg, eventually leading
	  to privilege escalation from guest to host.
	  </p>
	</blockquote>
	<p>Reno Robert also reports:</p>
	<!-- No public blog entry yet but I'm sure he'll publish one soon. -->
	<blockquote cite="https://www.voidsecurity.in/">
	  <p>GRUB supports commands to read and write addresses of choice.  In
	  grub-bhyve, these commands provide a way to write to arbitrary virtual
	  addresses within the grub-bhyve process.  This is another way for a guest
	  grub2.cfg, run by the host, to eventually escalate privileges.
	  </p>
	</blockquote>
	<p>These vulnerabilities are mitigated by disabling the 'loadfont', 'write_dword',
	  'read_dword', 'inl', 'outl', and other width variants of the same functionality in
	  grub2-bhyve.
	</p>
	<p>There is also work in progress to sandbox the grub-bhyve utility such that
	  an escaped guest ends up with nobody:nobody in a Capsium sandbox.  It is not
	  included in 0.40_8.
	</p>
      </body>
    </description>
    <references>
      <!-- No public blog entry yet but I'm sure he'll publish one soon. -->
      <url>https://www.voidsecurity.in/</url>
    </references>
    <dates>
      <!-- memrw was reported 2020-02-10 or 2020-02-11, but the earliest report is: -->
      <discovery>2019-12-09</discovery>
      <entry>2020-02-12</entry>
    </dates>
  </vuln>

  <vuln vid="00f30cba-4d23-11ea-86ba-641c67a117d8">
    <topic>libexif -- privilege escalation</topic>
    <affects>
      <package>
	<name>libexif</name>
	<range><lt>0.6.21_5</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Mitre reports:</p>
	<blockquote cite="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-9278">
	  <p>In libexif, there is a possible out of bounds write due to an integer overflow.
      This could lead to remote escalation of privilege in the media content provider
      with no additional execution privileges needed. User interaction is needed for
      exploitation.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2019-9278</cvename>
      <url>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-9278</url>
      <url>https://security-tracker.debian.org/tracker/CVE-2019-9278</url>
      <url>https://seclists.org/bugtraq/2020/Feb/9</url>
      <url>https://github.com/libexif/libexif/issues/26</url>
    </references>
    <dates>
      <discovery>2019-02-06</discovery>
      <entry>2020-02-11</entry>
    </dates>
  </vuln>

  <vuln vid="d460b640-4cdf-11ea-a59e-6451062f0f7a">
    <topic>Flash Player -- arbitrary code execution</topic>
    <affects>
      <package>
	<name>linux-flashplayer</name>
	<range><lt>32.0.0.330</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Adobe reports:</p>
	<blockquote cite="https://helpx.adobe.com/security/products/flash-player/apsb20-06.html">
	  <ul>
	    <li>This update resolves a type confusion vulnerability that
	      could lead to arbitrary code execution (CVE-2020-3757).</li>
	  </ul>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2020-3757</cvename>
      <url>https://helpx.adobe.com/security/products/flash-player/apsb20-06.html</url>
    </references>
    <dates>
      <discovery>2020-02-11</discovery>
      <entry>2020-02-11</entry>
    </dates>
  </vuln>

  <vuln vid="c1202de8-4b29-11ea-9673-4c72b94353b5">
    <topic>NGINX -- HTTP request smuggling</topic>
    <affects>
      <package>
	<name>nginx</name>
	<range><lt>1.16.1_11,2</lt></range>
      </package>
      <package>
	<name>nginx-devel</name>
	<range><lt>1.17.7</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>NGINX Team reports:</p>
	<blockquote cite="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-20372">
	  <p>NGINX before 1.17.7, with certain error_page configurations, allows HTTP
	    request smuggling, as demonstrated by the ability of an attacker to read
	    unauthorized web pages in environments where NGINX is being fronted by a
	    load balancer.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-20372</url>
      <cvename>CVE-2019-20372</cvename>
    </references>
    <dates>
      <discovery>2019-12-10</discovery>
      <entry>2020-02-09</entry>
    </dates>
  </vuln>

  <vuln vid="8b20d716-49df-11ea-9f7b-206a8a720317">
    <topic>ksh93 -- certain environment variables interpreted as arithmetic expressions on startup, leading to code injection</topic>
    <affects>
      <package>
	<name>ksh93</name>
	<range><ge>2020.0.0</ge><lt>2020.0.1_1,1</lt></range>
      </package>
      <package>
	<name>ksh93-devel</name>
	<range><lt>2020.02.07</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Upstream ksh93 maintainer Siteshwar Vashisht reports:</p>
	<blockquote cite="https://access.redhat.com/security/cve/CVE-2019-14868">
	  <p>A flaw was found in the way ksh evaluates certain environment
	    variables. An attacker could use this flaw to override or bypass
	    environment restrictions to execute shell commands. Services and
	    applications that allow remote unauthenticated attackers to
	    provide one of those environment variables could allow them to
	    exploit this issue remotely.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://bugzilla.redhat.com/show_bug.cgi?id=1757324</url>
      <url>https://access.redhat.com/security/cve/CVE-2019-14868</url>
      <url>https://access.redhat.com/errata/RHSA-2020:0431</url>
    </references>
    <dates>
      <discovery>2019-10-01</discovery>
      <entry>2020-02-07</entry>
    </dates>
  </vuln>

  <vuln vid="e7bc2b99-485a-11ea-bff9-9c5c8e75236a">
    <topic>clamav -- Denial-of-Service (DoS) vulnerability</topic>
    <affects>
      <package>
	<name>clamav</name>
	<range><lt>0.102.2,1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Micah Snyder	 reports:</p>
	<blockquote cite="https://blog.clamav.net/2020/02/clamav-01022-security-patch-released.html">
	  <p>A denial-of-service (DoS) condition may occur when using the optional
	     credit card data-loss-prevention (DLP) feature. Improper bounds checking of
	     an unsigned variable resulted in an out-of-bounds read, which causes a crash.
	  </p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://blog.clamav.net/2020/02/clamav-01022-security-patch-released.html</url>
      <cvename>CVE-2020-3123</cvename>
    </references>
    <dates>
      <discovery>2020-02-05</discovery>
      <entry>2020-02-05</entry>
    </dates>
  </vuln>

  <vuln vid="5a45649a-4777-11ea-bdec-08002728f74c">
    <topic>Django -- potential SQL injection vulnerability</topic>
    <affects>
      <package>
	<name>py27-django111</name>
	<name>py35-django111</name>
	<name>py36-django111</name>
	<name>py37-django111</name>
	<name>py38-django111</name>
	<range><lt>1.11.28</lt></range>
      </package>
      <package>
	<name>py35-django22</name>
	<name>py36-django22</name>
	<name>py37-django22</name>
	<name>py38-django22</name>
	<range><lt>2.2.10</lt></range>
      </package>
      <package>
	<name>py36-django30</name>
	<name>py37-django30</name>
	<name>py38-django30</name>
	<range><lt>3.0.3</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>MITRE CVE reports:</p>
	<blockquote cite="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-7471">
	  <p>Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3
	    allows SQL Injection if untrusted data is used as a StringAgg delimiter
	    (e.g., in Django applications that offer downloads of data as a series
	    of rows with a user-specified column delimiter). By passing a suitably
	    crafted delimiter to a contrib.postgres.aggregates.StringAgg instance,
	    it was possible to break escaping and inject malicious SQL.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-7471</url>
      <url>https://docs.djangoproject.com/en/1.11/releases/1.11.28/</url>
      <url>https://docs.djangoproject.com/en/2.2/releases/2.2.10/</url>
      <url>https://docs.djangoproject.com/en/3.0/releases/3.0.3/</url>
      <cvename>CVE-2020-7471</cvename>
    </references>
    <dates>
      <discovery>2020-02-03</discovery>
      <entry>2020-02-04</entry>
    </dates>
  </vuln>

  <vuln vid="cb0183bb-45f6-11ea-a1c7-b499baebfeaf">
    <topic>MariaDB -- Vulnerability in C API</topic>
    <affects>
      <package>
	<name>mariadb55-client</name>
	<range><lt>5.5.67</lt></range>
      </package>
      <package>
	<name>mariadb55-server</name>
	<range><lt>5.5.67</lt></range>
      </package>
      <package>
	<name>mariadb101-client</name>
	<range><lt>10.1.44</lt></range>
      </package>
      <package>
	<name>mariadb101-server</name>
	<range><lt>10.1.44</lt></range>
      </package>
      <package>
	<name>mariadb102-client</name>
	<range><lt>10.2.31</lt></range>
      </package>
      <package>
	<name>mariadb102-server</name>
	<range><lt>10.2.31</lt></range>
      </package>
      <package>
	<name>mariadb103-client</name>
	<range><lt>10.3.22</lt></range>
      </package>
      <package>
	<name>mariadb103-server</name>
	<range><lt>10.3.22</lt></range>
      </package>
      <package>
	<name>mariadb104-client</name>
	<range><lt>10.4.12</lt></range>
      </package>
      <package>
	<name>mariadb104-server</name>
	<range><lt>10.4.12</lt></range>
      </package>
      <package>
	<name>mariadb-connector-c</name>
	<range><lt>3.1.7</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>MariaDB reports:</p>
	<blockquote cite="https://mariadb.com/kb/en/security/">
	  <p>Difficult to exploit vulnerability allows unauthenticated attacker
	    with network access via multiple protocols to compromise MySQL Client.
	  </p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://mariadb.com/kb/en/security/</url>
      <url>https://mariadb.com/kb/en/mdb-5567-rn/</url>
      <url>https://mariadb.com/kb/en/mdb-10412-rn/</url>
      <url>https://mariadb.com/kb/en/mdb-10322-rn/</url>
      <url>https://mariadb.com/kb/en/mdb-10231-rn/</url>
      <url>https://mariadb.com/kb/en/mdb-10144-rn/</url>
      <url>https://mariadb.com/kb/en/mariadb-connector-c-317-release-notes/</url>
      <cvename>CVE-2020-2574</cvename>
    </references>
    <dates>
      <discovery>2020-01-28</discovery>
      <entry>2020-02-02</entry>
    </dates>
  </vuln>

  <vuln vid="1e7fa41b-f6ca-4fe8-bd46-0e176b42b14f">
    <topic>libssh -- Unsanitized location in scp could lead to unwanted command execution</topic>
    <affects>
      <package>
	<name>libssh</name>
	<range><ge>0.4.0</ge><lt>0.8.8</lt></range>
	<range><ge>0.9.0</ge><lt>0.9.3</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The libssh team reports:</p>
	<blockquote cite="https://www.libssh.org/security/advisories/CVE-2019-14889.txt">
	  <p>In an environment where a user is only allowed to copy files and
	    not to execute applications, it would be possible to pass a location
	    which contains commands to be executed in additon.</p>
	  <p>When the libssh SCP client connects to a server, the scp
	    command, which includes a user-provided path, is executed
	    on the server-side. In case the library is used in a way
	    where users can influence the third parameter of
	    ssh_scp_new(), it would become possible for an attacker to
	    inject arbitrary commands, leading to a compromise of the
	    remote target.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://www.libssh.org/security/advisories/CVE-2019-14889.txt</url>
      <url>https://nvd.nist.gov/vuln/detail/CVE-2019-14889</url>
      <cvename>CVE-2019-14889</cvename>
    </references>
    <dates>
      <discovery>2019-11-14</discovery>
      <entry>2020-02-02</entry>
    </dates>
  </vuln>

  <vuln vid="c86bfee3-4441-11ea-8be3-54e1ad3d6335">
    <topic>spamassassin -- Nefarious rule configuration files can run system commands</topic>
    <affects>
      <package>
	<name>spamassassin</name>
	<range><lt>3.4.4</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The Apache SpamAssassin project reports:</p>
	<blockquote cite="https://mail-archives.apache.org/mod_mbox/spamassassin-announce/202001.mbox/%3c0a91e67a-3190-36e5-41e9-d3553743bcd2@apache.org%3e">
	  <p>A nefarious rule configuration (.cf) files can be configured to
	    run system commands.  This issue is less stealthy and attempts to
	    exploit the issue will throw warnings.</p>
	  <p>Thanks to Damian Lukowski at credativ for reporting the issue
	    ethically.  With this bug unpatched, exploits can be injected in a
	    number of scenarios though doing so remotely is difficult.  In
	    addition to upgrading to SA 3.4.4, we again recommend that users
	    should only use update channels or 3rd party .cf files from trusted
	    places.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://mail-archives.apache.org/mod_mbox/spamassassin-announce/202001.mbox/%3c0a91e67a-3190-36e5-41e9-d3553743bcd2@apache.org%3e</url>
      <url>https://mail-archives.apache.org/mod_mbox/spamassassin-announce/202001.mbox/%3ccdae17ce-acde-6060-148a-6dc5f45ee728@apache.org%3e</url>
      <cvename>CVE-2020-1930</cvename>
      <cvename>CVE-2020-1931</cvename>
    </references>
    <dates>
      <discovery>2020-01-28</discovery>
      <entry>2020-01-31</entry>
    </dates>
  </vuln>

  <vuln vid="b4e5f782-442d-11ea-9ba9-206a8a720317">
    <topic>sudo -- Potential bypass of Runas user restrictions</topic>
    <affects>
      <package>
       <name>sudo</name>
       <range><lt>1.8.31</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
       <p>Todd C. Miller reports:</p>
       <blockquote cite="https://www.sudo.ws/alerts/pwfeedback.html">
	 <p>Sudo's pwfeedback option can be used to provide visual feedback
	    when the user is inputting their password. For each key press,
	    an asterisk is printed. This option was added in response to
	    user confusion over how the standard Password: prompt disables
	    the echoing of key presses. While pwfeedback is not enabled by
	    default in the upstream version of sudo, some systems, such as
	    Linux Mint and Elementary OS, do enable it in their default
	    sudoers files.</p>
	 <p>Due to a bug, when the pwfeedback option is enabled in the
	    sudoers file, a user may be able to trigger a stack-based buffer
	    overflow. This bug can be triggered even by users not listed in
	    the sudoers file. There is no impact unless pwfeedback has been
	    enabled.</p>
       </blockquote>
      </body>
    </description>
    <references>
      <url>https://www.sudo.ws/alerts/pwfeedback.html</url>
      <cvename>CVE-2019-18634</cvename>
    </references>
    <dates>
      <discovery>2020-01-30</discovery>
      <entry>2020-01-30</entry>
    </dates>
  </vuln>

  <vuln vid="c5bd9068-440f-11ea-9cdb-001b217b3468">
    <topic>Gitlab -- Multiple Vulnerabilities</topic>
    <affects>
      <package>
	<name>gitlab-ce</name>
	<range><ge>12.7.0</ge><lt>12.7.4</lt></range>
	<range><ge>12.6.0</ge><lt>12.6.6</lt></range>
	<range><ge>5.3</ge><lt>12.5.9</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Gitlab reports:</p>
	<blockquote cite="https://about.gitlab.com/releases/2020/01/30/security-release-gitlab-12-7-4-released/">
	  <p>Path Traversal to Arbitrary File Read</p>
	  <p>User Permissions Not Validated in ProjectExportWorker</p>
	  <p>XSS Vulnerability in File API</p>
	  <p>Package and File Disclosure through GitLab Workhorse</p>
	  <p>XSS Vulnerability in Create Groups</p>
	  <p>Issue and Merge Request Activity Counts Exposed</p>
	  <p>Email Confirmation Bypass Using AP</p>
	  <p>Disclosure of Forked Private Project Source Code</p>
	  <p>Private Project Names Exposed in GraphQL queries</p>
	  <p>Disclosure of Issues and Merge Requests via Todos</p>
	  <p>Denial of Service via AsciiDoc</p>
	  <p>Last Pipeline Status Exposed</p>
	  <p>Arbitrary Change of Pipeline Status</p>
	  <p>Grafana Token Displayed in Plaintext</p>
	  <p>Update excon gem</p>
	  <p>Update rdoc gem</p>
	  <p>Update rack-cors gem</p>
	  <p>Update rubyzip gem</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://about.gitlab.com/releases/2020/01/30/security-release-gitlab-12-7-4-released/</url>
      <cvename>CVE-2020-7966</cvename>
      <cvename>CVE-2020-8114</cvename>
      <cvename>CVE-2020-7973</cvename>
      <cvename>CVE-2020-6833</cvename>
      <cvename>CVE-2020-7971</cvename>
      <cvename>CVE-2020-7967</cvename>
      <cvename>CVE-2020-7972</cvename>
      <cvename>CVE-2020-7968</cvename>
      <cvename>CVE-2020-7979</cvename>
      <cvename>CVE-2020-7969</cvename>
      <cvename>CVE-2020-7978</cvename>
      <cvename>CVE-2020-7974</cvename>
      <cvename>CVE-2020-7977</cvename>
      <cvename>CVE-2020-7976</cvename>
      <cvename>CVE-2019-16779</cvename>
      <cvename>CVE-2019-18978</cvename>
      <cvename>CVE-2019-16892</cvename>
    </references>
    <dates>
      <discovery>2020-01-30</discovery>
      <entry>2020-01-31</entry>
    </dates>
  </vuln>

  <vuln vid="08f5c27d-4326-11ea-af8b-00155d0a0200">
    <topic>OpenSMTPd -- critical LPE / RCE vulnerability</topic>
    <affects>
      <package>
	<name>opensmtpd</name>
	<range><ge>6.4.0,1</ge><lt>6.6.2,1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>OpenSMTPD developers report:</p>
	<blockquote cite="https://opensmtpd.org/security.html">
	  <p>An incorrect check allows an attacker to trick mbox delivery
	   into executing arbitrary commands as root and lmtp delivery
	    into executing arbitrary commands as an unprivileged user</p>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2020-7247</cvename>
      <url>https://www.openwall.com/lists/oss-security/2020/01/28/3</url>
    </references>
    <dates>
      <discovery>2020-01-28</discovery>
      <entry>2020-01-29</entry>
    </dates>
  </vuln>

  <vuln vid="a250539d-d1d4-4591-afd3-c8bdfac335d8">
    <topic>jenkins -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>jenkins</name>
	<range><le>2.219</le></range>
      </package>
      <package>
	<name>jenkins-lts</name>
	<range><le>2.204.2</le></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Jenkins Security Advisory:</p>
	<blockquote cite="https://jenkins.io/security/advisory/2020-01-29/">
	  <h1>Description</h1>
	  <h5>(High) SECURITY-1682 / CVE-2020-2099</h5>
	  <p>Inbound TCP Agent Protocol/3 authentication bypass</p>
	  <h5>(Medium) SECURITY-1641 / CVE-2020-2100</h5>
	  <p>Jenkins vulnerable to UDP amplification reflection attack</p>
	  <h5>(Medium) SECURITY-1659 / CVE-2020-2101</h5>
	  <p>Non-constant time comparison of inbound TCP agent connection secret</p>
	  <h5>(Medium) SECURITY-1660 / CVE-2020-2102</h5>
	  <p>Non-constant time HMAC comparison</p>
	  <h5>(Medium) SECURITY-1695 / CVE-2020-2103</h5>
	  <p>Diagnostic page exposed session cookies</p>
	  <h5>(Medium) SECURITY-1650 / CVE-2020-2104</h5>
	  <p>Memory usage graphs accessible to anyone with Overall/Read</p>
	  <h5>(Low) SECURITY-1704 / CVE-2020-2105</h5>
	  <p>Jenkins REST APIs vulnerable to clickjacking</p>
	  <h5>(Medium) SECURITY-1680 / CVE-2020-2106</h5>
	  <p>Stored XSS vulnerability in Code Coverage API Plugin</p>
	  <h5>(Medium) SECURITY-1565 / CVE-2020-2107</h5>
	  <p>Fortify Plugin stored credentials in plain text</p>
	  <h5>(High) SECURITY-1719 / CVE-2020-2108</h5>
	  <p>XXE vulnerability in WebSphere Deployer Plugin</p>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2020-2099</cvename>
      <cvename>CVE-2020-2100</cvename>
      <cvename>CVE-2020-2101</cvename>
      <cvename>CVE-2020-2102</cvename>
      <cvename>CVE-2020-2103</cvename>
      <cvename>CVE-2020-2104</cvename>
      <cvename>CVE-2020-2105</cvename>
      <cvename>CVE-2020-2106</cvename>
      <cvename>CVE-2020-2107</cvename>
      <cvename>CVE-2020-2108</cvename>
      <url>https://jenkins.io/security/advisory/2020-01-29/</url>
    </references>
    <dates>
      <discovery>2020-01-29</discovery>
      <entry>2020-01-29</entry>
    </dates>
  </vuln>

  <vuln vid="2af10639-4299-11ea-aab1-98fa9bfec35a">
    <topic>pkg -- vulnerability in libfetch</topic>
    <affects>
      <package>
	<name>pkg</name>
	<range><lt>1.12.0_1</lt></range>
      </package>
      <package>
	<name>pkg-devel</name>
	<range><lt>1.12.99_1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>A programming error allows an attacker who can specify a URL with a username
	   and/or password components to overflow libfetch(3) buffers.</p>
      </body>
    </description>
    <references>
      <freebsdsa>SA-20:01.libfetch</freebsdsa>
      <cvename>CVE-2020-7450</cvename>
    </references>
    <dates>
      <discovery>2020-01-28</discovery>
      <entry>2020-01-29</entry>
    </dates>
  </vuln>

  <vuln vid="5f0dd349-40a2-11ea-8d8c-005056a311d1">
    <topic>samba -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>samba410</name>
	<range><lt>4.10.12</lt></range>
      </package>
      <package>
	<name>samba411</name>
	<range><lt>4.11.4</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The Samba Team reports:</p>
	<blockquote cite="https://www.samba.org/samba/history/samba-4.10.12.html">
	  <p>CVE-2019-14902</p>
	  <p>The implementation of ACL inheritance in the Samba AD DC was not complete,
	     and so absent a 'full-sync' replication, ACLs could get out of sync between
	    domain controllers.</p>
	  <p>CVE-2019-14907</p>
	  <p>When processing untrusted string input Samba can read past the end of the
	     allocated buffer when printing a "Conversion error" message to the logs.</p>
	  <p>CVE-2019-19344</p>
	  <p>During DNS zone scavenging (of expired dynamic entries) there is a read of
	     memory after it has been freed.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://www.samba.org/samba/history/samba-4.10.12.html</url>
      <cvename>CVE-2019-14902</cvename>
      <cvename>CVE-2019-14907</cvename>
      <cvename>CVE-2019-19344</cvename>
    </references>
    <dates>
      <discovery>2020-01-14</discovery>
      <entry>2020-01-27</entry>
    </dates>
  </vuln>

  <vuln vid="dc8cff4c-4063-11ea-8a94-3497f6939fdd">
    <topic>webkit-gtk3 -- Multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>webkit2-gtk3</name>
	<range><lt>2.26.3</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The WebKitGTK project reports multiple vulnerabilities.</p>
      </body>
    </description>
    <references>
      <url>https://webkitgtk.org/security/WSA-2020-0001.html</url>
      <cvename>CVE-2019-8835</cvename>
      <cvename>CVE-2019-8844</cvename>
      <cvename>CVE-2019-8846</cvename>
    </references>
    <dates>
      <discovery>2020-01-23</discovery>
      <entry>2020-01-26</entry>
    </dates>
  </vuln>

  <vuln vid="0700e76c-3eb0-11ea-8478-3085a9a95629">
    <topic>Pillow -- Multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>py27-pillow</name>
	<name>py35-pillow</name>
	<name>py36-pillow</name>
	<name>py37-pillow</name>
	<name>py38-pillow</name>
	<range><lt>6.2.2</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Pillow developers report:</p>
	<blockquote cite="https://pillow.readthedocs.io/en/stable/releasenotes/6.2.2.html">
	  <p>
	    This release addresses several security problems, as well as
	    addressing CVE-2019-19911.
	  </p><p>
	    CVE-2019-19911 is regarding FPX images. If an image reports that it
	    has a large number of bands, a large amount of resources will be
	    used when trying to process the image. This is fixed by limiting the
	    number of bands to those usable by Pillow.
	  </p><p>
	    Buffer overruns were found when processing an SGI, PCX or FLI image.
	    Checks have been added to prevent this.
	  </p><p>
	    Overflow checks have been added when calculating the size of a
	    memory block to be reallocated in the processing of a TIFF image.
	  </p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://pillow.readthedocs.io/en/stable/releasenotes/6.2.2.html</url>
      <cvename>CVE-2019-19911</cvename>
      <cvename>CVE-2020-5310</cvename>
      <cvename>CVE-2020-5311</cvename>
      <cvename>CVE-2020-5312</cvename>
      <cvename>CVE-2020-5313</cvename>
      <freebsdpr>ports/243336</freebsdpr>
    </references>
    <dates>
      <discovery>2019-12-19</discovery>
      <entry>2020-01-24</entry>
    </dates>
  </vuln>

  <vuln vid="a512a412-3a33-11ea-af63-0800274e5f20">
    <topic>gitea -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>gitea</name>
	<range><lt>1.10.3</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The Gitea Team reports:</p>
	<blockquote cite="https://github.com/go-gitea/gitea/releases/tag/v1.10.3">
	  <ul>
	    <li>Hide credentials when submitting migration</li>
	    <li>Never allow an empty password to validate</li>
	    <li>Prevent redirect to Host</li>
	    <li>Hide public repos owned by private orgs</li>
	  </ul>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://github.com/go-gitea/gitea/releases/tag/v1.10.3</url>
      <freebsdpr>ports/243437</freebsdpr>
    </references>
    <dates>
      <discovery>2019-11-22</discovery>
      <entry>2020-01-18</entry>
    </dates>
  </vuln>

  <vuln vid="a6cf65ad-37d2-11ea-a1c7-b499baebfeaf">
    <topic>MySQL -- Multiple vulerabilities</topic>
    <affects>
      <package>
	<name>mysql56-server</name>
	<range><lt>5.6.47</lt></range>
      </package>
      <package>
	<name>mysql57-server</name>
	<range><lt>5.7.29</lt></range>
      </package>
      <package>
	<name>mysql80-server</name>
	<range><lt>8.0.19</lt></range>
      </package>
      <package>
	<name>percona55-server</name>
	<range><lt>5.5.67</lt></range>
      </package>
      <package>
	<name>percona56-server</name>
	<range><lt>5.6.47</lt></range>
      </package>
      <package>
	<name>percona57-server</name>
	<range><lt>5.7.29</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Oracle reports:</p>
	<blockquote cite="https://www.oracle.com/security-alerts/cpujan2020.html#AppendixMSQL">
	  <p>This Critical Patch Update contains 17 new security fixes for
	    Oracle MySQL. 5 of these vulnerabilities may be remotely exploitable
	    without authentication, i.e., may be exploited over a network without
	    requiring user credentials.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://www.oracle.com/security-alerts/cpujan2020.html</url>
      <cvename>CVE-2019-1547</cvename>
      <cvename>CVE-2020-2579</cvename>
      <cvename>CVE-2020-2686</cvename>
      <cvename>CVE-2020-2627</cvename>
      <cvename>CVE-2020-2570</cvename>
      <cvename>CVE-2020-2573</cvename>
      <cvename>CVE-2020-2574</cvename>
      <cvename>CVE-2020-2577</cvename>
      <cvename>CVE-2020-2589</cvename>
      <cvename>CVE-2020-2580</cvename>
      <cvename>CVE-2020-2588</cvename>
      <cvename>CVE-2020-2660</cvename>
      <cvename>CVE-2020-2679</cvename>
      <cvename>CVE-2020-2584</cvename>
      <cvename>CVE-2020-2694</cvename>
      <cvename>CVE-2020-2572</cvename>
      <cvename>CVE-2019-8457</cvename>
    </references>
    <dates>
      <discovery>2020-01-14</discovery>
      <entry>2020-01-15</entry>
      <modified>2020-02-02</modified>
    </dates>
  </vuln>

  <vuln vid="d2c2c815-3793-11ea-8be3-54e1ad3d6335">
    <topic>drm graphics drivers -- potential information disclusure via local access</topic>
    <affects>
      <package>
	<name>drm-fbsd11.2-kmod</name>
	<range><lt>4.11.g20200115</lt></range>
      </package>
      <package>
	<name>drm-fbsd12.0-kmod</name>
	<range><lt>4.16.g20200115</lt></range>
      </package>
      <package>
	<name>drm-current-kmod</name>
	<range><lt>4.16.g20200115</lt></range>
      </package>
      <package>
	<name>drm-devel-kmod</name>
	<range><lt>5.0.g20200115</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Intel reports:</p>
	<blockquote cite="https://www.intel.com/content/www/us/en/security-center/advisory/intel-sa-00314.html">
	  <p>.A potential security vulnerability in Intel(R) Processor Graphics
	    may allow information disclosure.  Intel is releasing software
	    updates to mitigate this potential vulnerability.</p>
	  <p>Description: Insufficient control flow in certain data
	    structures for some Intel(R) Processors with Intel(R) Processor
	    Graphics may allow an unauthenticated user to potentially enable
	    information disclosure via local access.</p>
	  <p>This patch provides mitigation for Gen9 hardware only.  Patches
	    for Gen7 and Gen7.5 will be provided later.  Note that Gen8 is not
	    impacted due to a previously implemented workaround.  The mitigation
	    involves using an existing hardware feature to forcibly clear down
	    all EU state at each context switch.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://www.intel.com/content/www/us/en/security-center/advisory/intel-sa-00314.html</url>
      <cvename>CVE-2019-14615</cvename>
    </references>
    <dates>
      <discovery>2020-01-14</discovery>
      <entry>2020-01-15</entry>
    </dates>
  </vuln>

  <vuln vid="2bab995f-36d4-11ea-9dad-002590acae31">
    <topic>Template::Toolkit -- Directory traversal on write</topic>
    <affects>
      <package>
	<name>p5-Template-Toolkit</name>
	<range><lt>3.004</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Art Manion and Will Dormann report:</p>
	<blockquote cite="https://www.kb.cert.org/vuls/id/619785/">
	  <p>
	    By using an older and less-secure form of open(), it is
	    possible for untrusted template files to cause reads/writes
	    outside of the template directories. This vulnerability is
	    a component of the recent Citrix exploit.
	  </p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://www.kb.cert.org/vuls/id/619785/</url>
      <url>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-19781</url>
      <cvename>CVE-2019-19781</cvename>
    </references>
    <dates>
      <discovery>2019-12-13</discovery>
      <entry>2020-01-14</entry>
    </dates>
  </vuln>

  <vuln vid="f929b172-369e-11ea-9cdb-001b217b3468">
    <topic>Gitlab -- Private objects exposed through project import</topic>
    <affects>
      <package>
	<name>gitlab-ce</name>
	<range><ge>12.6.0</ge><lt>12.6.4</lt></range>
	<range><ge>12.5.0</ge><lt>12.5.7</lt></range>
	<range><ge>8.9.0</ge><lt>12.4.8</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Gitlab reports:</p>
	<blockquote cite="https://about.gitlab.com/releases/2020/01/13/critical-security-release-gitlab-12-dot-6-dot-4-released/">
	  <p>Private objects exposed through project importi</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://about.gitlab.com/releases/2020/01/13/critical-security-release-gitlab-12-dot-6-dot-4-released/</url>
      <cvename>CVE-2020-6832</cvename>
    </references>
    <dates>
      <discovery>2020-01-13</discovery>
      <entry>2020-01-14</entry>
    </dates>
  </vuln>

  <vuln vid="8b61308b-322a-11ea-b34b-1de6fb24355d">
    <topic>e2fsprogs -- rehash.c/pass 3a mutate_name() code execution vulnerability</topic>
    <affects>
      <package>
	<name>e2fsprogs</name>
	<range><lt>1.45.5</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Lilith of Cisco Talos reports:</p>
	<blockquote cite="https://talosintelligence.com/vulnerability_reports/TALOS-2019-0973">
	  <p>
	    A code execution vulnerability exists in the directory rehashing
	    functionality of E2fsprogs e2fsck 1.45.4. A specially crafted ext4
	    directory can cause an out-of-bounds write on the stack, resulting
	    in code execution. An attacker can corrupt a partition to trigger
	    this vulnerability.
	  </p>
	</blockquote>
	<p>Theodore Y. Ts'o reports:</p>
	<blockquote cite="http://e2fsprogs.sourceforge.net/e2fsprogs-release.html#1.45.5">
	  <p>
	    E2fsprogs 1.45.5 [...:] Fix a potential out of bounds write when
	    checking a maliciously corrupted file system. This is probably not
	    exploitable on 64-bit platforms, but may be exploitable on 32-bit
	    binaries depending on how the compiler lays out the stack variables.
	    (Addresses CVE-2019-5188)
	  </p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://talosintelligence.com/vulnerability_reports/TALOS-2019-0973</url>
      <url>http://e2fsprogs.sourceforge.net/e2fsprogs-release.html#1.45.5</url>
      <cvename>CVE-2019-5188</cvename>
    </references>
    <dates>
      <discovery>2019-12-18</discovery>
      <entry>2020-01-08</entry>
    </dates>
  </vuln>

  <vuln vid="16aed7b7-344a-11ea-9cdb-001b217b3468">
    <topic>phpMyAdmin -- SQL injection</topic>
    <affects>
      <package>
	<name>phpMyAdmin</name>
	<name>phpMyAdmin-php72</name>
	<name>phpMyAdmin-php73</name>
	<name>phpMyAdmin-php74</name>
	<name>phpMyAdmin5</name>
	<name>phpMyAdmin5-php72</name>
	<name>phpMyAdmin5-php73</name>
	<name>phpMyAdmin5-php74</name>
	<range><lt>4.9.4</lt></range>
	<range><ge>5.0.0</ge><lt>5.0.1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The phpMyAdmin development team reports:</p>
	<blockquote cite="https://www.phpmyadmin.net/security/PMASA-2020-1/">
	  <p>A SQL injection flaw has been discovered in the user accounts page</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://www.phpmyadmin.net/security/PMASA-2020-1/</url>
      <cvename>CVE-2020-5504</cvename>
    </references>
    <dates>
      <discovery>2020-01-05</discovery>
      <entry>2020-01-11</entry>
    </dates>
  </vuln>

  <vuln vid="86224a04-26de-11ea-97f2-001a8c5c04b6">
    <topic>cacti -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>cacti</name>
	<range><lt>1.2.8</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The cacti developers reports:</p>
	<blockquote cite="https://github.com/Cacti/cacti/releases/tag/release%2F1.2.8">
	  <p>
	    When viewing graphs, some input variables are not properly checked
	    (SQL injection possible).
	  </p>
	  <p>
	    Multiple instances of lib/functions.php are affected by unsafe
	    deserialization of user-controlled data to populate arrays. An
	    authenticated attacker could use this to influence object data
	    values and control actions taken by Cacti or potentially cause
	    memory corruption in the PHP module.
	  </p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://github.com/Cacti/cacti/releases/tag/release%2F1.2.8</url>
      <cvename>CVE-2019-17357</cvename>
      <cvename>CVE-2019-17358</cvename>
      <freebsdpr>ports/242834</freebsdpr>
    </references>
    <dates>
      <discovery>2019-10-12</discovery>
      <entry>2020-01-06</entry>
    </dates>
  </vuln>

  <vuln vid="01bde18a-2e09-11ea-a935-001b217b3468">
    <topic>Gitlab -- Multiple Vulnerabilities</topic>
    <affects>
      <package>
	<name>gitlab-ce</name>
	<range><ge>12.6.0</ge><lt>12.6.2</lt></range>
	<range><ge>12.5.0</ge><lt>12.5.6</lt></range>
	<range><ge>5.1.0</ge><lt>12.4.7</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>SO-AND-SO reports:</p>
	<blockquote cite="https://about.gitlab.com/blog/2020/01/02/security-release-gitlab-12-6-2-released/">
	  <p>Group Maintainers Can Update/Delete Group Runners Using API</p>
	  <p>GraphQL Queries Can Hang the Application</p>
	  <p>Unauthorized Users Have Access to Milestones of Releases</p>
	  <p>Private Group Name Revealed Through Protected Tags API</p>
	  <p>Users Can Publish Reviews on Locked Merge Requests</p>
	  <p>DoS in the Issue and Commit Comments Pages</p>
	  <p>Project Name Disclosed Through Unsubscribe Link</p>
	  <p>Private Project Name Disclosed Through Notification Settings</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://about.gitlab.com/blog/2020/01/02/security-release-gitlab-12-6-2-released/</url>
      <cvename>CVE-2019-20144</cvename>
      <cvename>CVE-2019-20146</cvename>
      <cvename>CVE-2019-20143</cvename>
      <cvename>CVE-2019-20147</cvename>
      <cvename>CVE-2019-20145</cvename>
      <cvename>CVE-2019-20142</cvename>
      <cvename>CVE-2019-20148</cvename>
      <cvename>CVE-2020-5197</cvename>
    </references>
    <dates>
      <discovery>2020-01-02</discovery>
      <entry>2020-01-03</entry>
    </dates>
  </vuln>
