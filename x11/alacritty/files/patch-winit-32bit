error[E0308]: mismatched types
   --> cargo-crates/winit-0.8.2/src/platform/linux/x11/window.rs:273:21
    |
273 |             window: window,
    |                     ^^^^^^ expected u32, found u64
error[E0308]: mismatched types
   --> cargo-crates/winit-0.8.2/src/platform/linux/x11/window.rs:290:17
    |
290 |                 root,
    |                 ^^^^ expected u32, found u64
error[E0308]: mismatched types
   --> cargo-crates/winit-0.8.2/src/platform/linux/x11/window.rs:279:34
    |
279 |                 data.set_long(0, val as i64);
    |                                  ^^^^^^^^^^ expected i32, found i64

--- cargo-crates/winit-0.8.2/src/platform/linux/x11/window.rs.orig	2017-09-28 17:05:00 UTC
+++ cargo-crates/winit-0.8.2/src/platform/linux/x11/window.rs
@@ -5,7 +5,7 @@ use libc;
 use std::borrow::Borrow;
 use std::{mem, cmp};
 use std::sync::{Arc, Mutex};
-use std::os::raw::{c_int, c_long, c_uchar};
+use std::os::raw::{c_int, c_long, c_uchar, c_ulong};
 use std::thread;
 use std::time::Duration;
 
@@ -251,7 +251,7 @@ impl Window2 {
         Ok(window)
     }
 
-    fn set_netwm(display: &Arc<XConnection>, window: u64, root: u64, property: &str, val: bool) {
+    fn set_netwm(display: &Arc<XConnection>, window: c_ulong, root: c_ulong, property: &str, val: bool) {
         let state_atom = unsafe {
             with_c_str("_NET_WM_STATE", |state|
                 (display.xlib.XInternAtom)(display.display, state, 0)
@@ -276,7 +276,7 @@ impl Window2 {
             data: {
                 let mut data = ffi::ClientMessageData::new();
                 // This first `long` is the action; `1` means add/set following property.
-                data.set_long(0, val as i64);
+                data.set_long(0, val as c_long);
                 // This second `long` is the property to set (fullscreen)
                 data.set_long(1, atom as c_long);
                 data
