#!/bin/sh
#
# $FreeBSD$
#
# PROVIDE: rabbitmq
# REQUIRE: DAEMON
# BEFORE: LOGIN
# KEYWORD: shutdown
#
# Add the following line to /etc/rc.conf to enable RabbitMQ
#
#  rabbitmq_enable="YES"

. /etc/rc.subr

name=rabbitmq
rcvar=rabbitmq_enable

load_rc_config $name

# Set some defaults
: ${rabbitmq_enable="NO"}
: ${rabbitmq_user="rabbitmq"}

rabbitmq_server="%%PREFIX%%/sbin/rabbitmq-server"
rabbitmq_ctl="%%PREFIX%%/sbin/rabbitmqctl"
pidfile="/var/run/${name}.pid"
daemon_pidfile="/var/run/${name}-daemon.pid"

start_cmd="${name}_start"
stop_cmd="${name}_stop"
rotate_logs_cmd="su -m ${rabbitmq_user} -c 'sh -c \"${rabbitmq_ctl} rotate_logs\"'"
status_cmd="su -m ${rabbitmq_user} -c 'sh -c \"${rabbitmq_ctl} status\"'"
extra_commands="rotate_logs status"

export RABBITMQ_HOME=/var/db/${name}

# Prevent conflicts with amqp_client and rabbit_common applications that
# may be installed in ERL_LIBS.
unset ERL_LIBS

rabbitmq_start()
{
	echo "Starting ${name}."

	if [ -d ${RABBITMQ_HOME} ]; then
		chown -R ${rabbitmq_user}:${rabbitmq_user} ${RABBITMQ_HOME}
	fi

	env HOME=${RABBITMQ_HOME} daemon -c -f -u ${rabbitmq_user} -p ${pidfile} -P ${daemon_pidfile} ${rabbitmq_server}
	debug "Running: rabbitmqctl wait ${pidfile}"
	${rabbitmq_ctl} wait ${pidfile} >/dev/null 2>&1
}

rabbitmq_stop()
{
	echo "Stopping ${name}."
	[ -f ${daemon_pidfile} ] && read daemon_pid < ${daemon_pidfile}
	debug "Running: ${rabbitmq_ctl} stop ${pidfile}"
	su -m ${rabbitmq_user} -c "sh -c \"${rabbitmq_ctl} stop ${pidfile}\"" >/dev/null 2>&1
	[ -n "${daemon_pid}" ] && wait_for_pids ${daemon_pid}
}

run_rc_command "$1"
