--- meson.build.orig	2024-08-01 10:16:47 UTC
+++ meson.build
@@ -39,6 +39,7 @@ libdir = prefix / get_option('libdir')
 datadir = prefix / get_option('datadir')
 includedir = prefix / get_option('includedir')
 libdir = prefix / get_option('libdir')
+libexecdir = prefix / get_option('libexecdir')
 localstatedir = prefix / get_option('localstatedir')
 mandir = prefix / get_option('mandir')
 sbindir = prefix / get_option('sbindir')
@@ -78,7 +79,7 @@ statedir = '-D_PATH_STATEDIR="' + localstatedir + '/ne
 dversion = '-DVERSION="' + netatalk_version + '"'
 messagedir = '-DSERVERTEXT="' + localstatedir + '/netatalk/msg/"'
 statedir = '-D_PATH_STATEDIR="' + localstatedir + '/netatalk/"'
-uamdir = '-D_PATH_AFPDUAMPATH="' + libdir + '/netatalk/"'
+uamdir = '-D_PATH_AFPDUAMPATH="' + libexecdir + '/netatalk-uams/"'
 
 ############
 # Includes #
@@ -380,6 +381,7 @@ bdb_subdirs = [
     '/usr',
 ]
 bdb_subdirs = [
+    'db18',
     'db4.6',
     'db4.7',
     'db4.8',
@@ -499,6 +501,11 @@ if crypt.found()
 if crypt.found()
     cdata.set('HAVE_CRYPT_H', 1)
     cdata.set('HAVE_LIBCRYPT', 1)
+else
+    crypt = cc.find_library('crypt', has_headers: 'unistd.h', required: false)
+    if crypt.found()
+        cdata.set('HAVE_LIBCRYPT', 1)
+    endif
 endif
 
 des = cc.find_library('des', required: false)
@@ -731,12 +738,12 @@ dns_sd_libs = []
 
 dns_sd_libs = []
 
-dns_sd = cc.find_library('dns_sd', required: false)
+dns_sd = cc.find_library('dns_sd', dirs: libsearch_dirs, required: false)
 if dns_sd.found()
     dns_sd_libs += dns_sd
 endif
 
-system = cc.find_library('system', required: false)
+system = cc.find_library('system', dirs: libsearch_dirs, required: false)
 if dns_sd.found()
     dns_sd_libs += system
 endif
@@ -753,6 +760,8 @@ have_dns = (
     )
 )
 
+threads = dependency('threads', required: true)
+
 if not enable_zeroconf
     have_zeroconf = false
 else
@@ -762,6 +771,7 @@ else
         cdata.set('HAVE_MDNS', 1)
         freebsd_zeroconf_daemon = 'mdnsd'
         zeroconf_provider += 'mDNS'
+        dns_sd_libs += threads
     else
         have_zeroconf = avahi.found()
         if avahi.found()
@@ -829,19 +839,7 @@ else
             required: false,
         )
 
-        if tracker.found()
-            cdata.set(
-                'TRACKER_MANAGING_COMMAND',
-                '"tracker daemon"',
-            )
-            cdata.set(
-                'TRACKER_PREFIX',
-                '"'
-                + tracker_sparql.get_variable(pkgconfig: 'prefix')
-                + '"',
-            )
-            tracker_manager += 'tracker'
-        elif tracker3.found()
+        if tracker3.found()
             cdata.set('HAVE_TRACKER3', 1)
             cdata.set(
                 'TRACKER_MANAGING_COMMAND',
@@ -882,7 +880,6 @@ else
             endif
         endif
     endif
-endif
 
 have_spotlight = (
     tracker_sparql.found()
@@ -891,6 +888,8 @@ have_spotlight = (
     and flex.found()
     and bison.found()
 )
+endif
+
 if have_spotlight
     cdata.set('WITH_SPOTLIGHT', 1)
 endif
@@ -1592,6 +1591,7 @@ if not enable_pam
 
 if not enable_pam
     have_pam = false
+    pam = dependency('', required: false)
 else
     if host_os != 'sunos'
         pam_paths = [
@@ -1955,6 +1955,8 @@ int deny_severity = 0;
     tcpwrap_code = '''
 int allow_severity = 0;
 int deny_severity = 0;
+
+int hosts_access();
 
 int main(void) {
 
