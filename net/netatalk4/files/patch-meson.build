--- meson.build.orig	2025-09-07 19:42:40 UTC
+++ meson.build
@@ -69,6 +69,7 @@ libdir = prefix / get_option('libdir')
 datadir = prefix / get_option('datadir')
 includedir = prefix / get_option('includedir')
 libdir = prefix / get_option('libdir')
+libexecdir = prefix / get_option('libexecdir')
 mandir = prefix / get_option('mandir')
 sbindir = prefix / get_option('sbindir')
 sysconfdir = prefix / get_option('sysconfdir')
@@ -141,7 +142,7 @@ statedir = '-D_PATH_STATEDIR="' + localstatedir + '/ne
 dversion = '-DVERSION="' + netatalk_version + '"'
 messagedir = '-DSERVERTEXT="' + localstatedir + '/netatalk/msg/"'
 statedir = '-D_PATH_STATEDIR="' + localstatedir + '/netatalk/"'
-uamdir = '-D_PATH_AFPDUAMPATH="' + libdir + '/netatalk/"'
+uamdir = '-D_PATH_AFPDUAMPATH="' + libexecdir + '/netatalk-uams/"'
 
 ############
 # Includes #
@@ -408,6 +409,7 @@ if 'dbd' in get_option('with-cnid-backends')
     endif
 
     bdb_subdirs = [
+        '%%DB_NAME%%',
         'db62',
         'db6.2',
         'db61',
@@ -922,12 +924,12 @@ dns_sd_libs = []
 
 dns_sd_libs = []
 
-dns_sd = cc.find_library('dns_sd', required: false)
+dns_sd = cc.find_library('dns_sd', dirs: libsearch_dirs, required: false)
 if dns_sd.found()
     dns_sd_libs += dns_sd
 endif
 
-system = cc.find_library('system', required: false)
+system = cc.find_library('system', dirs: libsearch_dirs, required: false)
 if dns_sd.found()
     dns_sd_libs += system
 endif
@@ -941,6 +943,8 @@ have_dns = (
     )
 )
 
+threads = dependency('threads', required: true)
+
 if enable_zeroconf
     if host_os == 'darwin'
         # On Darwin/macOS, prefer mDNS (Bonjour) over Avahi
@@ -950,6 +954,7 @@ if enable_zeroconf
             cdata.set('HAVE_MDNS', 1)
             cdata.set('freebsd_zeroconf', 'mdnsd')
             zeroconf_provider += 'mDNS'
+            dns_sd_libs += threads
         elif avahi.found()
             have_zeroconf = true
             cdata.set('USE_ZEROCONF', 1)
@@ -1578,6 +1583,7 @@ if not enable_pam
 
 if not enable_pam
     have_pam = false
+    pam = dependency('', required: false)
 else
     if host_os != 'sunos'
         pam_paths = [
