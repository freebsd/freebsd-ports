--- src/CMakeLists.txt.orig	2016-07-24 10:35:49 UTC
+++ src/CMakeLists.txt
@@ -468,10 +468,13 @@ ENDIF()
 IF(GENERATE_STELMAINLIB)
      ADD_LIBRARY(stelMain SHARED ${stellarium_lib_SRCS} ${stellarium_RES_CXX})
      TARGET_LINK_LIBRARIES(stelMain ${extLinkerOption} ${STELLARIUM_STATIC_PLUGINS_LIBRARIES})
-     QT5_USE_MODULES(stelMain Core Concurrent Gui Network OpenGL Script Widgets PrintSupport)
+     QT5_USE_MODULES(stelMain Core Concurrent Gui Network OpenGL Widgets PrintSupport)
      IF(ENABLE_MEDIA)
          QT5_USE_MODULES(stelMain Multimedia MultimediaWidgets)
      ENDIF()
+     IF(ENABLE_SCRIPTING)
+          QT5_USE_MODULES(stelMain Script)
+     ENDIF()
      IF(USE_PLUGIN_TELESCOPECONTROL)
           QT5_USE_MODULES(stelMain SerialPort)
      ENDIF()
@@ -485,10 +488,13 @@ ELSE()
      # This will add the ANGLE lib if the Qt version supports it.
      TARGET_LINK_LIBRARIES(stellarium ${Qt5Gui_LIBRARIES} ${Qt5Gui_OPENGL_LIBRARIES})
 
-     QT5_USE_MODULES(stellarium Core Concurrent Gui Network OpenGL Script Widgets PrintSupport)
+     QT5_USE_MODULES(stellarium Core Concurrent Gui Network OpenGL Widgets PrintSupport)
      IF(ENABLE_MEDIA)
           QT5_USE_MODULES(stellarium Multimedia MultimediaWidgets)
      ENDIF()
+     IF(ENABLE_SCRIPTING)
+          QT5_USE_MODULES(stellarium Script)
+     ENDIF()
      IF(USE_PLUGIN_TELESCOPECONTROL)
           QT5_USE_MODULES(stellarium SerialPort)
      ENDIF()
@@ -511,215 +517,3 @@ IF(MSVC)
 ENDIF(MSVC)
 
 INSTALL(TARGETS stellarium DESTINATION bin)
-
-
-#############################################################################################
-################################## Build unit tests #########################################
-#############################################################################################
-
-SET(STELLARIUM_TESTS)
-MACRO(ADD_TEST NAME)
-     SET(STELLARIUM_TESTS ${STELLARIUM_TESTS} ${NAME})
-ENDMACRO()
-
-SET(extLinkerOptionTest ${QT_QTCORE_LIBRARY} ${QT_QTNETWORK_LIBRARY} ${QT_QTTEST_LIBRARY} ${QT_QTGUI_LIBRARY} ${QT_QTOPENGL_LIBRARY} ${OPENGL_LIBRARIES} ${ZLIB_LIBRARIES})
-
-# Custom target used to build all tests at once
-ADD_CUSTOM_TARGET(buildTests)
-
-SET(tests_testDates_SRCS
-     tests/testDates.hpp
-     tests/testDates.cpp
-     core/StelUtils.hpp
-     core/StelUtils.cpp
-)
-IF(WIN32)
-     # StelUtils required zlib sources
-     SET(tests_testDates_SRCS ${tests_testDates_SRCS} ${zlib_SRCS})
-ENDIF()
-ADD_EXECUTABLE(testDates EXCLUDE_FROM_ALL ${tests_testDates_SRCS})
-QT5_USE_MODULES(testDates Core Gui Widgets Script Test)
-TARGET_LINK_LIBRARIES(testDates ${extLinkerOptionTest})
-ADD_DEPENDENCIES(buildTests testDates)
-ADD_TEST(testDates)
-
-SET(tests_testStelFileMgr_SRCS
-     tests/testStelFileMgr.hpp
-     tests/testStelFileMgr.cpp
-     core/StelFileMgr.hpp
-     core/StelFileMgr.cpp
-)
-ADD_EXECUTABLE(testStelFileMgr EXCLUDE_FROM_ALL ${tests_testStelFileMgr_SRCS})
-QT5_USE_MODULES(testStelFileMgr Core Gui Widgets Script Test)
-TARGET_LINK_LIBRARIES(testStelFileMgr ${extLinkerOptionTest})
-ADD_DEPENDENCIES(buildTests testStelFileMgr)
-ADD_TEST(testStelFileMgr)
-
-SET(tests_testStelSphereGeometry_SRCS
-     tests/testStelSphereGeometry.hpp
-     tests/testStelSphereGeometry.cpp
-     core/StelSphereGeometry.hpp
-     core/StelSphereGeometry.cpp
-     core/StelVertexArray.hpp
-     core/StelVertexArray.cpp
-     core/OctahedronPolygon.hpp
-     core/OctahedronPolygon.cpp
-     core/StelJsonParser.hpp
-     core/StelJsonParser.cpp
-     core/StelUtils.hpp
-     core/StelUtils.cpp
-     core/StelProjector.hpp
-     core/StelProjector.cpp
-     core/StelFileMgr.hpp
-     core/StelFileMgr.cpp
-     core/StelTranslator.hpp
-     core/StelTranslator.cpp
-     ${glues_lib_SRCS}
-)
-IF(WIN32)
-     # StelUtils required zlib sources
-     SET(tests_testStelSphereGeometry_SRCS ${tests_testStelSphereGeometry_SRCS} ${zlib_SRCS})
-ENDIF()
-ADD_EXECUTABLE(testStelSphereGeometry EXCLUDE_FROM_ALL ${tests_testStelSphereGeometry_SRCS})
-QT5_USE_MODULES(testStelSphereGeometry Core Gui OpenGL Test)
-TARGET_LINK_LIBRARIES(testStelSphereGeometry ${extLinkerOptionTest})
-ADD_DEPENDENCIES(buildTests testStelSphereGeometry)
-ADD_TEST(testStelSphereGeometry)
-
-#SET(tests_testStelSphericalIndex_SRCS
-#     tests/testStelSphericalIndex.hpp
-#     tests/testStelSphericalIndex.cpp
-#     core/StelSphericalIndex.hpp
-#     core/StelSphericalIndex.cpp
-#     core/StelSphereGeometry.hpp
-#     core/StelSphereGeometry.cpp
-#     core/StelVertexArray.hpp
-#     core/StelVertexArray.cpp
-#     core/OctahedronPolygon.hpp
-#     core/OctahedronPolygon.cpp
-#     core/StelJsonParser.hpp
-#     core/StelJsonParser.cpp
-#     core/StelUtils.cpp
-#     core/StelUtils.hpp
-#     core/StelProjector.cpp
-#     core/StelProjector.hpp
-#     core/StelTranslator.cpp
-#     core/StelTranslator.hpp
-#     ${glues_lib_SRCS})
-#ADD_EXECUTABLE(testStelSphericalIndex EXCLUDE_FROM_ALL ${tests_testStelSphericalIndex_SRCS})
-#QT5_USE_MODULES(testStelSphericalIndex Core Gui Widgets OpenGL Script Test)
-#TARGET_LINK_LIBRARIES(testStelSphericalIndex ${extLinkerOptionTest})
-#ADD_DEPENDENCIES(buildTests testStelSphericalIndex)
-
-SET(tests_testStelJsonParser_SRCS
-     tests/testStelJsonParser.hpp
-     tests/testStelJsonParser.cpp
-     core/StelJsonParser.hpp
-     core/StelJsonParser.cpp
-)
-ADD_EXECUTABLE(testStelJsonParser EXCLUDE_FROM_ALL ${tests_testStelJsonParser_SRCS})
-QT5_USE_MODULES(testStelJsonParser Core Gui Widgets Script Test)
-TARGET_LINK_LIBRARIES(testStelJsonParser ${extLinkerOptionTest})
-ADD_DEPENDENCIES(buildTests testStelJsonParser)
-ADD_TEST(testStelJsonParser)
-
-SET(tests_testStelVertexArray_SRCS
-     tests/testStelVertexArray.hpp
-     tests/testStelVertexArray.cpp
-     core/StelVertexArray.hpp
-)
-ADD_EXECUTABLE(testStelVertexArray EXCLUDE_FROM_ALL ${tests_testStelVertexArray_SRCS})
-QT5_USE_MODULES(testStelVertexArray Core Gui Test OpenGL)
-TARGET_LINK_LIBRARIES(testStelVertexArray ${extLinkerOptionTest})
-ADD_DEPENDENCIES(buildTests testStelVertexArray)
-ADD_TEST(testStelVertexArray)
-
-SET(tests_testDeltaT_SRCS
-     tests/testDeltaT.hpp
-     tests/testDeltaT.cpp
-     core/StelUtils.hpp
-     core/StelUtils.cpp
-)
-IF(WIN32)
-     # StelUtils required zlib sources
-     SET(tests_testDeltaT_SRCS ${tests_testDeltaT_SRCS} ${zlib_SRCS})
-ENDIF()
-ADD_EXECUTABLE(testDeltaT EXCLUDE_FROM_ALL ${tests_testDeltaT_SRCS})
-QT5_USE_MODULES(testDeltaT Core Gui Widgets Script Test)
-TARGET_LINK_LIBRARIES(testDeltaT ${extLinkerOptionTest})
-ADD_DEPENDENCIES(buildTests testDeltaT)
-ADD_TEST(testDeltaT)
-
-SET(tests_testConversions_SRCS
-     tests/testConversions.hpp
-     tests/testConversions.cpp
-     core/StelUtils.hpp
-     core/StelUtils.cpp
-)
-IF(WIN32)
-     # StelUtils required zlib sources
-     SET(tests_testConversions_SRCS ${tests_testConversions_SRCS} ${zlib_SRCS})
-ENDIF()
-ADD_EXECUTABLE(testConversions EXCLUDE_FROM_ALL ${tests_testConversions_SRCS})
-QT5_USE_MODULES(testConversions Core Gui Widgets Script Test)
-TARGET_LINK_LIBRARIES(testConversions ${extLinkerOptionTest})
-ADD_DEPENDENCIES(buildTests testConversions)
-ADD_TEST(testConversions)
-
-SET(tests_testExtinction_SRCS
-     tests/testExtinction.hpp
-     tests/testExtinction.cpp
-     core/RefractionExtinction.hpp
-     core/RefractionExtinction.cpp
-)
-ADD_EXECUTABLE(testExtinction EXCLUDE_FROM_ALL ${tests_testExtinction_SRCS})
-QT5_USE_MODULES(testExtinction Core Gui Widgets Script Test)
-TARGET_LINK_LIBRARIES(testExtinction ${extLinkerOptionTest})
-ADD_DEPENDENCIES(buildTests testExtinction)
-ADD_TEST(testExtinction)
-
-SET(tests_testRefraction_SRCS
-     tests/testRefraction.hpp
-     tests/testRefraction.cpp
-     core/RefractionExtinction.hpp
-     core/RefractionExtinction.cpp
-     core/StelUtils.hpp
-     core/StelUtils.cpp
-)
-IF(WIN32)
-     # StelUtils required zlib sources
-     SET(tests_testRefraction_SRCS ${tests_testRefraction_SRCS} ${zlib_SRCS})
-ENDIF()
-ADD_EXECUTABLE(testRefraction EXCLUDE_FROM_ALL ${tests_testRefraction_SRCS})
-QT5_USE_MODULES(testRefraction Core Gui Widgets Script Test)
-TARGET_LINK_LIBRARIES(testRefraction ${extLinkerOptionTest})
-ADD_DEPENDENCIES(buildTests testRefraction)
-ADD_TEST(testRefraction)
-
-SET(tests_testPrecession_SRCS
-     tests/testPrecession.hpp
-     tests/testPrecession.cpp
-     core/planetsephems/precession.h
-     core/planetsephems/precession.c
-     core/StelUtils.hpp
-     core/StelUtils.cpp
-)
-IF(WIN32)
-     # StelUtils required zlib sources
-     SET(tests_testPrecession_SRCS ${tests_testPrecession_SRCS} ${zlib_SRCS})
-ENDIF()
-ADD_EXECUTABLE(testPrecession EXCLUDE_FROM_ALL ${tests_testPrecession_SRCS})
-QT5_USE_MODULES(testPrecession Core Gui Widgets Script Test)
-TARGET_LINK_LIBRARIES(testPrecession ${extLinkerOptionTest})
-ADD_DEPENDENCIES(buildTests testPrecession)
-ADD_TEST(testPrecession)
-
-ADD_CUSTOM_TARGET(tests COMMENT "Run the Stellarium unit tests")
-FOREACH(NAME ${STELLARIUM_TESTS})
-     IF(MSVC)
-          ADD_CUSTOM_COMMAND(TARGET tests POST_BUILD COMMAND ./${CMAKE_BUILD_TYPE}/${NAME}.exe WORKING_DIRECTORY ${CMAKE_BINARY_DIR}/src)
-     ELSE()
-          ADD_CUSTOM_COMMAND(TARGET tests POST_BUILD COMMAND ./${NAME} WORKING_DIRECTORY ${CMAKE_BINARY_DIR}/src)
-     ENDIF()
-ENDFOREACH()
-ADD_DEPENDENCIES(tests buildTests)
