#!/bin/sh
#
# $FreeBSD$
#
# PROVIDE: elasticsearch
# REQUIRE: NETWORKING SERVERS
# BEFORE: DAEMON
# KEYWORD: shutdown
#
# Add the following line to /etc/rc.conf to enable elasticsearch:
#
# elasticsearch_enable="YES"
#
# elasticsearch_user (username): Set to elasticsearch by default.
#               Set it to required username.
# elasticsearch_group (group):   Set to elasticsearch by default.
#               Set it to required group.
# elasticsearch_config (path):   Set to /usr/local/etc/elasticsearch/elasticsearch.yml by default.
#               Set it to the config file location.
# elasticsearch_min_mem (num): Minumum JVM heap size, 256m by default.
# elasticsearch_max_mem (num): Maximum JVM heap size, 1g by default.
# elasticsearch_props (args):  Additional java properties or arguments.
# elasticsearch_tmp (path):  Set to /var/tmp/elasticsearch by default.
#		Set it to the path to be used for temp files.
#
. /etc/rc.subr

name=elasticsearch
rcvar=elasticsearch_enable

load_rc_config ${name}

: ${elasticsearch_enable:="NO"}
: ${elasticsearch_user:=%%SEARCHUSER%%}
: ${elasticsearch_group:=%%SEARCHGROUP%%}
: ${elasticsearch_config:="%%PREFIX%%/etc/elasticsearch/elasticsearch.yml"}
: ${elasticsearch_min_mem:="256m"}
: ${elasticsearch_max_mem:="1g"}
: ${elasticsearch_props:=""}
: ${elasticsearch_tmp:="/var/tmp/elasticsearch"}

# Force the JVM to use IPv4 stack
# elasticshearch_props"-Djava.net.preferIPv4Stack=true"

required_files="${elasticsearch_config}"
pidfile="/var/run/${name}.pid"

ES_LIB="%%PREFIX%%/lib/elasticsearch"
ES_CLASSPATH=$ES_LIB/elasticsearch-%%PORTVERSION%%.jar:$ES_LIB/*:$ES_LIB/sigar/*

java_options=" 	-server \
		-Xms${elasticsearch_min_mem} \
		-Xmx${elasticsearch_max_mem} \
		-Xss256k \
		-Djava.awt.headless=true \
		-XX:+UseParNewGC \
		-XX:+UseConcMarkSweepGC \
		-XX:CMSInitiatingOccupancyFraction=75 \
		-XX:+UseCMSInitiatingOccupancyOnly \
		-XX:+HeapDumpOnOutOfMemoryError \
		-XX:+DisableExplicitGC \
		-Delasticsearch	\
		-Des.config=${elasticsearch_config} \
		-cp ${ES_CLASSPATH}"

extra_commands="console status"
console_cmd="elasticsearch_console"
start_precmd="elasticsearch_precmd"
status_cmd="elasticsearch_status"
stop_cmd="elasticsearch_stop"
command="/usr/sbin/daemon"
command_args="-f %%LOCALBASE%%/bin/java -Des.pidfile=${pidfile} ${elasticsearch_props} ${java_options} org.elasticsearch.bootstrap.Elasticsearch"

elasticsearch_precmd()
{
	rc_pid=$(elasticsearch_check_pidfile $pidfile)

	if [ -n "$rc_pid" ]; then
		[ -n "$rc_fast" ] && return 0
		echo "${name} is already running: $rc_pid"
		return 1
	fi
        touch ${pidfile}
        chown ${elasticsearch_user}:${elasticsearch_group} ${pidfile}
	/usr/bin/install -d -o ${elasticsearch_user} -g ${elasticsearch_group} -m 750 ${elasticsearch_tmp}
	/usr/bin/install -d -o ${elasticsearch_user} -g ${elasticsearch_group} -m 750 /var/db/elasticsearch
	/usr/bin/install -d -o ${elasticsearch_user} -g ${elasticsearch_group} -m 750 /var/log/elasticsearch
}

elasticsearch_console()
{
	rc_pid=$(elasticsearch_check_pidfile $pidfile)

	if [ -n "$rc_pid" ]; then
		[ -n "$rc_fast" ] && return 0
		echo "${name} is already running: $rc_pid"
		return 1
	fi
	%%LOCALBASE%%/bin/java -Des.foreground=yes ${elasticsearch_props} ${java_options} org.elasticsearch.bootstrap.Elasticsearch
}


elasticsearch_stop()
{
	rc_pid=$(elasticsearch_check_pidfile $pidfile)

	if [ -z "$rc_pid" ]; then
		[ -n "$rc_fast" ] && return 0
		echo "${name} not running? (check $pidfile)."
		return 1
	fi

	echo "Stopping ${name}."
	kill ${rc_pid} 2> /dev/null
}

elasticsearch_status()
{
	rc_pid=$(elasticsearch_check_pidfile $pidfile)

	if [ -z "$rc_pid" ]; then
		[ -n "$rc_fast" ] && return 0
		echo "${name} not running? (check $pidfile)."
		return 1
	fi
	echo "${name} is running as pid ${rc_pid}."
}

elasticsearch_check_pidfile()
{
	_pidfile=$1
	if [ -z "$_pidfile" ]; then
		err 3 'USAGE: elasticsearch_check_pidfile pidfile'
	fi
	if [ ! -f $_pidfile ]; then
		debug "pid file ($_pidfile): not readable."
		return
	fi
	read _pid _junk < $_pidfile
	if [ -z "$_pid" ]; then
		debug "pid file ($_pidfile): no pid in file."
		return
	fi
	if [ -n "`/usr/bin/su -m ${elasticsearch_user} -c '%%LOCALBASE%%/bin/jps -l' | grep -e "^$_pid"`" ]; then
		echo -n $_pid
	fi
}

run_rc_command "$1"
