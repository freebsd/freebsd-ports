--- yasql.in.orig	2005-05-09 16:01:47 UTC
+++ yasql.in
@@ -174,7 +174,7 @@ sub sighandle {
       wrn("Connection lost (timeout: $conf{connection_timeout})");
       quit(1);
     } else {
-      err("Could not connect to database, timed out. (timeout: "
+      die("Could not connect to database, timed out. (timeout: "
          ."$conf{connection_timeout})");
     }
   }
@@ -769,7 +769,7 @@ sub db_connect {
     }
   }
   unless($found) {
-    err("Could not find DBD::Oracle... please install.  Available drivers: "
+    die("Could not find DBD::Oracle... please install.  Available drivers: "
        .join(", ", @drivers) . ".\n");
   }
   #print "drivers: [" . join("|", @drivers) . "]\n";
@@ -921,7 +921,7 @@ sub db_connect {
     $connect_string = '' if $connect_string eq 'external';
     $dbhandle = db_connect($die_on_error,$ora_session_mode,undef,undef,$connect_string);
   } elsif($die_on_error) {
-    err("Could not connect to database: $dberrstr [$dberr]");
+    die("Could not connect to database: $dberrstr [$dberr]");
   } else {
     wrn("Could not connect to database: $dberrstr [$dberr]");
     return(0);
@@ -1010,7 +1010,7 @@ sub get_up {
 sub check_oracle_home {
   # This checks for the ORACLE_HOME environment variable and dies if it's
   # not set
-  err("Please set your ORACLE_HOME environment variable!") 
+  die("Please set your ORACLE_HOME environment variable!") 
     unless $ENV{ORACLE_HOME};
   return(1);
 }
@@ -1416,7 +1416,7 @@ sub get_csv_file {
 }
 
 sub close_csv {
-  close(CSV) || err("Could not close CSV filehandle: $!");
+  close(CSV) || die("Could not close CSV filehandle: $!");
   $csv_filehandle_open = 0;
   $csv_max_lines = 0;
 }
@@ -2404,10 +2404,10 @@ sub describe {
 	if($op && $op eq '>' || $op eq '>>') {
     	    ($op_text) = glob($op_text);
     	    debugmsg(3, "Opening file '$op_text' for output redirection using [$op]");
-	    open(FOUT, $op . $op_text) || do query_err('redirect',"Cannot open file '$op_text' for writing: $!", '');
+	    open(FOUT, $op . $op_text) || query_err('redirect',"Cannot open file '$op_text' for writing: $!", '');
         } elsif($op eq '|') {
     	    ($op_text) = glob($op_text);
-	    open(FOUT, $op . $op_text) || do query_err('pipe',"Cannot open pipe '$op_text': $!", '');
+	    open(FOUT, $op . $op_text) || query_err('pipe',"Cannot open pipe '$op_text': $!", '');
 	} else {
 	    open(FOUT, ">&STDOUT");
 	}
@@ -2873,7 +2873,7 @@ sub wildcard_expand {
   my $newsql = $sql;
   my $fromstuff;
   my $wheregrouporder = $sql;
-  $wheregrouporder =~ s/.*(where|order|group).*/\1/;
+  $wheregrouporder =~ s/.*(where|order|group).*/$1/;
   if ($wheregrouporder eq $sql) {
     $wheregrouporder = "";
   }
@@ -2887,7 +2887,7 @@ sub wildcard_expand {
     my %column_prefix;
     foreach my $table (@tlist) {
       $table =~ s/^ *//;
-      $table =~ s/([^ ]+)\s+(.*)/\1/;
+      $table =~ s/([^ ]+)\s+(.*)/$1/;
       $column_prefix{$table} = $2 ? $2 : $table;
       $tablelist .= ($tablelist ? "," : "") . $table;
     }
@@ -3644,7 +3644,7 @@ Return limit:
   Examples:
     The following will run the query, then run it again with different settings:
       user\@ORCL> select * from table;10
-      user\@ORCL> \G50
+      user\@ORCL> \\G50
   
 Redirection:
   You can add a shell like redirection operator after a query to pipe the output
@@ -3657,7 +3657,7 @@ Redirection:
 
     Examples:
       user\@ORCL> select * from table; > table.dump
-      user\@ORCL> select * from table\S > table.csv
+      user\@ORCL> select * from table \\S > table.csv
 
   Input:
     You can use '<' to grab data from a CSV file.  The file must be formatted
@@ -4179,7 +4179,7 @@ Foundation, Inc., 59 Temple Place - Suit
 
 =item NULL stops printing after table goes into overflow or something
 
-=item extra space in \G... maybe others
+=item extra space in \\G... maybe others
 
 =item bug: tag completion doesn't work with caps anymore
 
