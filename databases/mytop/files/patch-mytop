
$FreeBSD$

--- mytop.orig
+++ mytop
@@ -153,7 +153,7 @@
     "idle|i"              => \$config{idle},
     "resolve|r"           => \$config{resolve},
     "prompt!"             => \$config{prompt},
-    "long|!"              => \$config{long_nums},
+    "long!"               => \$config{long_nums},
     "mode|m=s"            => \$config{mode},
     "sort=s"              => \$config{sort},
 );
@@ -193,6 +193,7 @@
     *BLUE   = sub { };
     *WHITE  = sub { };
     *BOLD   = sub { };
+    *MAGENTA = sub { };
 }
 
 my $RESET  = RESET()   || '';
@@ -202,6 +203,7 @@
 my $BLUE   = BLUE()    || '';
 my $WHITE  = WHITE()   || '';
 my $BOLD   = BOLD()    || '';
+my $MAGENTA= MAGENTA() || '';
 
 ## Connect
 
@@ -369,6 +371,10 @@
         require Data::Dumper;
         print Data::Dumper::Dumper([\%config]);
         ReadKey(0);
+
+		if (-M $0) { # restart application, if it was modified - for debugging
+			exec('perl', $0, @ARGV);
+		}
     }
 
     ## m - mode swtich to qps
@@ -377,7 +383,7 @@
     {
         $config{mode} = 'qps';
         Clear() unless $config{batchmode};
-        print "Queries Per Second [hit q to exit this mode]\n";
+        print "Queries Per Second [hit q to exit, hit t for top mode]\n";
         next;
     }
 
@@ -710,7 +716,7 @@
     ##
     if ($config{header})
     {
-        my @recs = Hashes("show status");
+        my @recs = Hashes("SHOW /*!50002 GLOBAL */ STATUS");
 
         ## if the server died or we lost connectivity
         if (not @recs)
@@ -800,8 +806,15 @@
 
         ## Queries per second...
 
-        my $avg_queries_per_sec  = sprintf("%.2f", $STATUS{Questions} / $STATUS{Uptime});
-        my $num_queries          = $STATUS{Questions};
+        my ($num_queries, $old_num_queries);
+        if(defined($STATUS{Queries})) {
+            $num_queries = $STATUS{Queries};
+            $old_num_queries = $OLD_STATUS{Queries};
+        } else {
+            $num_queries = $STATUS{Questions};
+            $old_num_queries = $OLD_STATUS{Questions};
+        }
+        my $avg_queries_per_sec  = sprintf("%.2f", $num_queries / $STATUS{Uptime});
 
         my @t = localtime(time);
 
@@ -819,26 +832,26 @@
         $lines_left--;
 
 
-        printf " Queries: %-5s  qps: %4.0f Slow: %7s         Se/In/Up/De(%%):    %02.0f/%02.0f/%02.0f/%02.0f \n",
-               make_short( $STATUS{Questions} ),  # q total
-               $STATUS{Questions} / $STATUS{Uptime},  # qps, average
+        printf " Queries: %-6s qps: %4.0f Slow: %7s         Se/In/Up/De(%%):    %02.0f/%02.0f/%02.0f/%02.0f \n",
+               make_short( $num_queries ),  # q total
+               $num_queries / $STATUS{Uptime},  # qps, average
                make_short( $STATUS{Slow_queries} ),    # slow
 
                # hmm. a Qcache hit is really a select and should be counted.
-               100 * ($STATUS{Com_select} + ($STATUS{Qcache_hits}||0) )    / $STATUS{Questions},
-               100 * ($STATUS{Com_insert} +  $STATUS{Com_replace} ) / $STATUS{Questions},
-               100 * ($STATUS{Com_update} )  / $STATUS{Questions},
-               100 * $STATUS{Com_delete} / $STATUS{Questions};
+               100 * ($STATUS{Com_select} + ($STATUS{Qcache_hits}||0) )    / $num_queries,
+               100 * ($STATUS{Com_insert} +  $STATUS{Com_replace} ) / $num_queries,
+               100 * ($STATUS{Com_update} )  / $num_queries,
+               100 * $STATUS{Com_delete} / $num_queries;
 
         $lines_left--;
 
         if ($t_delta)
         {
-          my $q_diff = ( $STATUS{Questions} - $OLD_STATUS{Questions} );
-#          print("q_diff: $STATUS{Questions} - $OLD_STATUS{Questions}  / $t_delta = $q_diff\n");
+          my $q_diff = ( $num_queries - $old_num_queries );
+#          print("q_diff: $num_queries - $old_num_queries  / $t_delta = $q_diff\n");
 
           printf("             qps now: %4.0f Slow qps: %3.1f  Threads: %4.0f (%4.0f/%4.0f) %02.0f/%02.0f/%02.0f/%02.0f \n",
-                 ( $STATUS{Questions} - $OLD_STATUS{Questions} ) / $t_delta,
+                 ( $num_queries - $old_num_queries ) / $t_delta,
                  ( # slow now (qps)
                   ($STATUS{Slow_queries} ) ?
                   ( $STATUS{Slow_queries} - $OLD_STATUS{Slow_queries} ) / $t_delta :
@@ -889,8 +902,42 @@
                make_short(($STATUS{Bytes_received} - $OLD_STATUS{Bytes_received}) / $t_delta ),
                make_short(($STATUS{Bytes_sent} - $OLD_STATUS{Bytes_sent}) / $t_delta ))
           if ($t_delta);
-        print "\n\n";
+        print "\n";
 
+        my @master_status = Hashes("show master status");
+        if (@master_status)
+        {
+			foreach my $m (@master_status) {
+				print " Master: $m->{File}/$m->{Position} ",
+					"do: ", GREEN(), "$m->{Binlog_Do_DB} ", RESET(),
+					 "ign: ", MAGENTA(), $m->{Binlog_Ignore_DB}, RESET(), "\n";
+				#$line_prefix = ' ' x length($line_prefix);
+				$lines_left--;
+			}
+		}
+
+        my @slave_status = Hashes("show slave status");
+        if (@slave_status)
+        {
+			my $line_prefix = "  Slave: ";
+			foreach my $s (@slave_status) {
+				print $line_prefix, BOLD(),
+					($s->{Slave_IO_Running} eq 'Yes'
+						&& $s->{Slave_SQL_Running} eq 'Yes'
+						&& $s->{Last_Errno} == 0
+						? ($s->{Seconds_Behind_Master} > 60 ? BOLD('WARN') : GREEN('OK  ')) : RED('ERR ')
+					), RESET(),
+					" Delay: ",
+					defined($s->{Seconds_Behind_Master}) ? sprintf('%03d:%02d', int($s->{Seconds_Behind_Master} / 60), $s->{Seconds_Behind_Master} % 60) : '---:--',
+					" $s->{Master_User}\@$s->{Master_Host}: ",
+					"$s->{Master_Log_File}/$s->{Read_Master_Log_Pos} ",
+					"\n";
+				#$line_prefix = ' ' x length($line_prefix);
+				$lines_left--;
+			}
+		}
+
+        print "\n";
         $lines_left--;
     }
 
@@ -904,32 +951,22 @@
     ## Threads
     ##
 
-    #my $sz = $width - 52;
-    my @sz   = (8, 9, 15, 10, 9, 6);
-    my $used = scalar(@sz) + Sum(@sz);
-    my $free = $width - $used;
-
-    print BOLD();
-
-    printf "%8s %9s %15s %10s %9s %6s %-${free}s\n",
-        'Id','User','Host/IP','DB','Time', 'Cmd', 'Query or State';
-
-    print RESET();
-
-    ##      Id User Host DB
-    printf "%8s %9s %15s %10s %9s %6s %-${free}s\n",
-        '--','----','-------','--','----', '---', '----------';
-
     $lines_left -= 2;
 
     my $proc_cmd = "show full processlist";
 
     my @data = Hashes($proc_cmd);
 
+    my $max_id = 0;
+
     foreach my $thread (@data)
     {
         last if not $lines_left;
 
+        if ($max_id < $thread->{Id}) {
+            $max_id = $thread->{Id};
+        }
+
         ## Drop Domain Name, unless it looks like an IP address.  If
         ## it's an IP, we'll strip the port number because it's rarely
         ## interesting.
@@ -952,8 +989,11 @@
         {
             $thread->{Host} =~ s/:\d+$//;
             my $host = gethostbyaddr(inet_aton($thread->{Host}), AF_INET);
-            $host =~ s/^([^.]+).*/$1/;
-            $thread->{Host} = $host;
+            if ($host)
+            {
+              $host =~ s/^([^.]+).*/$1/;
+              $thread->{Host} = $host;
+            }
         }
 
         ## Fix possible undefs
@@ -990,6 +1030,23 @@
 
     }
 
+    #my $sz = $width - 52;
+    my $max_id_size = length $max_id;
+    my @sz   = ($max_id_size, 9, 15, 10, 9, 6);
+    my $used = scalar(@sz) + Sum(@sz);
+    my $free = $width - $used;
+
+    print BOLD();
+
+    printf "%${max_id_size}s %9s %15s %10s %9s %6s %-${free}s\n",
+        'Id','User','Host/IP','DB','Time', 'Cmd', 'Query or State';
+
+    print RESET();
+
+    ##      Id User Host DB
+    printf "%${max_id_size}s %9s %15s %10s %9s %6s %-${free}s\n",
+        '--','----','-------','--','----', '---', '----------';
+
     ## Sort by idle time (closest thing to CPU usage I can think of).
 
     my @sorted;
@@ -1044,7 +1101,7 @@
             print GREEN()  if $thread->{Command} eq 'Connect';
         }
 
-        printf "%8d %9.9s %15.15s %10.10s %9d %6.6s %-${free}.${free}s\n",
+        printf "%${max_id_size}d %9.9s %15.15s %10.10s %9d %6.6s %-${free}.${free}s\n",
             $thread->{Id}, $thread->{User}, $thread->{Host}, $thread->{db},
             $thread->{Time}, $thread->{Command}, $smInfo;
 
@@ -1099,8 +1156,8 @@
     my @data = Hashes("SHOW INNODB STATUS");
 
     open P, "|$config{pager}" or die "$!";
-    print keys %{$data[0]};
-    print $data[0]->{Status},"\n";
+    print P keys %{$data[0]};
+    print P $data[0]->{Status},"\n";
     close P;
 }
 
