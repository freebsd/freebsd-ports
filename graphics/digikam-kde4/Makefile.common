# $FreeBSD$
#
# Make sure when DIGIKAM_VER is updated that the following ports are updated:
#	graphics/digikam-kde4
#	graphics/digikam-kde4-doc
#	graphics/digikam-kde4-l10n
#	graphics/kipi-plugin-*
#	graphics/kipi-plugins-kde4
#	graphics/libkface
#	graphics/libkipiplugins
# These ports now lead independent lives:
#	astro/libkgeomap (part of KDE Applications)
#	net/libkvkontakte (part of KDE Applications)
#	net/libmediawiki (part of digiKam 4.12)

DIGIKAM_VER=	4.14.0
MASTER_SITES=	KDE/stable/digikam

KIPI_PLUGINS_ALL=	acquireimages \
			advancedslideshow \
			batchprocess \
			calendar \
			debianscreenshots \
			dngconverter \
			dropbox \
			expoblending \
			facebook \
			flashexport \
			flickrexport \
			galleryexport \
			googleservices \
			gpssync \
			htmlexport \
			imageshackexport \
			imageviewer \
			imgurexport \
			ipodexport \
			jalbumexport \
			jpeglossless \
			kioexport \
			kmlexport \
			kopete \
			mediawiki \
			metadataedit \
			panorama \
			photolayoutseditor \
			piwigoexport \
			printimages \
			rajceexport \
			rawconverter \
			removeredeyes \
			sendimages \
			shwup \
			smug \
			timeadjust \
			videoslideshow \
			vkontakte \
			yandexfotki

# libkipiplugins is special: it's not listed in KIPI_PLUGINS_ALL,
# and every plugin depends on it
libkipiplugins_DIR=	common
libkipiplugins_DESC=	Common library for kipi plugins

batchprocess_DIR=	batchprocessimages
kioexport_DIR=		kioexportimport

acquireimages_DESC=	Acquire images using flat scanner
advancedslideshow_DESC=	Slide images with 2D and 3D effects using OpenGL
batchprocess_DESC=	Batch process images (convert, resize, rename, etc.)
calendar_DESC=		Create calendars
debianscreenshots_DESC=	Export images to Debian Screenshots web service
dngconverter_DESC=	Convert Raw Image to Digital NeGative
dropbox_DESC=		Export images to Dropbox cloud service
expoblending_DESC=	Create pseudo HDR image with a stack of bracketed images
facebook_DESC=		Import/export images to/from a remote Facebook web service
flashexport_DESC=	Export images to Flash using SimpleViewer
flickrexport_DESC=	Export images to a remote Flickr based web service
galleryexport_DESC=	Export images to a remote Gallery
googleservices_DESC=	Export images to Google Services (drive/picasa)
gpssync_DESC=		Geolocalize images
htmlexport_DESC=	Export images collections into a static XHTML page
imageshackexport_DESC=	Export images to ImageShack web service
imageviewer_DESC=	Preview images using OpenGL
imgurexport_DESC=	Export images to ImgUr web service
ipodexport_DESC=	Export images to an Ipod device
jalbumexport_DESC=	Export images to jAlbum
jpeglossless_DESC=	Rotate/flip images without losing quality
kioexport_DESC=		Export images to remote computer using network protocol
kmlexport_DESC=		Create KML files to present images with coordinates
kopete_DESC=		Export images to an instant messaging contact
mediawiki_DESC=		Export images to Mediawiki based web service
metadataedit_DESC=	Edit EXIF, IPTC and XMP metadata
panorama_DESC=		Assemble panoramic photo automatically
# not ready for production yet
# photivointegration_DESC=	Integration of the Photivo RAW-Processor
photolayoutseditor_DESC=Assemble images together
piwigoexport_DESC=	Export images to a remote Piwigo (PHPWebGallery) server
printimages_DESC=	Print images in various format
rajceexport_DESC=	Export images to Rajce web service
rawconverter_DESC=	Convert Raw Image to JPEG/PNG/TIFF
removeredeyes_DESC=	Remove red eyes on image automatically
sendimages_DESC=	Send images by e-mail
shwup_DESC=		Export images to Shwup web service
smug_DESC=		Import/export images to/from a remote SmugMug web service
timeadjust_DESC=	Adjust date and time
videoslideshow_DESC=	Export images as Video Slide Show
vkontakte_DESC=		Export images to VKontakte web service
# Requires https://bugs.kde.org/show_bug.cgi?id=217950
# wallpaper_DESC=	Set image as background on desktop
yandexfotki_DESC=	Export images to Yandex web service

DISTNAME=	digikam-${DIGIKAM_VER}
DISTINFO_FILE=	${.CURDIR:H:H}/graphics/digikam-kde4/distinfo

LICENSE?=	GPLv2

USES+=		tar:bzip2

.if !defined(NO_BUILD)
USES+=		cmake
USE_KDE4+=	automoc4 kdelibs
USE_QT4+=	qmake_build moc_build rcc_build uic_build

WRKSRC?=	${WRKDIR}/${DISTNAME}/extra/${PORTNAME}

PLIST_SUB+=	SHLIB_VER=${DIGIKAM_VER}

. if defined(KIPI_PLUGIN)
CONFLICTS_INSTALL=	kipi-plugins-2.*

DESCR=		${.CURDIR:H:H}/graphics/kipi-plugins-kde4/pkg-descr
USES+=		pkgconfig

.if ${KIPI_PLUGIN} != "libkipiplugins"
EXTRA_PATCHES=	${.CURDIR:H:H}/graphics/kipi-plugins-kde4/files/extrapatch-CMakeLists.txt
LIB_DEPENDS+=	libkipiplugins.so:graphics/libkipiplugins
.endif
EXTRA_PATCHES+=	${.CURDIR:H:H}/graphics/kipi-plugins-kde4/files/extrapatch-extra_kipi_plugins_cmakelists.patch

EXTRACT_AFTER_ARGS=	--no-same-owner --no-same-permissions ${DISTNAME}/extra/kipi-plugins
WRKSRC=		${WRKDIR}/${DISTNAME}/extra/kipi-plugins
BUILD_WRKSRC=	${WRKSRC}/${${KIPI_PLUGIN}_DIR}
INSTALL_WRKSRC=	${BUILD_WRKSRC}

${KIPI_PLUGIN}_DIR?=		${KIPI_PLUGIN}
. endif # defined(KIPI_PLUGIN)
.endif # !defined(NO_BUILD)
