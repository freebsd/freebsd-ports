pba: unbreak for GCC + libc++

In file included from src/./ext/PBA/pba.h:50:0,
                 from src/./optim/bundle_adjustment.h:29,
                 from src/./util/option_manager.h:34,
                 from src/./ui/bundle_adjustment_widget.h:25,
                 from src/ui/bundle_adjustment_widget.cc:17:
src/./ext/PBA/ConfigBA.h:24:12: error: 'vector' is already declared in this scope
 using std::vector;
            ^~~~~~

--- src/ext/PBA/ConfigBA.h.orig	2016-12-07 13:47:54 UTC
+++ src/ext/PBA/ConfigBA.h
@@ -21,7 +21,6 @@
 #ifndef CONFIG_BA_H
 #define CONFIG_BA_H
 #include <vector>
-using std::vector;
 
 namespace pba {
 
@@ -181,7 +180,7 @@ class ConfigBA {
   bool __matlab_format_stat;
   char* __stat_filename;
   const char* __driver_output;
-  vector<float> __bundle_records;
+  std::vector<float> __bundle_records;
   double __timer_record[NUM_TIMER];
   int __num_cpu_thread_all;
   int __num_cpu_thread[NUM_FUNC];
--- src/ext/PBA/SparseBundleCPU.h.orig	2016-12-07 13:47:54 UTC
+++ src/ext/PBA/SparseBundleCPU.h
@@ -146,7 +146,7 @@ class SparseBundleCPU : public ParallelB
   SparseBundleCPU(const int num_threads);
 
   typedef avec<Float> VectorF;
-  typedef vector<int> VectorI;
+  typedef std::vector<int> VectorI;
   typedef float float_t;
 
  protected:  // cpu data
@@ -204,8 +204,8 @@ class SparseBundleCPU : public ParallelB
   VectorF _cuCameraQListW;
 
  protected:
-  bool ProcessIndexCameraQ(vector<int>& qmap, vector<int>& qlist);
-  void ProcessWeightCameraQ(vector<int>& cpnum, vector<int>& qmap, Float* qmapw,
+  bool ProcessIndexCameraQ(std::vector<int>& qmap, std::vector<int>& qlist);
+  void ProcessWeightCameraQ(std::vector<int>& cpnum, std::vector<int>& qmap, Float* qmapw,
                             Float* qlistw);
 
  protected:  // internal functions
--- src/ext/PBA/SparseBundleCU.h.orig	2016-12-07 13:47:54 UTC
+++ src/ext/PBA/SparseBundleCU.h
@@ -40,7 +40,7 @@ class SparseBundleCU : public ParallelBA
   const int* _camera_idx;
   const int* _point_idx;
   const int* _focal_mask;
-  vector<float> _imgpt_datax;
+  std::vector<float> _imgpt_datax;
   ////////////////////////
   float _projection_sse;  // sumed square error
  protected:  // cuda data
@@ -84,9 +84,9 @@ class SparseBundleCU : public ParallelBA
   CuTexImage _cuCameraQListW;
 
  protected:
-  bool ProcessIndexCameraQ(vector<int>& qmap, vector<int>& qlist);
-  void ProcessWeightCameraQ(vector<int>& cpnum, vector<int>& qmap,
-                            vector<float>& qmapw, vector<float>& qlistw);
+  bool ProcessIndexCameraQ(std::vector<int>& qmap, std::vector<int>& qlist);
+  void ProcessWeightCameraQ(std::vector<int>& cpnum, std::vector<int>& qmap,
+                            std::vector<float>& qmapw, std::vector<float>& qlistw);
 
  protected:  // internal functions
   int GetParameterLength();
