Add library suffix to avoid conflict with mesa-libs + mesa-dri.
Library selection is handled by libglvnd and/or libmap.conf.

--- meson.build.orig	2024-04-06 18:40:47 UTC
+++ meson.build
@@ -100,7 +100,7 @@ if dri_drivers_path == ''
 
 dri_drivers_path = get_option('dri-drivers-path')
 if dri_drivers_path == ''
-  dri_drivers_path = join_paths(get_option('prefix'), get_option('libdir'), 'dri')
+  dri_drivers_path = join_paths(get_option('prefix'), get_option('libdir'), 'dri' + get_option('egl-lib-suffix'))
 endif
 dri_search_path = get_option('dri-search-path')
 if dri_search_path == ''
@@ -550,8 +550,7 @@ _glvnd = get_option('glvnd') \
            error_message: 'Cannot build glvnd support for GLX that is not DRI based.') \
   .require(with_glx != 'disabled' or with_egl,
            error_message: 'glvnd requires DRI based GLX and/or EGL') \
-  .require(get_option('egl-lib-suffix') == '',
-           error_message: '''EGL lib suffix can't be used with libglvnd''')
+
 dep_glvnd = dependency('libglvnd', version : '>= 1.3.2', required : _glvnd)
 with_glvnd = dep_glvnd.found()
 if with_glvnd
@@ -622,7 +621,7 @@ if vdpau_drivers_path == ''
 
 vdpau_drivers_path = get_option('vdpau-libs-path')
 if vdpau_drivers_path == ''
-  vdpau_drivers_path = join_paths(get_option('libdir'), 'vdpau')
+  vdpau_drivers_path = join_paths(get_option('libdir'), 'vdpau' + get_option('egl-lib-suffix'))
 endif
 
 prog_glslang = find_program('glslangValidator', native : true, required : with_vulkan_overlay_layer or with_aco_tests or with_amd_vk or with_intel_vk)
@@ -739,7 +738,7 @@ if va_drivers_path == ''
 
 va_drivers_path = get_option('va-libs-path')
 if va_drivers_path == ''
-  va_drivers_path = join_paths(get_option('libdir'), 'dri')
+  va_drivers_path = join_paths(get_option('libdir'), 'dri' + get_option('egl-lib-suffix'))
 endif
 
 with_gallium_xa = get_option('gallium-xa') \
--- src/amd/vulkan/meson.build.orig	2024-03-20 22:46:44 UTC
+++ src/amd/vulkan/meson.build
@@ -207,7 +207,7 @@ libvulkan_radeon = shared_library(
 endif
 
 libvulkan_radeon = shared_library(
-  'vulkan_radeon',
+  'vulkan_radeon' + get_option('egl-lib-suffix'),
   [libradv_files, radv_entrypoints, sha1_h, radix_sort_spv, bvh_spv, radv_annotate_layer],
   vs_module_defs : vulkan_api_def,
   include_directories : [
--- src/egl/meson.build.orig	2020-12-03 22:36:27 UTC
+++ src/egl/meson.build
@@ -144,7 +144,7 @@ if not with_glvnd
   egl_lib_name = 'EGL' + get_option('egl-lib-suffix')
   egl_lib_version = '1.0.0'
 else
-  egl_lib_name = 'EGL_@0@'.format(glvnd_vendor_name)
+  egl_lib_name = 'EGL_@0@'.format(glvnd_vendor_name) + get_option('egl-lib-suffix')
   egl_lib_version = '0.0.0'
   deps_for_egl += dep_glvnd
   files_egl += [g_egldispatchstubs_h, g_egldispatchstubs_c]
--- src/gallium/auxiliary/pipe-loader/meson.build.orig	2023-02-01 23:53:26 UTC
+++ src/gallium/auxiliary/pipe-loader/meson.build
@@ -58,7 +58,7 @@ libpipe_loader_dynamic = static_library(
   c_args : [
     libpipe_loader_defines,
     '-DPIPE_SEARCH_DIR="@0@"'.format(
-      join_paths(get_option('prefix'), get_option('libdir'), 'gallium-pipe')
+      join_paths(get_option('prefix'), get_option('libdir'), 'gallium-pipe' + get_option('egl-lib-suffix'))
     )
   ],
   gnu_symbol_visibility : 'hidden',
--- src/gallium/targets/opencl/meson.build.orig	2023-02-01 23:53:26 UTC
+++ src/gallium/targets/opencl/meson.build
@@ -30,7 +30,7 @@ llvm_libdir = dep_llvm.get_variable(cmake : 'LLVM_LIBR
 endif
 
 llvm_libdir = dep_llvm.get_variable(cmake : 'LLVM_LIBRARY_DIR', configtool: 'libdir')
-opencl_libname = with_opencl_icd ? 'MesaOpenCL' : 'OpenCL'
+opencl_libname = with_opencl_icd ? 'MesaOpenCL' + get_option('egl-lib-suffix') : 'OpenCL'
 
 polly_dep = null_dep
 polly_isl_dep = null_dep
@@ -117,7 +117,7 @@ if with_opencl_icd
 
 if with_opencl_icd
   _config = configuration_data()
-  _config.set('OPENCL_LIBNAME', 'MesaOpenCL')
+  _config.set('OPENCL_LIBNAME', 'MesaOpenCL' + get_option('egl-lib-suffix'))
   _config.set('OPENCL_VERSION', opencl_version)
   configure_file(
     configuration : _config,
--- src/gallium/targets/pipe-loader/meson.build.orig	2023-02-01 23:53:26 UTC
+++ src/gallium/targets/pipe-loader/meson.build
@@ -44,7 +44,7 @@ endif
   pipe_loader_link_deps += files('pipe.sym')
 endif
 
-pipe_loader_install_dir = join_paths(get_option('libdir'), 'gallium-pipe')
+pipe_loader_install_dir = join_paths(get_option('libdir'), 'gallium-pipe' + get_option('egl-lib-suffix'))
 
 _kmsro_targets = [
    driver_kmsro, driver_v3d, driver_vc4, driver_freedreno, driver_etnaviv,
--- src/gbm/backends/dri/gbm_dri.c.orig	2020-05-30 21:28:01 UTC
+++ src/gbm/backends/dri/gbm_dri.c
@@ -307,14 +307,6 @@ dri_bind_extensions(struct gbm_dri_device *dri,
 static const __DRIextension **
 dri_open_driver(struct gbm_dri_device *dri)
 {
-   /* Temporarily work around dri driver libs that need symbols in libglapi
-    * but don't automatically link it in.
-    */
-   /* XXX: Library name differs on per platforms basis. Update this as
-    * osx/cygwin/windows/bsd gets support for GBM..
-    */
-   dlopen("libglapi.so.0", RTLD_LAZY | RTLD_GLOBAL);
-
    static const char *search_path_vars[] = {
       /* Read GBM_DRIVERS_PATH first for compatibility, but LIBGL_DRIVERS_PATH
        * is recommended over GBM_DRIVERS_PATH.
--- src/gbm/meson.build.orig	2022-09-12 22:59:56 UTC
+++ src/gbm/meson.build
@@ -52,7 +52,7 @@ libgbm = shared_library(
 endif
 
 libgbm = shared_library(
-  libgbm_name,
+  libgbm_name + get_option('egl-lib-suffix'),
   files_gbm,
   include_directories : incs_gbm,
   c_args : [args_gbm],
--- src/glx/meson.build.orig	2020-12-03 22:36:27 UTC
+++ src/glx/meson.build
@@ -108,10 +108,10 @@ elif with_dri_platform == 'windows'
 endif
 
 if not with_glvnd
-  gl_lib_name = 'GL'
+  gl_lib_name = 'GL' + get_option('egl-lib-suffix')
   gl_lib_version = '1.2.0'
 else
-  gl_lib_name = 'GLX_@0@'.format(glvnd_vendor_name)
+  gl_lib_name = 'GLX_@0@'.format(glvnd_vendor_name) + get_option('egl-lib-suffix')
   gl_lib_version = '0.0.0'
   files_libglx += files(
     'g_glxglvnddispatchfuncs.c',
--- src/intel/vulkan/meson.build.orig	2021-02-06 23:04:35 UTC
+++ src/intel/vulkan/meson.build
@@ -170,7 +170,7 @@ libanv_common = static_library(
 )
 
 libvulkan_intel = shared_library(
-  'vulkan_intel',
+  'vulkan_intel' + get_option('egl-lib-suffix'),
   [files('anv_gem.c'), anv_entrypoints[0]],
   include_directories : [
     inc_include, inc_src, inc_mapi, inc_mesa, inc_gallium, inc_intel, inc_compiler, inc_vulkan_wsi,
--- src/intel/vulkan_hasvk/meson.build.orig	2022-09-03 20:27:51 UTC
+++ src/intel/vulkan_hasvk/meson.build
@@ -181,7 +181,7 @@ libvulkan_intel_hasvk = shared_library(
 )
 
 libvulkan_intel_hasvk = shared_library(
-  'vulkan_intel_hasvk',
+  'vulkan_intel_hasvk' + get_option('egl-lib-suffix'),
   [files('anv_gem.c'), anv_hasvk_entrypoints[0]],
   include_directories : [
     inc_include, inc_src, inc_mapi, inc_mesa, inc_gallium, inc_intel, inc_compiler,
--- src/mapi/es1api/meson.build.orig	2020-05-30 21:28:01 UTC
+++ src/mapi/es1api/meson.build
@@ -33,7 +33,7 @@ if with_platform_windows
 endif
 
 libglesv1_cm = shared_library(
-  'GLESv1_CM' + get_option('gles-lib-suffix'),
+  'GLESv1_CM' + get_option('egl-lib-suffix') + get_option('gles-lib-suffix'),
   ['../entry.c', es1_glapi_mapi_tmp_h],
   c_args : [
     c_msvc_compat_args,
--- src/mapi/es2api/meson.build.orig	2020-05-30 21:28:01 UTC
+++ src/mapi/es2api/meson.build
@@ -33,7 +33,7 @@ if with_platform_windows
 endif
 
 libgles2 = shared_library(
-  'GLESv2' + get_option('gles-lib-suffix'),
+  'GLESv2' + get_option('egl-lib-suffix') + get_option('gles-lib-suffix'),
   ['../entry.c', es2_glapi_mapi_tmp_h],
   c_args : [
     c_msvc_compat_args,
--- src/mapi/shared-glapi/meson.build.orig	2023-03-13 18:59:50 UTC
+++ src/mapi/shared-glapi/meson.build
@@ -46,7 +46,7 @@ libglapi = shared_library(
 endif
 
 libglapi = shared_library(
-  'glapi',
+  'glapi' + get_option('egl-lib-suffix'),
   [files_shared_glapi, shared_glapi_mapi_tmp_h],
   c_args : [
     _glapi_c_args,
--- src/util/meson.build.orig	2022-12-03 14:41:29 UTC
+++ src/util/meson.build
@@ -170,10 +170,10 @@ files_mesa_util = files(
   'mesa_cache_db.h',
 )
 
-files_drirc = files('00-mesa-defaults.conf')
+files_drirc = files('00-mesa@0@-defaults.conf'.format(get_option('egl-lib-suffix')))
 
 if with_amd_vk
-  files_drirc += files('00-radv-defaults.conf')
+  files_drirc += files('00-radv@0@-defaults.conf'.format(get_option('egl-lib-suffix')))
 endif
 
 if with_tests
