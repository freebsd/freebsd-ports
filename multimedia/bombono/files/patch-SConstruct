--- SConstruct.orig	2013-03-07 21:20:45 UTC
+++ SConstruct
@@ -59,7 +59,7 @@ ThreadOpt = ['-pthread']
 common_warn_flags = []
 cxx_warn_flags    = []
 debug_flags   = ['-g', '-O0']
-release_flags = ['-O2']
+release_flags = ['']
 defines       = []
 
 def CalcCommonFlags():
@@ -148,18 +148,6 @@ def AdjustConfigOptions(env):
     #env.Replace (PATH = user_options_dict['PATH'])
     #env.Replace (AR = user_options_dict['AR'])
 
-    # Large File Support
-    if not BV.IsReenter(AdjustConfigOptions):
-        if BV.IsSConsLE_0_96(env):
-            # :TRICKY: nobody but me uses so old scons, so I do it straight
-            dict = { 'CPPDEFINES': ['_LARGEFILE_SOURCE', ('_FILE_OFFSET_BITS', '64')] }
-        else:
-            dict = BV.ParseFlagsForCommand('getconf LFS_CFLAGS', 1)
-            dict.update(BV.ParseFlagsForCommand('getconf LFS_LDFLAGS'))
-            dict.update(BV.ParseFlagsForCommand('getconf LFS_LIBS'))
-        AdjustConfigOptions.lfs = dict
-    env.Append(**AdjustConfigOptions.lfs)
-
     # Multithreading, global
     if IsThreadedBuild:
         env.Append(CCFLAGS = ThreadOpt, LINKFLAGS = ThreadOpt)
@@ -571,7 +559,6 @@ def InstallDir(rel_dst_path, src_dir):
     BV.InstallDir(mgui_env, data_prefix, src_dir)
 
 InstallDir('share/bombono', "resources")
-InstallDir('share', "docs/man")
 
 user_options_dict['XGETTEXT_SOURCES'] = []
 def AddSourcesForXgettext(src_files):
