--- mediamtx.yml.orig	2025-02-02 14:33:21 UTC
+++ mediamtx.yml
@@ -419,7 +419,6 @@ pathDefaults:
   # * whep://existing-url -> the stream is pulled from another WebRTC server / camera
   # * wheps://existing-url -> the stream is pulled from another WebRTC server / camera with HTTPS
   # * redirect -> the stream is provided by another path or server
-  # * rpiCamera -> the stream is provided by a Raspberry Pi Camera
   # The following variables can be used in the source string:
   # * $MTX_QUERY: query parameters (passed by first reader)
   # * $G1, $G2, ...: regular expression groups, if path name is
@@ -504,95 +503,6 @@ pathDefaults:
 
   # RTSP URL which clients will be redirected to.
   sourceRedirect:
-
-  ###############################################
-  # Default path settings -> Raspberry Pi Camera source (when source is "rpiCamera")
-
-  # ID of the camera
-  rpiCameraCamID: 0
-  # Width of frames
-  rpiCameraWidth: 1920
-  # Height of frames
-  rpiCameraHeight: 1080
-  # Flip horizontally
-  rpiCameraHFlip: false
-  # Flip vertically
-  rpiCameraVFlip: false
-  # Brightness [-1, 1]
-  rpiCameraBrightness: 0
-  # Contrast [0, 16]
-  rpiCameraContrast: 1
-  # Saturation [0, 16]
-  rpiCameraSaturation: 1
-  # Sharpness [0, 16]
-  rpiCameraSharpness: 1
-  # Exposure mode.
-  # values: normal, short, long, custom
-  rpiCameraExposure: normal
-  # Auto-white-balance mode.
-  # values: auto, incandescent, tungsten, fluorescent, indoor, daylight, cloudy, custom
-  rpiCameraAWB: auto
-  # Auto-white-balance fixed gains. This can be used in place of rpiCameraAWB.
-  # format: [red,blue]
-  rpiCameraAWBGains: [0, 0]
-  # Denoise operating mode.
-  # values: off, cdn_off, cdn_fast, cdn_hq
-  rpiCameraDenoise: "off"
-  # Fixed shutter speed, in microseconds.
-  rpiCameraShutter: 0
-  # Metering mode of the AEC/AGC algorithm.
-  # values: centre, spot, matrix, custom
-  rpiCameraMetering: centre
-  # Fixed gain
-  rpiCameraGain: 0
-  # EV compensation of the image [-10, 10]
-  rpiCameraEV: 0
-  # Region of interest, in format x,y,width,height (all normalized between 0 and 1)
-  rpiCameraROI:
-  # Whether to enable HDR on Raspberry Camera 3.
-  rpiCameraHDR: false
-  # Tuning file
-  rpiCameraTuningFile:
-  # Sensor mode, in format [width]:[height]:[bit-depth]:[packing]
-  # bit-depth and packing are optional.
-  rpiCameraMode:
-  # frames per second
-  rpiCameraFPS: 30
-  # Autofocus mode
-  # values: auto, manual, continuous
-  rpiCameraAfMode: continuous
-  # Autofocus range
-  # values: normal, macro, full
-  rpiCameraAfRange: normal
-  # Autofocus speed
-  # values: normal, fast
-  rpiCameraAfSpeed: normal
-  # Lens position (for manual autofocus only), will be set to focus to a specific distance
-  # calculated by the following formula: d = 1 / value
-  # Examples: 0 moves the lens to infinity.
-  #           0.5 moves the lens to focus on objects 2m away.
-  #           2 moves the lens to focus on objects 50cm away.
-  rpiCameraLensPosition: 0.0
-  # Specifies the autofocus window, in the form x,y,width,height where the coordinates
-  # are given as a proportion of the entire image.
-  rpiCameraAfWindow:
-  # Manual flicker correction period, in microseconds.
-  rpiCameraFlickerPeriod: 0
-  # Enables printing text on each frame.
-  rpiCameraTextOverlayEnable: false
-  # Text that is printed on each frame.
-  # format is the one of the strftime() function.
-  rpiCameraTextOverlay: '%Y-%m-%d %H:%M:%S - MediaMTX'
-  # Codec. Available values: auto, hardwareH264, softwareH264
-  rpiCameraCodec: auto
-  # Period between IDR frames
-  rpiCameraIDRPeriod: 60
-  # Bitrate
-  rpiCameraBitrate: 5000000
-  # H264 profile
-  rpiCameraProfile: main
-  # H264 level
-  rpiCameraLevel: '4.1'
 
   ###############################################
   # Default path settings -> Hooks
