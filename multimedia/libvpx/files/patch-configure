--- configure.orig
+++ configure
@@ -153,6 +153,11 @@ all_platforms="${all_platforms} x86_64-w
 all_platforms="${all_platforms} x86_64-win64-vs11"
 all_platforms="${all_platforms} x86_64-win64-vs12"
 all_platforms="${all_platforms} x86_64-win64-vs14"
+all_platforms="${all_platforms} arm64-linux-gcc"
+all_platforms="${all_platforms} ia64-linux-gcc"
+all_platforms="${all_platforms} ppc32-linux-gcc"
+all_platforms="${all_platforms} ppc64-linux-gcc"
+all_platforms="${all_platforms} sparc64-linux-gcc"
 all_platforms="${all_platforms} generic-gnu"
 
 # all_targets is a list of all targets that can be configured
@@ -611,15 +612,14 @@
         check_add_cflags -Wimplicit-function-declaration
         check_add_cflags -Wuninitialized
         check_add_cflags -Wunused-variable
-        case ${CC} in
-          *clang*)
-              # libvpx and/or clang have issues with aliasing:
-              # https://code.google.com/p/webm/issues/detail?id=603
-              # work around them until they are fixed
-              check_add_cflags -fno-strict-aliasing
-          ;;
-          *) check_add_cflags -Wunused-but-set-variable ;;
-        esac
+        if ${CC} -v 2>&1 | grep "clang version" >/dev/null; then
+          # libvpx and/or clang have issues with aliasing:
+          # https://code.google.com/p/webm/issues/detail?id=603
+          # work around them until they are fixed
+          check_add_cflags -fno-strict-aliasing
+        else
+          check_add_cflags -Wunused-but-set-variable
+        fi
         enabled extra_warnings || check_add_cflags -Wno-unused-function
     fi
 
