--- configure.orig	2024-01-05 22:26:57 UTC
+++ configure
@@ -744,12 +744,6 @@ case $host_cpu in
         AS_EXT=".asm"
         ASFLAGS="$ASFLAGS -DARCH_X86_64=0 -I\$(SRCPATH)/common/x86/"
         if [ $compiler = GNU ]; then
-            if [[ "$asm" == auto && "$CFLAGS" != *-march* ]]; then
-                CFLAGS="$CFLAGS -march=i686"
-            fi
-            if [[ "$asm" == auto && "$CFLAGS" != *-mfpmath* ]]; then
-                CFLAGS="$CFLAGS -mfpmath=sse -msse -msse2"
-            fi
             CFLAGS="-m32 $CFLAGS"
             LDFLAGS="-m32 $LDFLAGS"
         fi
@@ -764,7 +758,7 @@ case $host_cpu in
             ASFLAGS="$ASFLAGS -f elf32"
         fi
         ;;
-    x86_64)
+    amd64|x86_64)
         ARCH="X86_64"
         AS="${AS-nasm}"
         AS_EXT=".asm"
@@ -801,7 +795,7 @@ case $host_cpu in
             if [ $SYS = MACOSX ] ; then
                 CFLAGS="$CFLAGS -faltivec -fastf -mcpu=G4"
             else
-                CFLAGS="$CFLAGS -maltivec -mabi=altivec"
+                CFLAGS="$CFLAGS -maltivec"
                 define HAVE_ALTIVEC_H
             fi
             if [ "$vsx" != "no" ] ; then
@@ -958,7 +952,7 @@ fi
     fi
 fi
 
-if [ $asm = auto -a \( $ARCH = X86 -o $ARCH = X86_64 \) ] ; then
+if [ $cli_libx264 != system -a $asm = auto -a \( $ARCH = X86 -o $ARCH = X86_64 \) ] ; then
     if ! as_check "vmovdqa32 [eax]{k1}{z}, zmm0" ; then
         VER="$( ($AS --version || echo no assembler) 2>/dev/null | head -n 1 )"
         echo "Found $VER"
@@ -971,9 +965,6 @@ if [ $asm = auto -a $ARCH = ARM ] ; then
 fi
 
 if [ $asm = auto -a $ARCH = ARM ] ; then
-    # set flags so neon is built by default
-    [ $compiler == CL ] || echo $CFLAGS | grep -Eq '(-mcpu|-march|-mfpu)' || CFLAGS="$CFLAGS -mcpu=cortex-a8 -mfpu=neon"
-
     cc_check '' '' '__asm__("add r0, r1, r2");' && define HAVE_ARM_INLINE_ASM
     if [ $compiler = CL ] && cpp_check '' '' 'defined(_M_ARM) && _M_ARM >= 7' ; then
         define HAVE_ARMV6
@@ -984,9 +975,8 @@ if [ $asm = auto -a $ARCH = ARM ] ; then
         cc_check '' '' '__asm__("vadd.i16 q0, q0, q0");' && define HAVE_NEON
         ASFLAGS="$ASFLAGS -c"
     else
-        echo "You specified a pre-ARMv6 or Thumb-1 CPU in your CFLAGS."
-        echo "If you really want to run on such a CPU, configure with --disable-asm."
-        exit 1
+        echo "No usable SIMD found, assuming --disable-asm."
+        asm="no"
     fi
 fi
 
@@ -1018,9 +1008,8 @@ if [ $asm = auto -a $ARCH = MIPS ] ; then
     if cc_check '' '' '__asm__("addvi.b $w0, $w1, 1");' ; then
         define HAVE_MSA
     else
-        echo "You specified a pre-MSA CPU in your CFLAGS."
-        echo "If you really want to run on such a CPU, configure with --disable-asm."
-        exit 1
+        echo "No usable SIMD found, assuming --disable-asm."
+        asm="no"
     fi
 fi
 
@@ -1368,10 +1357,6 @@ fi
     CFLAGS="-Wshadow $CFLAGS"
 fi
 
-if cc_check '' -Wmaybe-uninitialized ; then
-    CFLAGS="-Wno-maybe-uninitialized $CFLAGS"
-fi
-
 if [ $compiler = GNU ] && cc_check '' -fvisibility=hidden ; then
     CFLAGS="$CFLAGS -fvisibility=hidden"
 fi
@@ -1411,6 +1396,9 @@ if [ "$opencl" = "yes" ]; then
         opencl="yes"
         define HAVE_OPENCL "(BIT_DEPTH==8)"
         libdl="-ldl"
+    else
+        opencl="yes"
+        define HAVE_OPENCL "(BIT_DEPTH==8)"
     fi
     LDFLAGS="$LDFLAGS $libdl"
 fi
