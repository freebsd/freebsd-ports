--- Makefile.flags.in.orig	2010-02-23 18:28:09 UTC
+++ Makefile.flags.in
@@ -131,20 +131,20 @@ EXTRA_XPDF_CFLAGS = @EXTRA_XPDF_CFLAGS@
 # from autoconf --enable-observer-debug
 OBSERVER_CXXFLAGS = @OBSERVER_CXXFLAGS@
 
-EXTRA_UTILS_CXXFLAGS = @EXTRA_UTILS_CXXFLAGS@ -pedantic
-EXTRA_KERNEL_CXXFLAGS = @EXTRA_KERNEL_CXXFLAGS@ -pedantic
+EXTRA_UTILS_CXXFLAGS = @EXTRA_UTILS_CXXFLAGS@ 
+EXTRA_KERNEL_CXXFLAGS = @EXTRA_KERNEL_CXXFLAGS@ 
 EXTRA_TESTS_CXXFLAGS = @EXTRA_TESTS_CXXFLAGS@
 EXTRA_GUI_CXXFLAGS = @EXTRA_GUI_CXXFLAGS@ -D CONFIG_DATA_PATH="$(DATA_PATH)"
-EXTRA_XPDF_CXXFLAGS = @EXTRA_XPDF_CXXFLAGS@ -pedantic
+EXTRA_XPDF_CXXFLAGS = @EXTRA_XPDF_CXXFLAGS@ 
 
 # same like for compiler stuff we also define 2 levels 
 # CONFIG_{NAME} can be used for qmake direct {NAME} can be used
 # for compilation
-CONFIG_CFLAGS  	= $(DEBUG) $(OPTIM) $(ARCH) $(WARN) $(C_EXTRA) @STACK_PROTECTOR_FLAGS@ -pipe -posix -ansi -std=c99 -pedantic
-CONFIG_CXXFLAGS	= $(DEBUG) $(OPTIM) $(ARCH) $(WARN) $(CXX_EXTRA) $(OBSERVER_CXXFLAGS) @STACK_PROTECTOR_FLAGS@ -pipe -posix -ansi -std=c++98
+CONFIG_CFLAGS  	= $(DEBUG) $(WARN) $(C_EXTRA) @STACK_PROTECTOR_FLAGS@
+CONFIG_CXXFLAGS	= $(DEBUG) $(WARN) $(CXX_EXTRA) $(OBSERVER_CXXFLAGS) @STACK_PROTECTOR_FLAGS@
 
-CFLAGS = $(CONFIG_CFLAGS)
-CXXFLAGS = $(CONFIG_CXXFLAGS)
+CFLAGS += $(CONFIG_CFLAGS)
+CXXFLAGS += $(CONFIG_CXXFLAGS)
 
 #######################################
 # Absolute paths for all components
